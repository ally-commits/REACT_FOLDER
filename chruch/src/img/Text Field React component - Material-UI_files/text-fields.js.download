(window.webpackJsonp=window.webpackJsonp||[]).push([[141],{240:function(e,n,t){"use strict";var a=t(0);Object.defineProperty(n,"__esModule",{value:!0}),Object.defineProperty(n,"default",{enumerable:!0,get:function(){return l.default}});var l=a(t(381))},2637:function(e,n,t){__NEXT_REGISTER_PAGE("/demos/text-fields",function(){return e.exports=t(2638),{page:e.exports.default}})},2638:function(e,n,t){"use strict";var a=t(0);Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0,t(17);var l=a(t(1)),r=a(t(18)),i=t(2639),o=t(2670),s=l.default.createElement(r.default,{req:i,reqSource:o,reqPrefix:"pages/demos/text-fields"});var d=function(){return s};n.default=d},2639:function(e,n,t){var a={"./ComposedTextField.js":2640,"./CustomizedInputBase.js":2641,"./CustomizedInputs.js":2643,"./FilledInputAdornments.hooks.js":2644,"./FilledInputAdornments.js":2645,"./FilledTextFields.hooks.js":2646,"./FilledTextFields.js":2647,"./FormattedInputs.hooks.js":2648,"./FormattedInputs.js":2650,"./InputAdornments.hooks.js":2651,"./InputAdornments.js":2652,"./InputWithIcon.js":2653,"./Inputs.js":2654,"./OutlinedInputAdornments.hooks.js":2655,"./OutlinedInputAdornments.js":2656,"./OutlinedTextFields.hooks.js":2657,"./OutlinedTextFields.js":2658,"./TextFieldMargins.js":2659,"./TextFields.hooks.js":2660,"./TextFields.js":2661,"./text-fields-de.md":2662,"./text-fields-es.md":2663,"./text-fields-fr.md":2664,"./text-fields-ja.md":2665,"./text-fields-pt.md":2666,"./text-fields-ru.md":2667,"./text-fields-zh.md":2668,"./text-fields.md":2669};function l(e){var n=r(e);return t(n)}function r(e){var n=a[e];if(!(n+1)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return n}l.keys=function(){return Object.keys(a)},l.resolve=r,e.exports=l,l.id=2639},2640:function(e,n,t){"use strict";var a=t(0);Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var l=a(t(10)),r=a(t(11)),i=a(t(12)),o=a(t(13)),s=a(t(14)),d=a(t(1)),u=a(t(52)),m=(a(t(2)),t(8)),p=a(t(83)),c=a(t(36)),f=a(t(62)),h=a(t(35)),g=a(t(47)),x=a(t(84)),v=d.default.createElement(g.default,{htmlFor:"component-simple"},"Name"),b=d.default.createElement(g.default,{htmlFor:"component-helper"},"Name"),y=d.default.createElement(f.default,{id:"component-helper-text"},"Some important helper text"),F=d.default.createElement(g.default,{htmlFor:"component-disabled"},"Name"),I=d.default.createElement(f.default,null,"Disabled"),C=d.default.createElement(g.default,{htmlFor:"component-error"},"Name"),T=d.default.createElement(f.default,{id:"component-error-text"},"Error"),w=d.default.createElement(g.default,{htmlFor:"component-filled"},"Name"),P=function(e){function n(){var e,t;(0,l.default)(this,n);for(var a=arguments.length,r=new Array(a),s=0;s<a;s++)r[s]=arguments[s];return(t=(0,i.default)(this,(e=(0,o.default)(n)).call.apply(e,[this].concat(r)))).state={name:"Composed TextField"},t.handleChange=function(e){t.setState({name:e.target.value})},t}return(0,s.default)(n,e),(0,r.default)(n,[{key:"componentDidMount",value:function(){this.forceUpdate()}},{key:"render",value:function(){var e=this,n=this.props.classes;return d.default.createElement("div",{className:n.container},d.default.createElement(c.default,{className:n.formControl},v,d.default.createElement(h.default,{id:"component-simple",value:this.state.name,onChange:this.handleChange})),d.default.createElement(c.default,{className:n.formControl},b,d.default.createElement(h.default,{id:"component-helper",value:this.state.name,onChange:this.handleChange,"aria-describedby":"component-helper-text"}),y),d.default.createElement(c.default,{className:n.formControl,disabled:!0},F,d.default.createElement(h.default,{id:"component-disabled",value:this.state.name,onChange:this.handleChange}),I),d.default.createElement(c.default,{className:n.formControl,error:!0},C,d.default.createElement(h.default,{id:"component-error",value:this.state.name,onChange:this.handleChange,"aria-describedby":"component-error-text"}),T),d.default.createElement(c.default,{className:n.formControl,variant:"outlined"},d.default.createElement(g.default,{ref:function(n){e.labelRef=u.default.findDOMNode(n)},htmlFor:"component-outlined"},"Name"),d.default.createElement(x.default,{id:"component-outlined",value:this.state.name,onChange:this.handleChange,labelWidth:this.labelRef?this.labelRef.offsetWidth:0})),d.default.createElement(c.default,{className:n.formControl,variant:"filled"},w,d.default.createElement(p.default,{id:"component-filled",value:this.state.name,onChange:this.handleChange})))}}]),n}(d.default.Component),N=(0,m.withStyles)(function(e){return{container:{display:"flex",flexWrap:"wrap"},formControl:{margin:e.spacing.unit}}})(P);n.default=N},2641:function(e,n,t){"use strict";var a=t(0);Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var l=a(t(1)),r=(a(t(2)),t(8)),i=a(t(28)),o=a(t(68)),s=a(t(81)),d=a(t(34)),u=a(t(132)),m=a(t(306)),p=a(t(2642)),c=l.default.createElement(u.default,null),f=l.default.createElement(m.default,null),h=l.default.createElement(p.default,null);var g=(0,r.withStyles)({root:{padding:"2px 4px",display:"flex",alignItems:"center",width:400},input:{marginLeft:8,flex:1},iconButton:{padding:10},divider:{width:1,height:28,margin:4}})(function(e){var n=e.classes;return l.default.createElement(i.default,{className:n.root,elevation:1},l.default.createElement(d.default,{className:n.iconButton,"aria-label":"Menu"},c),l.default.createElement(o.default,{className:n.input,placeholder:"Search Google Maps"}),l.default.createElement(d.default,{className:n.iconButton,"aria-label":"Search"},f),l.default.createElement(s.default,{className:n.divider}),l.default.createElement(d.default,{color:"primary",className:n.iconButton,"aria-label":"Directions"},h))});n.default=g},2642:function(e,n,t){"use strict";var a=t(0);Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var l=a(t(1)),r=(0,a(t(21)).default)(l.default.createElement(l.default.Fragment,null,l.default.createElement("path",{d:"M21.71 11.29l-9-9a.9959.9959 0 0 0-1.41 0l-9 9c-.39.39-.39 1.02 0 1.41l9 9c.39.39 1.02.39 1.41 0l9-9c.39-.38.39-1.01 0-1.41zM14 14.5V12h-4v3H8v-4c0-.55.45-1 1-1h5V7.5l3.5 3.5-3.5 3.5z"}),l.default.createElement("path",{fill:"none",d:"M0 0h24v24H0z"})),"Directions");n.default=r},2643:function(e,n,t){"use strict";var a=t(0);Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var l=a(t(1)),r=(a(t(2)),t(8)),i=a(t(35)),o=a(t(68)),s=a(t(47)),d=a(t(48)),u=a(t(36)),m=a(t(288)),p=a(t(70)),c=(0,r.createMuiTheme)({palette:{primary:p.default},typography:{useNextVariants:!0}});var f=(0,r.withStyles)(function(e){return{root:{display:"flex",flexWrap:"wrap"},margin:{margin:e.spacing.unit},cssLabel:{"&$cssFocused":{color:m.default[500]}},cssFocused:{},cssUnderline:{"&:after":{borderBottomColor:m.default[500]}},cssOutlinedInput:{"&$cssFocused $notchedOutline":{borderColor:m.default[500]}},notchedOutline:{},bootstrapRoot:{"label + &":{marginTop:3*e.spacing.unit}},bootstrapInput:{borderRadius:4,position:"relative",backgroundColor:e.palette.common.white,border:"1px solid #ced4da",fontSize:16,width:"auto",padding:"10px 12px",transition:e.transitions.create(["border-color","box-shadow"]),fontFamily:["-apple-system","BlinkMacSystemFont",'"Segoe UI"',"Roboto",'"Helvetica Neue"',"Arial","sans-serif",'"Apple Color Emoji"','"Segoe UI Emoji"','"Segoe UI Symbol"'].join(","),"&:focus":{borderRadius:4,borderColor:"#80bdff",boxShadow:"0 0 0 0.2rem rgba(0,123,255,.25)"}},bootstrapFormLabel:{fontSize:18}}})(function(e){var n=e.classes;return l.default.createElement("div",{className:n.root},l.default.createElement(u.default,{className:n.margin},l.default.createElement(s.default,{htmlFor:"custom-css-standard-input",classes:{root:n.cssLabel,focused:n.cssFocused}},"Custom CSS"),l.default.createElement(i.default,{id:"custom-css-standard-input",classes:{underline:n.cssUnderline}})),l.default.createElement(d.default,{className:n.margin,InputLabelProps:{classes:{root:n.cssLabel,focused:n.cssFocused}},InputProps:{classes:{root:n.cssOutlinedInput,focused:n.cssFocused,notchedOutline:n.notchedOutline}},label:"Custom CSS",variant:"outlined",id:"custom-css-outlined-input"}),l.default.createElement(r.MuiThemeProvider,{theme:c},l.default.createElement(d.default,{className:n.margin,label:"MuiThemeProvider",id:"mui-theme-provider-standard-input"}),l.default.createElement(d.default,{className:n.margin,label:"MuiThemeProvider",variant:"outlined",id:"mui-theme-provider-outlined-input"})),l.default.createElement(u.default,{className:n.margin},l.default.createElement(s.default,{shrink:!0,htmlFor:"bootstrap-input",className:n.bootstrapFormLabel},"Bootstrap"),l.default.createElement(o.default,{id:"bootstrap-input",defaultValue:"react-bootstrap",classes:{root:n.bootstrapRoot,input:n.bootstrapInput}})),l.default.createElement(o.default,{className:n.margin,defaultValue:"Naked input"}))});n.default=f},2644:function(e,n,t){"use strict";var a=t(0);Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var l=a(t(6)),r=a(t(3)),i=a(t(25)),o=a(t(1)),s=a(t(5)),d=t(29),u=a(t(34)),m=a(t(240)),p=a(t(48)),c=a(t(58)),f=a(t(424)),h=a(t(425)),g=(0,d.makeStyles)(function(e){return{root:{display:"flex",flexWrap:"wrap"},margin:{margin:e.spacing.unit},textField:{flexBasis:200}}}),x=[{value:"0-20",label:"0 to 20"},{value:"21-50",label:"21 to 50"},{value:"51-100",label:"51 to 100"}],v=o.default.createElement(m.default,{position:"start"},"Kg"),b=o.default.createElement(m.default,{position:"start"},"Kg"),y=o.default.createElement(m.default,{position:"start"},"$"),F=o.default.createElement(m.default,{position:"end"},"Kg"),I=o.default.createElement(h.default,null),C=o.default.createElement(f.default,null);var T=function(){var e=g(),n=o.default.useState({amount:"",password:"",weight:"",weightRange:"",showPassword:!1}),t=(0,i.default)(n,2),a=t[0],d=t[1],f=function(e){return function(n){d((0,r.default)({},a,(0,l.default)({},e,n.target.value)))}};return o.default.createElement("div",{className:e.root},o.default.createElement(p.default,{id:"filled-simple-start-adornment",className:(0,s.default)(e.margin,e.textField),variant:"filled",label:"With filled TextField",InputProps:{startAdornment:v}}),o.default.createElement(p.default,{select:!0,className:(0,s.default)(e.margin,e.textField),variant:"filled",label:"With Select",value:a.weightRange,onChange:f("weightRange"),InputProps:{startAdornment:b}},x.map(function(e){return o.default.createElement(c.default,{key:e.value,value:e.value},e.label)})),o.default.createElement(p.default,{id:"filled-adornment-amount",className:(0,s.default)(e.margin,e.textField),variant:"filled",label:"Amount",value:a.amount,onChange:f("amount"),InputProps:{startAdornment:y}}),o.default.createElement(p.default,{id:"filled-adornment-weight",className:(0,s.default)(e.margin,e.textField),variant:"filled",label:"Weight",value:a.weight,onChange:f("weight"),helperText:"Weight",InputProps:{endAdornment:F}}),o.default.createElement(p.default,{id:"filled-adornment-password",className:(0,s.default)(e.margin,e.textField),variant:"filled",type:a.showPassword?"text":"password",label:"Password",value:a.password,onChange:f("password"),InputProps:{endAdornment:o.default.createElement(m.default,{position:"end"},o.default.createElement(u.default,{"aria-label":"Toggle password visibility",onClick:function(){d((0,r.default)({},a,{showPassword:!a.showPassword}))}},a.showPassword?I:C))}}))};n.default=T},2645:function(e,n,t){"use strict";var a=t(0);Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var l=a(t(6)),r=a(t(10)),i=a(t(11)),o=a(t(12)),s=a(t(13)),d=a(t(14)),u=a(t(1)),m=a(t(5)),p=(a(t(2)),t(8)),c=a(t(34)),f=a(t(240)),h=a(t(48)),g=a(t(58)),x=a(t(424)),v=a(t(425)),b=[{value:"0-20",label:"0 to 20"},{value:"21-50",label:"21 to 50"},{value:"51-100",label:"51 to 100"}],y=u.default.createElement(f.default,{position:"start"},"Kg"),F=u.default.createElement(f.default,{position:"start"},"Kg"),I=u.default.createElement(f.default,{position:"start"},"$"),C=u.default.createElement(f.default,{position:"end"},"Kg"),T=u.default.createElement(v.default,null),w=u.default.createElement(x.default,null),P=function(e){function n(){var e,t;(0,r.default)(this,n);for(var a=arguments.length,i=new Array(a),d=0;d<a;d++)i[d]=arguments[d];return(t=(0,o.default)(this,(e=(0,s.default)(n)).call.apply(e,[this].concat(i)))).state={amount:"",password:"",weight:"",weightRange:"",showPassword:!1},t.handleChange=function(e){return function(n){t.setState((0,l.default)({},e,n.target.value))}},t.handleClickShowPassword=function(){t.setState(function(e){return{showPassword:!e.showPassword}})},t}return(0,d.default)(n,e),(0,i.default)(n,[{key:"render",value:function(){var e=this.props.classes;return u.default.createElement("div",{className:e.root},u.default.createElement(h.default,{id:"filled-simple-start-adornment",className:(0,m.default)(e.margin,e.textField),variant:"filled",label:"With filled TextField",InputProps:{startAdornment:y}}),u.default.createElement(h.default,{select:!0,className:(0,m.default)(e.margin,e.textField),variant:"filled",label:"With Select",value:this.state.weightRange,onChange:this.handleChange("weightRange"),InputProps:{startAdornment:F}},b.map(function(e){return u.default.createElement(g.default,{key:e.value,value:e.value},e.label)})),u.default.createElement(h.default,{id:"filled-adornment-amount",className:(0,m.default)(e.margin,e.textField),variant:"filled",label:"Amount",value:this.state.amount,onChange:this.handleChange("amount"),InputProps:{startAdornment:I}}),u.default.createElement(h.default,{id:"filled-adornment-weight",className:(0,m.default)(e.margin,e.textField),variant:"filled",label:"Weight",value:this.state.weight,onChange:this.handleChange("weight"),helperText:"Weight",InputProps:{endAdornment:C}}),u.default.createElement(h.default,{id:"filled-adornment-password",className:(0,m.default)(e.margin,e.textField),variant:"filled",type:this.state.showPassword?"text":"password",label:"Password",value:this.state.password,onChange:this.handleChange("password"),InputProps:{endAdornment:u.default.createElement(f.default,{position:"end"},u.default.createElement(c.default,{"aria-label":"Toggle password visibility",onClick:this.handleClickShowPassword},this.state.showPassword?T:w))}}))}}]),n}(u.default.Component),N=(0,p.withStyles)(function(e){return{root:{display:"flex",flexWrap:"wrap"},margin:{margin:e.spacing.unit},textField:{flexBasis:200}}})(P);n.default=N},2646:function(e,n,t){"use strict";var a=t(0);Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var l=a(t(6)),r=a(t(3)),i=a(t(25)),o=a(t(1)),s=a(t(5)),d=t(29),u=a(t(58)),m=a(t(48)),p=(0,d.makeStyles)(function(e){return{container:{display:"flex",flexWrap:"wrap"},textField:{marginLeft:e.spacing.unit,marginRight:e.spacing.unit},dense:{marginTop:16},menu:{width:200}}}),c=[{value:"USD",label:"$"},{value:"EUR",label:"€"},{value:"BTC",label:"฿"},{value:"JPY",label:"¥"}];var f=function(){var e=p(),n=o.default.useState({name:"Cat in the Hat",age:"",multiline:"Controlled",currency:"EUR"}),t=(0,i.default)(n,2),a=t[0],d=t[1],f=function(e){return function(n){d((0,r.default)({},a,(0,l.default)({},e,n.target.value)))}};return o.default.createElement("form",{className:e.container,noValidate:!0,autoComplete:"off"},o.default.createElement(m.default,{id:"filled-name",label:"Name",className:e.textField,value:a.name,onChange:f("name"),margin:"normal",variant:"filled"}),o.default.createElement(m.default,{id:"filled-uncontrolled",label:"Uncontrolled",defaultValue:"foo",className:e.textField,margin:"normal",variant:"filled"}),o.default.createElement(m.default,{required:!0,id:"filled-required",label:"Required",defaultValue:"Hello World",className:e.textField,margin:"normal",variant:"filled"}),o.default.createElement(m.default,{error:!0,id:"filled-error",label:"Error",defaultValue:"Hello World",className:e.textField,margin:"normal",variant:"filled"}),o.default.createElement(m.default,{disabled:!0,id:"filled-disabled",label:"Disabled",defaultValue:"Hello World",className:e.textField,margin:"normal",variant:"filled"}),o.default.createElement(m.default,{id:"filled-email-input",label:"Email",className:e.textField,type:"email",name:"email",autoComplete:"email",margin:"normal",variant:"filled"}),o.default.createElement(m.default,{id:"filled-password-input",label:"Password",className:e.textField,type:"password",autoComplete:"current-password",margin:"normal",variant:"filled"}),o.default.createElement(m.default,{id:"filled-read-only-input",label:"Read Only",defaultValue:"Hello World",className:e.textField,margin:"normal",InputProps:{readOnly:!0},variant:"filled"}),o.default.createElement(m.default,{id:"filled-dense",label:"Dense",className:(0,s.default)(e.textField,e.dense),margin:"dense",variant:"filled"}),o.default.createElement(m.default,{id:"filled-multiline-flexible",label:"Multiline",multiline:!0,rowsMax:"4",value:a.multiline,onChange:f("multiline"),className:e.textField,margin:"normal",helperText:"hello",variant:"filled"}),o.default.createElement(m.default,{id:"filled-multiline-static",label:"Multiline",multiline:!0,rows:"4",defaultValue:"Default Value",className:e.textField,margin:"normal",variant:"filled"}),o.default.createElement(m.default,{id:"filled-helperText",label:"Helper text",defaultValue:"Default Value",className:e.textField,helperText:"Some important text",margin:"normal",variant:"filled"}),o.default.createElement(m.default,{id:"filled-with-placeholder",label:"With placeholder",placeholder:"Placeholder",className:e.textField,margin:"normal",variant:"filled"}),o.default.createElement(m.default,{id:"filled-textarea",label:"Multiline Placeholder",placeholder:"Placeholder",multiline:!0,className:e.textField,margin:"normal",variant:"filled"}),o.default.createElement(m.default,{id:"filled-number",label:"Number",value:a.age,onChange:f("age"),type:"number",className:e.textField,InputLabelProps:{shrink:!0},margin:"normal",variant:"filled"}),o.default.createElement(m.default,{id:"filled-search",label:"Search field",type:"search",className:e.textField,margin:"normal",variant:"filled"}),o.default.createElement(m.default,{id:"filled-select-currency",select:!0,label:"Select",className:e.textField,value:a.currency,onChange:f("currency"),SelectProps:{MenuProps:{className:e.menu}},helperText:"Please select your currency",margin:"normal",variant:"filled"},c.map(function(e){return o.default.createElement(u.default,{key:e.value,value:e.value},e.label)})),o.default.createElement(m.default,{id:"filled-select-currency-native",select:!0,label:"Native select",className:e.textField,value:a.currency,onChange:f("currency"),SelectProps:{native:!0,MenuProps:{className:e.menu}},helperText:"Please select your currency",margin:"normal",variant:"filled"},c.map(function(e){return o.default.createElement("option",{key:e.value,value:e.value},e.label)})),o.default.createElement(m.default,{id:"filled-full-width",label:"Label",style:{margin:8},placeholder:"Placeholder",helperText:"Full width!",fullWidth:!0,margin:"normal",variant:"filled",InputLabelProps:{shrink:!0}}),o.default.createElement(m.default,{id:"filled-bare",className:e.textField,defaultValue:"Bare",margin:"normal",variant:"filled"}))};n.default=f},2647:function(e,n,t){"use strict";var a=t(0);Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var l=a(t(6)),r=a(t(10)),i=a(t(11)),o=a(t(12)),s=a(t(13)),d=a(t(14)),u=a(t(1)),m=(a(t(2)),a(t(5))),p=t(8),c=a(t(58)),f=a(t(48)),h=[{value:"USD",label:"$"},{value:"EUR",label:"€"},{value:"BTC",label:"฿"},{value:"JPY",label:"¥"}],g=function(e){function n(){var e,t;(0,r.default)(this,n);for(var a=arguments.length,i=new Array(a),d=0;d<a;d++)i[d]=arguments[d];return(t=(0,o.default)(this,(e=(0,s.default)(n)).call.apply(e,[this].concat(i)))).state={name:"Cat in the Hat",age:"",multiline:"Controlled",currency:"EUR"},t.handleChange=function(e){return function(n){t.setState((0,l.default)({},e,n.target.value))}},t}return(0,d.default)(n,e),(0,i.default)(n,[{key:"render",value:function(){var e=this.props.classes;return u.default.createElement("form",{className:e.container,noValidate:!0,autoComplete:"off"},u.default.createElement(f.default,{id:"filled-name",label:"Name",className:e.textField,value:this.state.name,onChange:this.handleChange("name"),margin:"normal",variant:"filled"}),u.default.createElement(f.default,{id:"filled-uncontrolled",label:"Uncontrolled",defaultValue:"foo",className:e.textField,margin:"normal",variant:"filled"}),u.default.createElement(f.default,{required:!0,id:"filled-required",label:"Required",defaultValue:"Hello World",className:e.textField,margin:"normal",variant:"filled"}),u.default.createElement(f.default,{error:!0,id:"filled-error",label:"Error",defaultValue:"Hello World",className:e.textField,margin:"normal",variant:"filled"}),u.default.createElement(f.default,{disabled:!0,id:"filled-disabled",label:"Disabled",defaultValue:"Hello World",className:e.textField,margin:"normal",variant:"filled"}),u.default.createElement(f.default,{id:"filled-email-input",label:"Email",className:e.textField,type:"email",name:"email",autoComplete:"email",margin:"normal",variant:"filled"}),u.default.createElement(f.default,{id:"filled-password-input",label:"Password",className:e.textField,type:"password",autoComplete:"current-password",margin:"normal",variant:"filled"}),u.default.createElement(f.default,{id:"filled-read-only-input",label:"Read Only",defaultValue:"Hello World",className:e.textField,margin:"normal",InputProps:{readOnly:!0},variant:"filled"}),u.default.createElement(f.default,{id:"filled-dense",label:"Dense",className:(0,m.default)(e.textField,e.dense),margin:"dense",variant:"filled"}),u.default.createElement(f.default,{id:"filled-multiline-flexible",label:"Multiline",multiline:!0,rowsMax:"4",value:this.state.multiline,onChange:this.handleChange("multiline"),className:e.textField,margin:"normal",helperText:"hello",variant:"filled"}),u.default.createElement(f.default,{id:"filled-multiline-static",label:"Multiline",multiline:!0,rows:"4",defaultValue:"Default Value",className:e.textField,margin:"normal",variant:"filled"}),u.default.createElement(f.default,{id:"filled-helperText",label:"Helper text",defaultValue:"Default Value",className:e.textField,helperText:"Some important text",margin:"normal",variant:"filled"}),u.default.createElement(f.default,{id:"filled-with-placeholder",label:"With placeholder",placeholder:"Placeholder",className:e.textField,margin:"normal",variant:"filled"}),u.default.createElement(f.default,{id:"filled-textarea",label:"Multiline Placeholder",placeholder:"Placeholder",multiline:!0,className:e.textField,margin:"normal",variant:"filled"}),u.default.createElement(f.default,{id:"filled-number",label:"Number",value:this.state.age,onChange:this.handleChange("age"),type:"number",className:e.textField,InputLabelProps:{shrink:!0},margin:"normal",variant:"filled"}),u.default.createElement(f.default,{id:"filled-search",label:"Search field",type:"search",className:e.textField,margin:"normal",variant:"filled"}),u.default.createElement(f.default,{id:"filled-select-currency",select:!0,label:"Select",className:e.textField,value:this.state.currency,onChange:this.handleChange("currency"),SelectProps:{MenuProps:{className:e.menu}},helperText:"Please select your currency",margin:"normal",variant:"filled"},h.map(function(e){return u.default.createElement(c.default,{key:e.value,value:e.value},e.label)})),u.default.createElement(f.default,{id:"filled-select-currency-native",select:!0,label:"Native select",className:e.textField,value:this.state.currency,onChange:this.handleChange("currency"),SelectProps:{native:!0,MenuProps:{className:e.menu}},helperText:"Please select your currency",margin:"normal",variant:"filled"},h.map(function(e){return u.default.createElement("option",{key:e.value,value:e.value},e.label)})),u.default.createElement(f.default,{id:"filled-full-width",label:"Label",style:{margin:8},placeholder:"Placeholder",helperText:"Full width!",fullWidth:!0,margin:"normal",variant:"filled",InputLabelProps:{shrink:!0}}),u.default.createElement(f.default,{id:"filled-bare",className:e.textField,defaultValue:"Bare",margin:"normal",variant:"filled"}))}}]),n}(u.default.Component),x=(0,p.withStyles)(function(e){return{container:{display:"flex",flexWrap:"wrap"},textField:{marginLeft:e.spacing.unit,marginRight:e.spacing.unit},dense:{marginTop:16},menu:{width:200}}})(g);n.default=x},2648:function(e,n,t){"use strict";var a=t(0);Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var l=a(t(6)),r=a(t(25)),i=a(t(3)),o=a(t(4)),s=a(t(1)),d=a(t(898)),u=a(t(899)),m=(a(t(2)),t(29)),p=a(t(35)),c=a(t(47)),f=a(t(48)),h=a(t(36)),g=(0,m.makeStyles)(function(e){return{container:{display:"flex",flexWrap:"wrap"},formControl:{margin:e.spacing.unit}}});function x(e){var n=e.inputRef,t=(0,o.default)(e,["inputRef"]);return s.default.createElement(d.default,(0,i.default)({},t,{ref:function(e){n(e?e.inputElement:null)},mask:["(",/[1-9]/,/\d/,/\d/,")"," ",/\d/,/\d/,/\d/,"-",/\d/,/\d/,/\d/,/\d/],placeholderChar:" ",showMask:!0}))}function v(e){var n=e.inputRef,t=e.onChange,a=(0,o.default)(e,["inputRef","onChange"]);return s.default.createElement(u.default,(0,i.default)({},a,{getInputRef:n,onValueChange:function(e){t({target:{value:e.value}})},thousandSeparator:!0,prefix:"$"}))}var b=s.default.createElement(c.default,{htmlFor:"formatted-text-mask-input"},"react-text-mask");var y=function(){var e=g(),n=s.default.useState({textmask:"(1  )    -    ",numberformat:"1320"}),t=(0,r.default)(n,2),a=t[0],o=t[1],d=function(e){return function(n){o((0,i.default)({},a,(0,l.default)({},e,n.target.value)))}};return s.default.createElement("div",{className:e.container},s.default.createElement(h.default,{className:e.formControl},b,s.default.createElement(p.default,{value:a.textmask,onChange:d("textmask"),id:"formatted-text-mask-input",inputComponent:x})),s.default.createElement(f.default,{className:e.formControl,label:"react-number-format",value:a.numberformat,onChange:d("numberformat"),id:"formatted-numberformat-input",InputProps:{inputComponent:v}}))};n.default=y},2649:function(e,n,t){"use strict";function a(e){var n=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],t="-"===e[0],a=t&&n,l=(e=e.replace("-","")).split(".");return{beforeDecimal:l[0],afterDecimal:l[1]||"",hasNagation:t,addNegation:a}}function l(e,n,t){for(var a="",l=t?"0":"",r=0;r<=n-1;r++)a+=e[r]||l;return a}Object.defineProperty(n,"__esModule",{value:!0}),n.noop=function(){},n.returnTrue=function(){return!0},n.charIsNumber=function(e){return!!(e||"").match(/\d/)},n.escapeRegExp=function(e){return e.replace(/[-[\]\/{}()*+?.\\^$|]/g,"\\$&")},n.getThousandsGroupRegex=function(e){switch(e){case"lakh":return/(\d+?)(?=(\d\d)+(\d)(?!\d))(\.\d+)?/g;case"wan":return/(\d)(?=(\d{4})+(?!\d))/g;case"thousand":default:return/(\d)(?=(\d{3})+(?!\d))/g}},n.splitDecimal=a,n.fixLeadingZero=function(e){if(!e)return e;var n="-"===e[0];n&&(e=e.substring(1,e.length));var t=e.split("."),a=t[0].replace(/^0+/,"")||"0",l=t[1]||"";return"".concat(n?"-":"").concat(a).concat(l?".".concat(l):"")},n.limitToScale=l,n.roundToPrecision=function(e,n,t){if(-1!==["","-"].indexOf(e))return e;var r=-1!==e.indexOf(".")&&n,i=a(e),o=i.beforeDecimal,s=i.afterDecimal,d=i.hasNagation,u=parseFloat("0.".concat(s||"0")).toFixed(n).split("."),m=o.split("").reverse().reduce(function(e,n,t){return e.length>t?(Number(e[0])+Number(n)).toString()+e.substring(1,e.length):n+e},u[0]),p=l(u[1]||"",Math.min(n,s.length),t),c=r?".":"";return"".concat(d?"-":"").concat(m).concat(c).concat(p)},n.omit=function(e,n){var t={};return Object.keys(e).forEach(function(a){n[a]||(t[a]=e[a])}),t},n.setCaretPosition=function(e,n){if(e.value=e.value,null!==e){if(e.createTextRange){var t=e.createTextRange();return t.move("character",n),t.select(),!0}return e.selectionStart||0===e.selectionStart?(e.focus(),e.setSelectionRange(n,n),!0):(e.focus(),!1)}},n.findChangedIndex=function(e,n){var t=0,a=0,l=e.length,r=n.length;for(;e[t]===n[t]&&t<l;)t++;for(;e[l-1-a]===n[r-1-a]&&r-a>t&&l-a>t;)a++;return{start:t,end:l-a}},n.clamp=function(e,n,t){return Math.min(Math.max(e,n),t)},n.getCurrentCaretPosition=function(e){return Math.max(e.selectionStart,e.selectionEnd)}},2650:function(e,n,t){"use strict";var a=t(0);Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var l=a(t(6)),r=a(t(10)),i=a(t(11)),o=a(t(12)),s=a(t(13)),d=a(t(14)),u=a(t(3)),m=a(t(4)),p=a(t(1)),c=a(t(898)),f=a(t(899)),h=(a(t(2)),t(8)),g=a(t(35)),x=a(t(47)),v=a(t(48)),b=a(t(36));function y(e){var n=e.inputRef,t=(0,m.default)(e,["inputRef"]);return p.default.createElement(c.default,(0,u.default)({},t,{ref:function(e){n(e?e.inputElement:null)},mask:["(",/[1-9]/,/\d/,/\d/,")"," ",/\d/,/\d/,/\d/,"-",/\d/,/\d/,/\d/,/\d/],placeholderChar:" ",showMask:!0}))}function F(e){var n=e.inputRef,t=e.onChange,a=(0,m.default)(e,["inputRef","onChange"]);return p.default.createElement(f.default,(0,u.default)({},a,{getInputRef:n,onValueChange:function(e){t({target:{value:e.value}})},thousandSeparator:!0,prefix:"$"}))}var I=p.default.createElement(x.default,{htmlFor:"formatted-text-mask-input"},"react-text-mask"),C=function(e){function n(){var e,t;(0,r.default)(this,n);for(var a=arguments.length,i=new Array(a),d=0;d<a;d++)i[d]=arguments[d];return(t=(0,o.default)(this,(e=(0,s.default)(n)).call.apply(e,[this].concat(i)))).state={textmask:"(1  )    -    ",numberformat:"1320"},t.handleChange=function(e){return function(n){t.setState((0,l.default)({},e,n.target.value))}},t}return(0,d.default)(n,e),(0,i.default)(n,[{key:"render",value:function(){var e=this.props.classes,n=this.state,t=n.textmask,a=n.numberformat;return p.default.createElement("div",{className:e.container},p.default.createElement(b.default,{className:e.formControl},I,p.default.createElement(g.default,{value:t,onChange:this.handleChange("textmask"),id:"formatted-text-mask-input",inputComponent:y})),p.default.createElement(v.default,{className:e.formControl,label:"react-number-format",value:a,onChange:this.handleChange("numberformat"),id:"formatted-numberformat-input",InputProps:{inputComponent:F}}))}}]),n}(p.default.Component),T=(0,h.withStyles)(function(e){return{container:{display:"flex",flexWrap:"wrap"},formControl:{margin:e.spacing.unit}}})(C);n.default=T},2651:function(e,n,t){"use strict";var a=t(0);Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var l=a(t(6)),r=a(t(3)),i=a(t(25)),o=a(t(1)),s=a(t(5)),d=t(29),u=a(t(34)),m=a(t(35)),p=a(t(47)),c=a(t(240)),f=a(t(62)),h=a(t(36)),g=a(t(48)),x=a(t(58)),v=a(t(424)),b=a(t(425)),y=(0,d.makeStyles)(function(e){return{root:{display:"flex",flexWrap:"wrap"},margin:{margin:e.spacing.unit},withoutLabel:{marginTop:3*e.spacing.unit},textField:{flexBasis:200}}}),F=[{value:"0-20",label:"0 to 20"},{value:"21-50",label:"21 to 50"},{value:"51-100",label:"51 to 100"}],I=o.default.createElement(c.default,{position:"start"},"Kg"),C=o.default.createElement(c.default,{position:"start"},"Kg"),T=o.default.createElement(p.default,{htmlFor:"adornment-amount"},"Amount"),w=o.default.createElement(c.default,{position:"start"},"$"),P=o.default.createElement(c.default,{position:"end"},"Kg"),N=o.default.createElement(f.default,{id:"weight-helper-text"},"Weight"),S=o.default.createElement(p.default,{htmlFor:"adornment-password"},"Password"),E=o.default.createElement(v.default,null),k=o.default.createElement(b.default,null);var M=function(){var e=y(),n=o.default.useState({amount:"",password:"",weight:"",weightRange:"",showPassword:!1}),t=(0,i.default)(n,2),a=t[0],d=t[1],p=function(e){return function(n){d((0,r.default)({},a,(0,l.default)({},e,n.target.value)))}};return o.default.createElement("div",{className:e.root},o.default.createElement(g.default,{label:"With normal TextField",id:"simple-start-adornment",className:(0,s.default)(e.margin,e.textField),InputProps:{startAdornment:I}}),o.default.createElement(g.default,{select:!0,label:"With Select",className:(0,s.default)(e.margin,e.textField),value:a.weightRange,onChange:p("weightRange"),InputProps:{startAdornment:C}},F.map(function(e){return o.default.createElement(x.default,{key:e.value,value:e.value},e.label)})),o.default.createElement(h.default,{fullWidth:!0,className:e.margin},T,o.default.createElement(m.default,{id:"adornment-amount",value:a.amount,onChange:p("amount"),startAdornment:w})),o.default.createElement(h.default,{className:(0,s.default)(e.margin,e.withoutLabel,e.textField)},o.default.createElement(m.default,{id:"adornment-weight",value:a.weight,onChange:p("weight"),endAdornment:P,"aria-describedby":"weight-helper-text",inputProps:{"aria-label":"Weight"}}),N),o.default.createElement(h.default,{className:(0,s.default)(e.margin,e.textField)},S,o.default.createElement(m.default,{id:"adornment-password",type:a.showPassword?"text":"password",value:a.password,onChange:p("password"),endAdornment:o.default.createElement(c.default,{position:"end"},o.default.createElement(u.default,{"aria-label":"Toggle password visibility",onClick:function(){d((0,r.default)({},a,{showPassword:!a.showPassword}))}},a.showPassword?E:k))})))};n.default=M},2652:function(e,n,t){"use strict";var a=t(0);Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var l=a(t(6)),r=a(t(10)),i=a(t(11)),o=a(t(12)),s=a(t(13)),d=a(t(14)),u=a(t(1)),m=a(t(5)),p=(a(t(2)),t(8)),c=a(t(34)),f=a(t(35)),h=a(t(47)),g=a(t(240)),x=a(t(62)),v=a(t(36)),b=a(t(48)),y=a(t(58)),F=a(t(424)),I=a(t(425)),C=[{value:"0-20",label:"0 to 20"},{value:"21-50",label:"21 to 50"},{value:"51-100",label:"51 to 100"}],T=u.default.createElement(g.default,{position:"start"},"Kg"),w=u.default.createElement(g.default,{position:"start"},"Kg"),P=u.default.createElement(h.default,{htmlFor:"adornment-amount"},"Amount"),N=u.default.createElement(g.default,{position:"start"},"$"),S=u.default.createElement(g.default,{position:"end"},"Kg"),E=u.default.createElement(x.default,{id:"weight-helper-text"},"Weight"),k=u.default.createElement(h.default,{htmlFor:"adornment-password"},"Password"),M=u.default.createElement(F.default,null),A=u.default.createElement(I.default,null),R=function(e){function n(){var e,t;(0,r.default)(this,n);for(var a=arguments.length,i=new Array(a),d=0;d<a;d++)i[d]=arguments[d];return(t=(0,o.default)(this,(e=(0,s.default)(n)).call.apply(e,[this].concat(i)))).state={amount:"",password:"",weight:"",weightRange:"",showPassword:!1},t.handleChange=function(e){return function(n){t.setState((0,l.default)({},e,n.target.value))}},t.handleClickShowPassword=function(){t.setState(function(e){return{showPassword:!e.showPassword}})},t}return(0,d.default)(n,e),(0,i.default)(n,[{key:"render",value:function(){var e=this.props.classes;return u.default.createElement("div",{className:e.root},u.default.createElement(b.default,{label:"With normal TextField",id:"simple-start-adornment",className:(0,m.default)(e.margin,e.textField),InputProps:{startAdornment:T}}),u.default.createElement(b.default,{select:!0,label:"With Select",className:(0,m.default)(e.margin,e.textField),value:this.state.weightRange,onChange:this.handleChange("weightRange"),InputProps:{startAdornment:w}},C.map(function(e){return u.default.createElement(y.default,{key:e.value,value:e.value},e.label)})),u.default.createElement(v.default,{fullWidth:!0,className:e.margin},P,u.default.createElement(f.default,{id:"adornment-amount",value:this.state.amount,onChange:this.handleChange("amount"),startAdornment:N})),u.default.createElement(v.default,{className:(0,m.default)(e.margin,e.withoutLabel,e.textField)},u.default.createElement(f.default,{id:"adornment-weight",value:this.state.weight,onChange:this.handleChange("weight"),"aria-describedby":"weight-helper-text",endAdornment:S,inputProps:{"aria-label":"Weight"}}),E),u.default.createElement(v.default,{className:(0,m.default)(e.margin,e.textField)},k,u.default.createElement(f.default,{id:"adornment-password",type:this.state.showPassword?"text":"password",value:this.state.password,onChange:this.handleChange("password"),endAdornment:u.default.createElement(g.default,{position:"end"},u.default.createElement(c.default,{"aria-label":"Toggle password visibility",onClick:this.handleClickShowPassword},this.state.showPassword?M:A))})))}}]),n}(u.default.Component),O=(0,p.withStyles)(function(e){return{root:{display:"flex",flexWrap:"wrap"},margin:{margin:e.spacing.unit},withoutLabel:{marginTop:3*e.spacing.unit},textField:{flexBasis:200}}})(R);n.default=O},2653:function(e,n,t){"use strict";var a=t(0);Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var l=a(t(1)),r=(a(t(2)),t(8)),i=a(t(35)),o=a(t(47)),s=a(t(240)),d=a(t(36)),u=a(t(48)),m=a(t(32)),p=a(t(417)),c=l.default.createElement(o.default,{htmlFor:"input-with-icon-adornment"},"With a start adornment"),f=l.default.createElement(i.default,{id:"input-with-icon-adornment",startAdornment:l.default.createElement(s.default,{position:"start"},l.default.createElement(p.default,null))}),h=l.default.createElement(s.default,{position:"start"},l.default.createElement(p.default,null)),g=l.default.createElement(m.default,{container:!0,spacing:8,alignItems:"flex-end"},l.default.createElement(m.default,{item:!0},l.default.createElement(p.default,null)),l.default.createElement(m.default,{item:!0},l.default.createElement(u.default,{id:"input-with-icon-grid",label:"With a grid"})));var x=(0,r.withStyles)(function(e){return{margin:{margin:e.spacing.unit}}})(function(e){var n=e.classes;return l.default.createElement("div",null,l.default.createElement(d.default,{className:n.margin},c,f),l.default.createElement(u.default,{className:n.margin,id:"input-with-icon-textfield",label:"TextField",InputProps:{startAdornment:h}}),l.default.createElement("div",{className:n.margin},g))});n.default=x},2654:function(e,n,t){"use strict";var a=t(0);Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var l=a(t(1)),r=(a(t(2)),t(8)),i=a(t(35));var o=(0,r.withStyles)(function(e){return{container:{display:"flex",flexWrap:"wrap"},input:{margin:e.spacing.unit}}})(function(e){var n=e.classes;return l.default.createElement("div",{className:n.container},l.default.createElement(i.default,{defaultValue:"Hello world",className:n.input,inputProps:{"aria-label":"Description"}}),l.default.createElement(i.default,{placeholder:"Placeholder",className:n.input,inputProps:{"aria-label":"Description"}}),l.default.createElement(i.default,{value:"Disabled",className:n.input,disabled:!0,inputProps:{"aria-label":"Description"}}),l.default.createElement(i.default,{defaultValue:"Error",className:n.input,error:!0,inputProps:{"aria-label":"Description"}}))});n.default=o},2655:function(e,n,t){"use strict";var a=t(0);Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var l=a(t(6)),r=a(t(3)),i=a(t(25)),o=a(t(1)),s=a(t(5)),d=t(29),u=a(t(34)),m=a(t(240)),p=a(t(48)),c=a(t(58)),f=a(t(424)),h=a(t(425)),g=(0,d.makeStyles)(function(e){return{root:{display:"flex",flexWrap:"wrap"},margin:{margin:e.spacing.unit},textField:{flexBasis:200}}}),x=[{value:"0-20",label:"0 to 20"},{value:"21-50",label:"21 to 50"},{value:"51-100",label:"51 to 100"}],v=o.default.createElement(m.default,{position:"start"},"Kg"),b=o.default.createElement(m.default,{position:"start"},"Kg"),y=o.default.createElement(m.default,{position:"start"},"$"),F=o.default.createElement(m.default,{position:"end"},"Kg"),I=o.default.createElement(h.default,null),C=o.default.createElement(f.default,null);var T=function(){var e=g(),n=o.default.useState({amount:"",password:"",weight:"",weightRange:"",showPassword:!1}),t=(0,i.default)(n,2),a=t[0],d=t[1],f=function(e){return function(n){d((0,r.default)({},a,(0,l.default)({},e,n.target.value)))}};return o.default.createElement("div",{className:e.root},o.default.createElement(p.default,{id:"outlined-simple-start-adornment",className:(0,s.default)(e.margin,e.textField),variant:"outlined",label:"With outlined TextField",InputProps:{startAdornment:v}}),o.default.createElement(p.default,{select:!0,className:(0,s.default)(e.margin,e.textField),variant:"outlined",label:"With Select",value:a.weightRange,onChange:f("weightRange"),InputProps:{startAdornment:b}},x.map(function(e){return o.default.createElement(c.default,{key:e.value,value:e.value},e.label)})),o.default.createElement(p.default,{id:"outlined-adornment-amount",className:(0,s.default)(e.margin,e.textField),variant:"outlined",label:"Amount",value:a.amount,onChange:f("amount"),InputProps:{startAdornment:y}}),o.default.createElement(p.default,{id:"outlined-adornment-weight",className:(0,s.default)(e.margin,e.textField),variant:"outlined",label:"Weight",value:a.weight,onChange:f("weight"),helperText:"Weight",InputProps:{endAdornment:F}}),o.default.createElement(p.default,{id:"outlined-adornment-password",className:(0,s.default)(e.margin,e.textField),variant:"outlined",type:a.showPassword?"text":"password",label:"Password",value:a.password,onChange:f("password"),InputProps:{endAdornment:o.default.createElement(m.default,{position:"end"},o.default.createElement(u.default,{"aria-label":"Toggle password visibility",onClick:function(){d((0,r.default)({},a,{showPassword:!a.showPassword}))}},a.showPassword?I:C))}}))};n.default=T},2656:function(e,n,t){"use strict";var a=t(0);Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var l=a(t(6)),r=a(t(10)),i=a(t(11)),o=a(t(12)),s=a(t(13)),d=a(t(14)),u=a(t(1)),m=a(t(5)),p=(a(t(2)),t(8)),c=a(t(34)),f=a(t(240)),h=a(t(48)),g=a(t(58)),x=a(t(424)),v=a(t(425)),b=[{value:"0-20",label:"0 to 20"},{value:"21-50",label:"21 to 50"},{value:"51-100",label:"51 to 100"}],y=u.default.createElement(f.default,{position:"start"},"Kg"),F=u.default.createElement(f.default,{position:"start"},"Kg"),I=u.default.createElement(f.default,{position:"start"},"$"),C=u.default.createElement(f.default,{position:"end"},"Kg"),T=u.default.createElement(v.default,null),w=u.default.createElement(x.default,null),P=function(e){function n(){var e,t;(0,r.default)(this,n);for(var a=arguments.length,i=new Array(a),d=0;d<a;d++)i[d]=arguments[d];return(t=(0,o.default)(this,(e=(0,s.default)(n)).call.apply(e,[this].concat(i)))).state={amount:"",password:"",weight:"",weightRange:"",showPassword:!1},t.handleChange=function(e){return function(n){t.setState((0,l.default)({},e,n.target.value))}},t.handleClickShowPassword=function(){t.setState(function(e){return{showPassword:!e.showPassword}})},t}return(0,d.default)(n,e),(0,i.default)(n,[{key:"render",value:function(){var e=this.props.classes;return u.default.createElement("div",{className:e.root},u.default.createElement(h.default,{id:"outlined-simple-start-adornment",className:(0,m.default)(e.margin,e.textField),variant:"outlined",label:"With outlined TextField",InputProps:{startAdornment:y}}),u.default.createElement(h.default,{select:!0,className:(0,m.default)(e.margin,e.textField),variant:"outlined",label:"With Select",value:this.state.weightRange,onChange:this.handleChange("weightRange"),InputProps:{startAdornment:F}},b.map(function(e){return u.default.createElement(g.default,{key:e.value,value:e.value},e.label)})),u.default.createElement(h.default,{id:"outlined-adornment-amount",className:(0,m.default)(e.margin,e.textField),variant:"outlined",label:"Amount",value:this.state.amount,onChange:this.handleChange("amount"),InputProps:{startAdornment:I}}),u.default.createElement(h.default,{id:"outlined-adornment-weight",className:(0,m.default)(e.margin,e.textField),variant:"outlined",label:"Weight",value:this.state.weight,onChange:this.handleChange("weight"),helperText:"Weight",InputProps:{endAdornment:C}}),u.default.createElement(h.default,{id:"outlined-adornment-password",className:(0,m.default)(e.margin,e.textField),variant:"outlined",type:this.state.showPassword?"text":"password",label:"Password",value:this.state.password,onChange:this.handleChange("password"),InputProps:{endAdornment:u.default.createElement(f.default,{position:"end"},u.default.createElement(c.default,{"aria-label":"Toggle password visibility",onClick:this.handleClickShowPassword},this.state.showPassword?T:w))}}))}}]),n}(u.default.Component),N=(0,p.withStyles)(function(e){return{root:{display:"flex",flexWrap:"wrap"},margin:{margin:e.spacing.unit},textField:{flexBasis:200}}})(P);n.default=N},2657:function(e,n,t){"use strict";var a=t(0);Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var l=a(t(6)),r=a(t(3)),i=a(t(25)),o=a(t(1)),s=a(t(5)),d=t(29),u=a(t(58)),m=a(t(48)),p=(0,d.makeStyles)(function(e){return{container:{display:"flex",flexWrap:"wrap"},textField:{marginLeft:e.spacing.unit,marginRight:e.spacing.unit},dense:{marginTop:16},menu:{width:200}}}),c=[{value:"USD",label:"$"},{value:"EUR",label:"€"},{value:"BTC",label:"฿"},{value:"JPY",label:"¥"}];var f=function(){var e=p(),n=o.default.useState({name:"Cat in the Hat",age:"",multiline:"Controlled",currency:"EUR"}),t=(0,i.default)(n,2),a=t[0],d=t[1],f=function(e){return function(n){d((0,r.default)({},a,(0,l.default)({},e,n.target.value)))}};return o.default.createElement("form",{className:e.container,noValidate:!0,autoComplete:"off"},o.default.createElement(m.default,{id:"outlined-name",label:"Name",className:e.textField,value:a.name,onChange:f("name"),margin:"normal",variant:"outlined"}),o.default.createElement(m.default,{id:"outlined-uncontrolled",label:"Uncontrolled",defaultValue:"foo",className:e.textField,margin:"normal",variant:"outlined"}),o.default.createElement(m.default,{required:!0,id:"outlined-required",label:"Required",defaultValue:"Hello World",className:e.textField,margin:"normal",variant:"outlined"}),o.default.createElement(m.default,{error:!0,id:"outlined-error",label:"Error",defaultValue:"Hello World",className:e.textField,margin:"normal",variant:"outlined"}),o.default.createElement(m.default,{disabled:!0,id:"outlined-disabled",label:"Disabled",defaultValue:"Hello World",className:e.textField,margin:"normal",variant:"outlined"}),o.default.createElement(m.default,{id:"outlined-email-input",label:"Email",className:e.textField,type:"email",name:"email",autoComplete:"email",margin:"normal",variant:"outlined"}),o.default.createElement(m.default,{id:"outlined-password-input",label:"Password",className:e.textField,type:"password",autoComplete:"current-password",margin:"normal",variant:"outlined"}),o.default.createElement(m.default,{id:"outlined-read-only-input",label:"Read Only",defaultValue:"Hello World",className:e.textField,margin:"normal",InputProps:{readOnly:!0},variant:"outlined"}),o.default.createElement(m.default,{id:"outlined-dense",label:"Dense",className:(0,s.default)(e.textField,e.dense),margin:"dense",variant:"outlined"}),o.default.createElement(m.default,{id:"outlined-multiline-flexible",label:"Multiline",multiline:!0,rowsMax:"4",value:a.multiline,onChange:f("multiline"),className:e.textField,margin:"normal",helperText:"hello",variant:"outlined"}),o.default.createElement(m.default,{id:"outlined-multiline-static",label:"Multiline",multiline:!0,rows:"4",defaultValue:"Default Value",className:e.textField,margin:"normal",variant:"outlined"}),o.default.createElement(m.default,{id:"outlined-helperText",label:"Helper text",defaultValue:"Default Value",className:e.textField,helperText:"Some important text",margin:"normal",variant:"outlined"}),o.default.createElement(m.default,{id:"outlined-with-placeholder",label:"With placeholder",placeholder:"Placeholder",className:e.textField,margin:"normal",variant:"outlined"}),o.default.createElement(m.default,{id:"outlined-textarea",label:"Multiline Placeholder",placeholder:"Placeholder",multiline:!0,className:e.textField,margin:"normal",variant:"outlined"}),o.default.createElement(m.default,{id:"outlined-number",label:"Number",value:a.age,onChange:f("age"),type:"number",className:e.textField,InputLabelProps:{shrink:!0},margin:"normal",variant:"outlined"}),o.default.createElement(m.default,{id:"outlined-search",label:"Search field",type:"search",className:e.textField,margin:"normal",variant:"outlined"}),o.default.createElement(m.default,{id:"outlined-select-currency",select:!0,label:"Select",className:e.textField,value:a.currency,onChange:f("currency"),SelectProps:{MenuProps:{className:e.menu}},helperText:"Please select your currency",margin:"normal",variant:"outlined"},c.map(function(e){return o.default.createElement(u.default,{key:e.value,value:e.value},e.label)})),o.default.createElement(m.default,{id:"outlined-select-currency-native",select:!0,label:"Native select",className:e.textField,value:a.currency,onChange:f("currency"),SelectProps:{native:!0,MenuProps:{className:e.menu}},helperText:"Please select your currency",margin:"normal",variant:"outlined"},c.map(function(e){return o.default.createElement("option",{key:e.value,value:e.value},e.label)})),o.default.createElement(m.default,{id:"outlined-full-width",label:"Label",style:{margin:8},placeholder:"Placeholder",helperText:"Full width!",fullWidth:!0,margin:"normal",variant:"outlined",InputLabelProps:{shrink:!0}}),o.default.createElement(m.default,{id:"outlined-bare",className:e.textField,defaultValue:"Bare",margin:"normal",variant:"outlined"}))};n.default=f},2658:function(e,n,t){"use strict";var a=t(0);Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var l=a(t(6)),r=a(t(10)),i=a(t(11)),o=a(t(12)),s=a(t(13)),d=a(t(14)),u=a(t(1)),m=(a(t(2)),a(t(5))),p=t(8),c=a(t(58)),f=a(t(48)),h=[{value:"USD",label:"$"},{value:"EUR",label:"€"},{value:"BTC",label:"฿"},{value:"JPY",label:"¥"}],g=function(e){function n(){var e,t;(0,r.default)(this,n);for(var a=arguments.length,i=new Array(a),d=0;d<a;d++)i[d]=arguments[d];return(t=(0,o.default)(this,(e=(0,s.default)(n)).call.apply(e,[this].concat(i)))).state={name:"Cat in the Hat",age:"",multiline:"Controlled",currency:"EUR"},t.handleChange=function(e){return function(n){t.setState((0,l.default)({},e,n.target.value))}},t}return(0,d.default)(n,e),(0,i.default)(n,[{key:"render",value:function(){var e=this.props.classes;return u.default.createElement("form",{className:e.container,noValidate:!0,autoComplete:"off"},u.default.createElement(f.default,{id:"outlined-name",label:"Name",className:e.textField,value:this.state.name,onChange:this.handleChange("name"),margin:"normal",variant:"outlined"}),u.default.createElement(f.default,{id:"outlined-uncontrolled",label:"Uncontrolled",defaultValue:"foo",className:e.textField,margin:"normal",variant:"outlined"}),u.default.createElement(f.default,{required:!0,id:"outlined-required",label:"Required",defaultValue:"Hello World",className:e.textField,margin:"normal",variant:"outlined"}),u.default.createElement(f.default,{error:!0,id:"outlined-error",label:"Error",defaultValue:"Hello World",className:e.textField,margin:"normal",variant:"outlined"}),u.default.createElement(f.default,{disabled:!0,id:"outlined-disabled",label:"Disabled",defaultValue:"Hello World",className:e.textField,margin:"normal",variant:"outlined"}),u.default.createElement(f.default,{id:"outlined-email-input",label:"Email",className:e.textField,type:"email",name:"email",autoComplete:"email",margin:"normal",variant:"outlined"}),u.default.createElement(f.default,{id:"outlined-password-input",label:"Password",className:e.textField,type:"password",autoComplete:"current-password",margin:"normal",variant:"outlined"}),u.default.createElement(f.default,{id:"outlined-read-only-input",label:"Read Only",defaultValue:"Hello World",className:e.textField,margin:"normal",InputProps:{readOnly:!0},variant:"outlined"}),u.default.createElement(f.default,{id:"outlined-dense",label:"Dense",className:(0,m.default)(e.textField,e.dense),margin:"dense",variant:"outlined"}),u.default.createElement(f.default,{id:"outlined-multiline-flexible",label:"Multiline",multiline:!0,rowsMax:"4",value:this.state.multiline,onChange:this.handleChange("multiline"),className:e.textField,margin:"normal",helperText:"hello",variant:"outlined"}),u.default.createElement(f.default,{id:"outlined-multiline-static",label:"Multiline",multiline:!0,rows:"4",defaultValue:"Default Value",className:e.textField,margin:"normal",variant:"outlined"}),u.default.createElement(f.default,{id:"outlined-helperText",label:"Helper text",defaultValue:"Default Value",className:e.textField,helperText:"Some important text",margin:"normal",variant:"outlined"}),u.default.createElement(f.default,{id:"outlined-with-placeholder",label:"With placeholder",placeholder:"Placeholder",className:e.textField,margin:"normal",variant:"outlined"}),u.default.createElement(f.default,{id:"outlined-textarea",label:"Multiline Placeholder",placeholder:"Placeholder",multiline:!0,className:e.textField,margin:"normal",variant:"outlined"}),u.default.createElement(f.default,{id:"outlined-number",label:"Number",value:this.state.age,onChange:this.handleChange("age"),type:"number",className:e.textField,InputLabelProps:{shrink:!0},margin:"normal",variant:"outlined"}),u.default.createElement(f.default,{id:"outlined-search",label:"Search field",type:"search",className:e.textField,margin:"normal",variant:"outlined"}),u.default.createElement(f.default,{id:"outlined-select-currency",select:!0,label:"Select",className:e.textField,value:this.state.currency,onChange:this.handleChange("currency"),SelectProps:{MenuProps:{className:e.menu}},helperText:"Please select your currency",margin:"normal",variant:"outlined"},h.map(function(e){return u.default.createElement(c.default,{key:e.value,value:e.value},e.label)})),u.default.createElement(f.default,{id:"outlined-select-currency-native",select:!0,label:"Native select",className:e.textField,value:this.state.currency,onChange:this.handleChange("currency"),SelectProps:{native:!0,MenuProps:{className:e.menu}},helperText:"Please select your currency",margin:"normal",variant:"outlined"},h.map(function(e){return u.default.createElement("option",{key:e.value,value:e.value},e.label)})),u.default.createElement(f.default,{id:"outlined-full-width",label:"Label",style:{margin:8},placeholder:"Placeholder",helperText:"Full width!",fullWidth:!0,margin:"normal",variant:"outlined",InputLabelProps:{shrink:!0}}),u.default.createElement(f.default,{id:"outlined-bare",className:e.textField,defaultValue:"Bare",margin:"normal",variant:"outlined"}))}}]),n}(u.default.Component),x=(0,p.withStyles)(function(e){return{container:{display:"flex",flexWrap:"wrap"},textField:{marginLeft:e.spacing.unit,marginRight:e.spacing.unit},dense:{marginTop:16},menu:{width:200}}})(g);n.default=x},2659:function(e,n,t){"use strict";var a=t(0);Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var l=a(t(1)),r=(a(t(2)),t(8)),i=a(t(48)),o=(0,r.withStyles)(function(e){return{container:{display:"flex",flexWrap:"wrap"},textField:{marginLeft:e.spacing.unit,marginRight:e.spacing.unit,width:200}}})(function(e){var n=e.classes;return l.default.createElement("div",{className:n.container},l.default.createElement(i.default,{label:"None",id:"margin-none",defaultValue:"Default Value",className:n.textField,helperText:"Some important text"}),l.default.createElement(i.default,{label:"Dense",id:"margin-dense",defaultValue:"Default Value",className:n.textField,helperText:"Some important text",margin:"dense"}),l.default.createElement(i.default,{label:"Normal",id:"margin-normal",defaultValue:"Default Value",className:n.textField,helperText:"Some important text",margin:"normal"}))});n.default=o},2660:function(e,n,t){"use strict";var a=t(0);Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var l=a(t(6)),r=a(t(3)),i=a(t(25)),o=a(t(1)),s=a(t(5)),d=t(29),u=a(t(58)),m=a(t(48)),p=(0,d.makeStyles)(function(e){return{container:{display:"flex",flexWrap:"wrap"},textField:{marginLeft:e.spacing.unit,marginRight:e.spacing.unit,width:200},dense:{marginTop:19},menu:{width:200}}}),c=[{value:"USD",label:"$"},{value:"EUR",label:"€"},{value:"BTC",label:"฿"},{value:"JPY",label:"¥"}];var f=function(){var e=p(),n=o.default.useState({name:"Cat in the Hat",age:"",multiline:"Controlled",currency:"EUR"}),t=(0,i.default)(n,2),a=t[0],d=t[1],f=function(e){return function(n){d((0,r.default)({},a,(0,l.default)({},e,n.target.value)))}};return o.default.createElement("form",{className:e.container,noValidate:!0,autoComplete:"off"},o.default.createElement(m.default,{id:"standard-name",label:"Name",className:e.textField,value:a.name,onChange:f("name"),margin:"normal"}),o.default.createElement(m.default,{id:"standard-uncontrolled",label:"Uncontrolled",defaultValue:"foo",className:e.textField,margin:"normal"}),o.default.createElement(m.default,{required:!0,id:"standard-required",label:"Required",defaultValue:"Hello World",className:e.textField,margin:"normal"}),o.default.createElement(m.default,{error:!0,id:"standard-error",label:"Error",defaultValue:"Hello World",className:e.textField,margin:"normal"}),o.default.createElement(m.default,{disabled:!0,id:"standard-disabled",label:"Disabled",defaultValue:"Hello World",className:e.textField,margin:"normal"}),o.default.createElement(m.default,{id:"standard-password-input",label:"Password",className:e.textField,type:"password",autoComplete:"current-password",margin:"normal"}),o.default.createElement(m.default,{id:"standard-read-only-input",label:"Read Only",defaultValue:"Hello World",className:e.textField,margin:"normal",InputProps:{readOnly:!0}}),o.default.createElement(m.default,{id:"standard-dense",label:"Dense",className:(0,s.default)(e.textField,e.dense),margin:"dense"}),o.default.createElement(m.default,{id:"standard-multiline-flexible",label:"Multiline",multiline:!0,rowsMax:"4",value:a.multiline,onChange:f("multiline"),className:e.textField,margin:"normal"}),o.default.createElement(m.default,{id:"standard-multiline-static",label:"Multiline",multiline:!0,rows:"4",defaultValue:"Default Value",className:e.textField,margin:"normal"}),o.default.createElement(m.default,{id:"standard-helperText",label:"Helper text",defaultValue:"Default Value",className:e.textField,helperText:"Some important text",margin:"normal"}),o.default.createElement(m.default,{id:"standard-with-placeholder",label:"With placeholder",placeholder:"Placeholder",className:e.textField,margin:"normal"}),o.default.createElement(m.default,{id:"standard-textarea",label:"With placeholder multiline",placeholder:"Placeholder",multiline:!0,className:e.textField,margin:"normal"}),o.default.createElement(m.default,{id:"standard-number",label:"Number",value:a.age,onChange:f("age"),type:"number",className:e.textField,InputLabelProps:{shrink:!0},margin:"normal"}),o.default.createElement(m.default,{id:"standard-search",label:"Search field",type:"search",className:e.textField,margin:"normal"}),o.default.createElement(m.default,{id:"standard-select-currency",select:!0,label:"Select",className:e.textField,value:a.currency,onChange:f("currency"),SelectProps:{MenuProps:{className:e.menu}},helperText:"Please select your currency",margin:"normal"},c.map(function(e){return o.default.createElement(u.default,{key:e.value,value:e.value},e.label)})),o.default.createElement(m.default,{id:"standard-select-currency-native",select:!0,label:"Native select",className:e.textField,value:a.currency,onChange:f("currency"),SelectProps:{native:!0,MenuProps:{className:e.menu}},helperText:"Please select your currency",margin:"normal"},c.map(function(e){return o.default.createElement("option",{key:e.value,value:e.value},e.label)})),o.default.createElement(m.default,{id:"standard-full-width",label:"Label",style:{margin:8},placeholder:"Placeholder",helperText:"Full width!",fullWidth:!0,margin:"normal",InputLabelProps:{shrink:!0}}),o.default.createElement(m.default,{id:"standard-bare",className:e.textField,defaultValue:"Bare",margin:"normal"}))};n.default=f},2661:function(e,n,t){"use strict";var a=t(0);Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var l=a(t(6)),r=a(t(10)),i=a(t(11)),o=a(t(12)),s=a(t(13)),d=a(t(14)),u=a(t(1)),m=(a(t(2)),a(t(5))),p=t(8),c=a(t(58)),f=a(t(48)),h=[{value:"USD",label:"$"},{value:"EUR",label:"€"},{value:"BTC",label:"฿"},{value:"JPY",label:"¥"}],g=function(e){function n(){var e,t;(0,r.default)(this,n);for(var a=arguments.length,i=new Array(a),d=0;d<a;d++)i[d]=arguments[d];return(t=(0,o.default)(this,(e=(0,s.default)(n)).call.apply(e,[this].concat(i)))).state={name:"Cat in the Hat",age:"",multiline:"Controlled",currency:"EUR"},t.handleChange=function(e){return function(n){t.setState((0,l.default)({},e,n.target.value))}},t}return(0,d.default)(n,e),(0,i.default)(n,[{key:"render",value:function(){var e=this.props.classes;return u.default.createElement("form",{className:e.container,noValidate:!0,autoComplete:"off"},u.default.createElement(f.default,{id:"standard-name",label:"Name",className:e.textField,value:this.state.name,onChange:this.handleChange("name"),margin:"normal"}),u.default.createElement(f.default,{id:"standard-uncontrolled",label:"Uncontrolled",defaultValue:"foo",className:e.textField,margin:"normal"}),u.default.createElement(f.default,{required:!0,id:"standard-required",label:"Required",defaultValue:"Hello World",className:e.textField,margin:"normal"}),u.default.createElement(f.default,{error:!0,id:"standard-error",label:"Error",defaultValue:"Hello World",className:e.textField,margin:"normal"}),u.default.createElement(f.default,{disabled:!0,id:"standard-disabled",label:"Disabled",defaultValue:"Hello World",className:e.textField,margin:"normal"}),u.default.createElement(f.default,{id:"standard-password-input",label:"Password",className:e.textField,type:"password",autoComplete:"current-password",margin:"normal"}),u.default.createElement(f.default,{id:"standard-read-only-input",label:"Read Only",defaultValue:"Hello World",className:e.textField,margin:"normal",InputProps:{readOnly:!0}}),u.default.createElement(f.default,{id:"standard-dense",label:"Dense",className:(0,m.default)(e.textField,e.dense),margin:"dense"}),u.default.createElement(f.default,{id:"standard-multiline-flexible",label:"Multiline",multiline:!0,rowsMax:"4",value:this.state.multiline,onChange:this.handleChange("multiline"),className:e.textField,margin:"normal"}),u.default.createElement(f.default,{id:"standard-multiline-static",label:"Multiline",multiline:!0,rows:"4",defaultValue:"Default Value",className:e.textField,margin:"normal"}),u.default.createElement(f.default,{id:"standard-helperText",label:"Helper text",defaultValue:"Default Value",className:e.textField,helperText:"Some important text",margin:"normal"}),u.default.createElement(f.default,{id:"standard-with-placeholder",label:"With placeholder",placeholder:"Placeholder",className:e.textField,margin:"normal"}),u.default.createElement(f.default,{id:"standard-textarea",label:"With placeholder multiline",placeholder:"Placeholder",multiline:!0,className:e.textField,margin:"normal"}),u.default.createElement(f.default,{id:"standard-number",label:"Number",value:this.state.age,onChange:this.handleChange("age"),type:"number",className:e.textField,InputLabelProps:{shrink:!0},margin:"normal"}),u.default.createElement(f.default,{id:"standard-search",label:"Search field",type:"search",className:e.textField,margin:"normal"}),u.default.createElement(f.default,{id:"standard-select-currency",select:!0,label:"Select",className:e.textField,value:this.state.currency,onChange:this.handleChange("currency"),SelectProps:{MenuProps:{className:e.menu}},helperText:"Please select your currency",margin:"normal"},h.map(function(e){return u.default.createElement(c.default,{key:e.value,value:e.value},e.label)})),u.default.createElement(f.default,{id:"standard-select-currency-native",select:!0,label:"Native select",className:e.textField,value:this.state.currency,onChange:this.handleChange("currency"),SelectProps:{native:!0,MenuProps:{className:e.menu}},helperText:"Please select your currency",margin:"normal"},h.map(function(e){return u.default.createElement("option",{key:e.value,value:e.value},e.label)})),u.default.createElement(f.default,{id:"standard-full-width",label:"Label",style:{margin:8},placeholder:"Placeholder",helperText:"Full width!",fullWidth:!0,margin:"normal",InputLabelProps:{shrink:!0}}),u.default.createElement(f.default,{id:"standard-bare",className:e.textField,defaultValue:"Bare",margin:"normal"}))}}]),n}(u.default.Component),x=(0,p.withStyles)(function(e){return{container:{display:"flex",flexWrap:"wrap"},textField:{marginLeft:e.spacing.unit,marginRight:e.spacing.unit,width:200},dense:{marginTop:19},menu:{width:200}}})(g);n.default=x},2662:function(e,n){e.exports='---\ntitle: Text Field React component\ncomponents: FilledInput, FormControl, FormHelperText, Input, InputAdornment, InputBase, InputLabel, OutlinedInput, TextField\n---\n# Text Felder\n\n<p class="description">Text Felder lassen Nutzer Text eingeben und bearbeiten.</p>\n\n[Text Felder](https://material.io/design/components/text-fields.html) erlauben Nutzern, Text in eine Benutzeroberfläche einzugeben. Sie erscheinen typischerweise in Formen und Dialogen.\n\n## TextField\n\nThe `TextField` wrapper component is a complete form control including a label, input and help text.\n\n{{"demo": "pages/demos/text-fields/TextFields.js"}}\n\n> **Note:** This version of the text field is no longer documented in the Material Design documentation.\n\n## Outlined\n\n`TextField` supports outlined styling.\n\n{{"demo": "pages/demos/text-fields/OutlinedTextFields.js"}}\n\n## Filled\n\n`TextField` supports filled styling.\n\n{{"demo": "pages/demos/text-fields/FilledTextFields.js"}}\n\n## Components\n\n`TextField` is composed of smaller components ( [`FormControl`](/api/form-control/), [`Input`](/api/input/), [`FilledInput`](/api/filled-input/), [`InputLabel`](/api/input-label/), [`OutlinedInput`](/api/outlined-input/), and [`FormHelperText`](/api/form-helper-text/) ) that you can leverage directly to significantly customize your form inputs.\n\nYou might also have noticed that some native HTML input properties are missing from the `TextField` component. This is on purpose. The component takes care of the most used properties, then it\'s up to the user to use the underlying component shown in the following demo. Still, you can use `inputProps` (and `InputProps`, `InputLabelProps` properties) if you want to avoid some boilerplate.\n\n{{"demo": "pages/demos/text-fields/ComposedTextField.js"}}\n\n## Inputs\n\n{{"demo": "pages/demos/text-fields/Inputs.js"}}\n\n## Customized inputs\n\nIf you have been reading the [overrides documentation page](/customization/overrides/) but you are not confident jumping in, here\'s an example of how you can change the main color of an Input.\n\n⚠️ Auch wenn die material design Spezifikation zur Verwendung von Themes ermutigt, liegen diese Beispiele außerhalb der üblichen Pfade.\n\n{{"demo": "pages/demos/text-fields/CustomizedInputs.js"}}\n\nCustomization does not stop at CSS, you can use composition to build custom components and give your app a unique feel. Below is an example using the [`InputBase`](/api/input-base/) component, inspired by Google Maps.\n\n{{"demo": "pages/demos/text-fields/CustomizedInputBase.js"}}\n\n## Input Adornments\n\n`Input` allows the provision of `InputAdornment`. These can be used to add a prefix, a suffix or an action to an input. For instance, you can use an icon button to hide or reveal the password.\n\n{{"demo": "pages/demos/text-fields/InputAdornments.js"}}\n\n### With icon\n\nIcons can be specified as prepended or appended.\n\n{{"demo": "pages/demos/text-fields/InputWithIcon.js"}}\n\n### Filled Input Adornments\n\n{{"demo": "pages/demos/text-fields/FilledInputAdornments.js"}}\n\n### Outlined Input Adornments\n\n{{"demo": "pages/demos/text-fields/OutlinedInputAdornments.js"}}\n\n## Layout\n\n`TextField`, `FormControl` allow the specification of `margin` to alter the vertical spacing of inputs. Using `none` (default) will not apply margins to the `FormControl`, whereas `dense` and `normal` will as well as alter other styles to meet the specification.\n\n{{"demo": "pages/demos/text-fields/TextFieldMargins.js"}}\n\n## Limitations\n\nThe input label "shrink" state isn\'t always correct. The input label is supposed to shrink as soon as the input is displaying something. In some circumstances, we can\'t determine the "shrink" state (number input, datetime input, Stripe input). You might notice an overlap.\n\n![shrink](/static/images/text-fields/shrink.png)\n\nTo workaround the issue, you can force the "shrink" state of the label.\n\n```jsx\n<TextField InputLabelProps={{ shrink: true }} />\n```\n\nor\n\n```jsx\n<InputLabel shrink>Contagem</InputLabel>\n```\n\n## Formatted inputs\n\nYou can use third-party libraries to format an input. You have to provide a custom implementation of the `<input>` element with the `inputComponent` property. The provided input component should handle the `inputRef` property. The property should be called with a value implementing the [`HTMLInputElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement) interface.\n\nThe following demo uses the [react-text-mask](https://github.com/text-mask/text-mask) and [react-number-format](https://github.com/s-yadav/react-number-format) libraries.\n\n{{"demo": "pages/demos/text-fields/FormattedInputs.js"}}\n\n## Accessibility\n\nIn order for the text field to be accessible, **the input should be linked to the label and the helper text**. The underlying DOM nodes should have this structure.\n\n```jsx\n<div class="form-control">\n  <label for="my-input">Email address</label>\n  <input id="my-input" aria-describedby="my-helper-text" />\n  <span id="my-helper-text">We\'ll never share your email.</span>\n</div>\n```\n\n- If you are using the `TextField` component, you just have to provide a unique `id`.\n- If you are composing the component:\n\n```jsx\n<FormControl>\n  <InputLabel htmlFor="my-input">Email address</InputLabel>\n  <Input id="my-input" aria-describedby="my-helper-text" />\n  <FormHelperText id="my-helper-text">We\'ll never share your email.</FormHelperText>\n</FormControl>\n```\n\n## Complementary projects\n\nFor more advanced use cases you might be able to take advantage of:\n\n- [redux-form-material-ui](https://github.com/erikras/redux-form-material-ui) A set of wrapper components to facilitate using Material UI with Redux Form.\n- [formik-material-ui](https://github.com/stackworx/formik-material-ui) Bindings for using Material-UI with formik.\n- [final-form-material-ui](https://github.com/Deadly0/final-form-material-ui) A set of wrapper components to facilitate using Material UI with Final Form.\n- [uniforms-material](https://github.com/vazco/uniforms/tree/master/packages/uniforms-material) Material-UI wrapper components for Uniforms, a set of React libraries for building forms.'},2663:function(e,n){e.exports='---\ntitle: Componente de React Campo de texto\ncomponents: FilledInput, FormControl, FormHelperText, Input, InputAdornment, InputBase, InputLabel, OutlinedInput, TextField\n---\n# Campos de texto\n\n<p class="description">Los campos de texto permiten a los usuarios ingresar y editar texto.</p>\n\nLos [campos de texto](https://material.io/design/components/text-fields.html) permiten a los usuarios ingresar texto en la interfaz de usuario. Usualmente aparecen en formularios y diálogos.\n\n## TextField\n\nEl componente `TextField` es un campo de formulario completo, incluyendo una etiqueta, el campo de texto y texto de ayuda.\n\n{{"demo": "pages/demos/text-fields/TextFields.js"}}\n\n> **Nota:** Esta versión del campo de texto ya no está incluida en la documentación oficial de Material Design.\n\n## Delineado\n\nEl componente `TextField` soporta estilos con contorno delineado.\n\n{{"demo": "pages/demos/text-fields/OutlinedTextFields.js"}}\n\n## Relleno\n\nEl componente `TextField` soporta estilos con relleno.\n\n{{"demo": "pages/demos/text-fields/FilledTextFields.js"}}\n\n## Componentes\n\nEl componente `TextField` incluye y usa subcomponentes ( [`FormControl`](/api/form-control/), [`Input`](/api/input/), [`FilledInput`](/api/filled-input/), [`InputLabel`](/api/input-label/), [`OutlinedInput`](/api/outlined-input/) y [`FormHelperText`](/api/form-helper-text/) ) que pueden ser usados directamente para personalizar campos de ingreso de texto de manera sustancial.\n\nPuede que también hayas notado que algunas propiedades nativas de input HTML no están presentes en el componente `TextField`. Esto es a propósito. El componente se encarga de programar la mayoría de las propiedades más usadas, luego depende del usuario programar las propiedades que se muestran en el siguiente demo. Aun así, se puede utilizar `inputProps` (y las propiedades `InputProps` e `InputLabelProps`) para personalizar y evitar el código boilerplate.\n\n{{"demo": "pages/demos/text-fields/ComposedTextField.js"}}\n\n## Inputs\n\n{{"demo": "pages/demos/text-fields/Inputs.js"}}\n\n## Inputs personalizados\n\nSi has estado leyendo la [página de documentación sobre overrides](/customization/overrides/) pero aun no tienes la confianza suficiente para usarlos acá hay un ejemplo de su uso para el cambio de color de un input.\n\n⚠️ A pesar de que la especificación de material design anima a usar temas, estos ejemplos no son comunes.\n\n{{"demo": "pages/demos/text-fields/CustomizedInputs.js"}}\n\nLa personalización se limita a usar CSS, también puedes usar una composición de componentes personalizados para darle a tu aplicación un estilo único. A continuación sigue un ejemplo del uso del componente [`InputBase`](/api/input-base/), inspirado por Google Maps.\n\n{{"demo": "pages/demos/text-fields/CustomizedInputBase.js"}}\n\n## Adornos de campos de texto\n\n`Input` permite el uso de `InputAdornment`. Este elemento se puede usar para agregar un prefijo, un sufijo o una acción a un campo de texto. Por ejemplo, puedes usar un botón de icono para esconder o revelar una contraseña.\n\n{{"demo": "pages/demos/text-fields/InputAdornments.js"}}\n\n### Con icono\n\nIconos se pueden poner en frente o detrás del campo de texto.\n\n{{"demo": "pages/demos/text-fields/InputWithIcon.js"}}\n\n### Adornos de campos de texto rellenos\n\n{{"demo": "pages/demos/text-fields/FilledInputAdornments.js"}}\n\n### Adornos de campos de texto delineados\n\n{{"demo": "pages/demos/text-fields/OutlinedInputAdornments.js"}}\n\n## Diseño\n\n`TextField`, `FormControl` permiten la especificación del `margin` para cambiar el espacio vertical de los campos de texto. Usar `none` (valor por defecto) no aplicará márgenes al `FormControl`, mientras que `dense` y `normal` cambiarán otros estilos para estar de acuerdo con la especificación.\n\n{{"demo": "pages/demos/text-fields/TextFieldMargins.js"}}\n\n## Limitaciones\n\nEl estado "shrink" de la etiqueta del campo de texto no está siempre correcto. La etiqueta debe achicarse al momento que el campo demuestra algun texto. En algunas circunstancias, no se puede determinar el estado "shrink" (campo de números, campo de fecha y hora, campo de Stripe). Tal vez veas una superposición.\n\n![shrink](/static/images/text-fields/shrink.png)\n\nPara resolver el problema, puedes forzar el estado "shrink" de la etiqueta.\n\n```jsx\n<TextField InputLabelProps={{ shrink: true }} />\n```\n\no\n\n```jsx\n<InputLabel shrink>Contagem</InputLabel>\n```\n\n## Campos de texto formateados\n\nPuedes usar librerías externas para formatear un campo de texto. Tienes que proporcionar una implementación personalizada del elemento `<input>` con el atributo `inputComponent`. El componente del campo de texto proporcionado debe manejar el atributo `inputRef`. El atributo debe ser creada con un valor usando el interfaz [`HTMLInputElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement).\n\nEl siguiente demo utiliza las librerías [react-text-mask](https://github.com/text-mask/text-mask) y [react-number-format](https://github.com/s-yadav/react-number-format).\n\n{{"demo": "pages/demos/text-fields/FormattedInputs.js"}}\n\n## Accesibilidad\n\nPara facilitar la accesibilidad, ** el campo debe estar vinculado a la etiqueta y al texto de ayuda**.\n\n```jsx\n<div class="form-control">\n  <label for="mi-campo">Email</label>\n  <input id="mi-campo" aria-describedby="mi-texto-de-ayuda" />\n  <span id="mi-texto-de-ayuda">Nunca compartiremos tu email.</span>\n</div>\n```\n\n- Si usas el componente `TextField`, solo tienes que proporcionar un `id` único.\n- If you are composing the component:\n\n```jsx\n<FormControl>\n  <InputLabel htmlFor="mi-campo">Email</InputLabel>\n  <Input id="mi-campo" aria-describedby="mi-texto-de-ayuda" />\n  <FormHelperText id="mi-texto-de-ayuda">Nuncac compartiremos tu email.</FormHelperText>\n</FormControl>\n```\n\n## Proyectos relacionados\n\nPara usos más avanzados tal vez puedas aprovercharte de:\n\n- [redux-form-material-ui](https://github.com/erikras/redux-form-material-ui) A set of wrapper components to facilitate using Material UI with Redux Form.\n- [formik-material-ui](https://github.com/stackworx/formik-material-ui) Bindings for using Material-UI with formik.\n- [final-form-material-ui](https://github.com/Deadly0/final-form-material-ui) A set of wrapper components to facilitate using Material UI with Final Form.\n- [uniforms-material](https://github.com/vazco/uniforms/tree/master/packages/uniforms-material) Material-UI wrapper components for Uniforms, a set of React libraries for building forms.'},2664:function(e,n){e.exports='---\ntitle: Composant React de champ de texte\ncomponents: FilledInput, FormControl, FormHelperText, Input, InputAdornment, InputBase, InputLabel, OutlinedInput, TextField\n---\n# Champ de texte\n\n<p class="description">Les champs de texte permettent aux utilisateurs d\'entrer et de modifier du texte.</p>\n\n[Les champs de texte](https://material.io/design/components/text-fields.html) permettent aux utilisateurs de saisir du texte dans une interface utilisateur. Ils apparaissent généralement dans les formulaires et les boîtes de dialogue.\n\n## TextField\n\nLe composant d\'encapsulation `TextField` est un contrôle de formulaire complet comprenant une étiquette, une entrée et un texte d\'aide.\n\n{{"demo": "pages/demos/text-fields/TextFields.js"}}\n\n> **Remarque:** Cette version du champ de texte n\'est plus documentée dans la documentation de material design.\n\n## Outlined\n\n`TextField` supports outlined styling.\n\n{{"demo": "pages/demos/text-fields/OutlinedTextFields.js"}}\n\n## Filled\n\n`TextField` supports filled styling.\n\n{{"demo": "pages/demos/text-fields/FilledTextFields.js"}}\n\n## Composants\n\n`TextField` est composé d\'éléments plus petits ( [`FormControl`](/api/form-control/), [`Input`](/api/input/), [`FilledInput`](/api/filled-input/), [`InputLabel`](/api/input-label/), [`OutlinedInput`](/api/outlined-input/), et [`FormHelperText`](/api/form-helper-text/) ) que vous pouvez utiliser directement pour personnaliser de manière significative vos entrées de formulaire.\n\nVous avez peut-être également remarqué que certaines propriétés d\'entrée HTML natives sont absentes du composant `TextField`. C\'est intentionnel. Le composant prend en charge les propriétés les plus utilisées, puis il appartient à l\'utilisateur d\'utiliser le composant sous-jacent présenté dans la démonstration suivante. Néanmoins, vous pouvez utiliser `inputProps` (et `InputProps`, `InputLabelProps` propriétés) pour aller plus vite.\n\n{{"demo": "pages/demos/text-fields/ComposedTextField.js"}}\n\n## Inputs\n\n{{"demo": "pages/demos/text-fields/Inputs.js"}}\n\n## Inputs personnalisées\n\nSi vous avez lu [la page de documentation sur la personnalisation](/customization/overrides/) mais que vous n\'êtes pas prêt pour vous lancer, voici un exemple de la façon dont vous pouvez changer la couleur principale d\'un input.\n\n⚠️ Bien que les spécifications Material Design encouragent la thématisation, ces exemples sortent des sentiers battus.\n\n{{"demo": "pages/demos/text-fields/CustomizedInputs.js"}}\n\nLa personnalisation ne se limite pas aux CSS, vous pouvez utiliser la composition pour créer des composants personnalisés et donner à votre application une sensation unique. Voici un exemple utilisant le composant [`InputBase`](/api/input-base/), inspiré de Google Maps.\n\n{{"demo": "pages/demos/text-fields/CustomizedInputBase.js"}}\n\n## Input Adornments\n\n`Input` allows the provision of `InputAdornment`. These can be used to add a prefix, a suffix or an action to an input. For instance, you can use an icon button to hide or reveal the password.\n\n{{"demo": "pages/demos/text-fields/InputAdornments.js"}}\n\n### Avec Icone\n\nIcons can be specified as prepended or appended.\n\n{{"demo": "pages/demos/text-fields/InputWithIcon.js"}}\n\n### Filled Input Adornments\n\n{{"demo": "pages/demos/text-fields/FilledInputAdornments.js"}}\n\n### Outlined Input Adornments\n\n{{"demo": "pages/demos/text-fields/OutlinedInputAdornments.js"}}\n\n## Layout\n\n`TextField`, `FormControl` allow the specification of `margin` to alter the vertical spacing of inputs. Using `none` (default) will not apply margins to the `FormControl`, whereas `dense` and `normal` will as well as alter other styles to meet the specification.\n\n{{"demo": "pages/demos/text-fields/TextFieldMargins.js"}}\n\n## Restrictions\n\nThe input label "shrink" state isn\'t always correct. The input label is supposed to shrink as soon as the input is displaying something. In some circumstances, we can\'t determine the "shrink" state (number input, datetime input, Stripe input). You might notice an overlap.\n\n![shrink](/static/images/text-fields/shrink.png)\n\nPour contourner le problème, vous pouvez forcer l\'état "shrink" de la legende.\n\n```jsx\n<TextField InputLabelProps={{ shrink: true }} />\n```\n\nou\n\n```jsx\n<InputLabel shrink>Contagem</InputLabel>\n```\n\n## Formatted inputs\n\nYou can use third-party libraries to format an input. You have to provide a custom implementation of the `<input>` element with the `inputComponent` property. The provided input component should handle the `inputRef` property. The property should be called with a value implementing the [`HTMLInputElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement) interface.\n\nThe following demo uses the [react-text-mask](https://github.com/text-mask/text-mask) and [react-number-format](https://github.com/s-yadav/react-number-format) libraries.\n\n{{"demo": "pages/demos/text-fields/FormattedInputs.js"}}\n\n## Accessibilité\n\nPour que le champ de texte soit accessible, **le champ de texte doit être lié au label et au texte d\'assistance**. Les nœuds DOM sous-jacents doivent avoir cette structure.\n\n```jsx\n<div class="form-control">\n  <label for="my-input">Email address</label>\n  <input id="my-input" aria-describedby="my-helper-text" />\n  <span id="my-helper-text">We\'ll never share your email.</span>\n</div>\n```\n\n- Si vous utilisez le composant `TextField` , il vous suffit de fournir un identifiant unique `id`.\n- Si vous composez le composant:\n\n```jsx\n<FormControl>\n  <InputLabel htmlFor="my-input">Email address</InputLabel>\n  <Input id="my-input" aria-describedby="my-helper-text" />\n  <FormHelperText id="my-helper-text">We\'ll never share your email.</FormHelperText>\n</FormControl>\n```\n\n## Projets complémentaires\n\nPour des cas d\'utilisation plus avancés, vous pourrez peut-être tirer parti des projects suivants:\n\n- [redux-form-material-ui](https://github.com/erikras/redux-form-material-ui) A set of wrapper components to facilitate using Material UI with Redux Form.\n- [formik-material-ui](https://github.com/stackworx/formik-material-ui) Bindings for using Material-UI with formik.\n- [final-form-material-ui](https://github.com/Deadly0/final-form-material-ui) A set of wrapper components to facilitate using Material UI with Final Form.\n- [uniforms-material](https://github.com/vazco/uniforms/tree/master/packages/uniforms-material) Material-UI wrapper components for Uniforms, a set of React libraries for building forms.'},2665:function(e,n){e.exports='---\ntitle: Text Field React component\ncomponents: FilledInput, FormControl, FormHelperText, Input, InputAdornment, InputBase, InputLabel, OutlinedInput, TextField\n---\n# Text Fields\n\n<p class="description">Text fields let users enter and edit text.</p>\n\n[Text fields](https://material.io/design/components/text-fields.html) allow users to enter text into a UI. They typically appear in forms and dialogs.\n\n## TextField\n\nThe `TextField` wrapper component is a complete form control including a label, input and help text.\n\n{{"demo": "pages/demos/text-fields/TextFields.js"}}\n\n> **Note:** This version of the text field is no longer documented in the Material Design documentation.\n\n## Outlined\n\n`TextField` supports outlined styling.\n\n{{"demo": "pages/demos/text-fields/OutlinedTextFields.js"}}\n\n## Filled\n\n`TextField` supports filled styling.\n\n{{"demo": "pages/demos/text-fields/FilledTextFields.js"}}\n\n## Components\n\n`TextField` is composed of smaller components ( [`FormControl`](/api/form-control/), [`Input`](/api/input/), [`FilledInput`](/api/filled-input/), [`InputLabel`](/api/input-label/), [`OutlinedInput`](/api/outlined-input/), and [`FormHelperText`](/api/form-helper-text/) ) that you can leverage directly to significantly customize your form inputs.\n\nYou might also have noticed that some native HTML input properties are missing from the `TextField` component. This is on purpose. The component takes care of the most used properties, then it\'s up to the user to use the underlying component shown in the following demo. Still, you can use `inputProps` (and `InputProps`, `InputLabelProps` properties) if you want to avoid some boilerplate.\n\n{{"demo": "pages/demos/text-fields/ComposedTextField.js"}}\n\n## Inputs\n\n{{"demo": "pages/demos/text-fields/Inputs.js"}}\n\n## Customized inputs\n\nIf you have been reading the [overrides documentation page](/customization/overrides/) but you are not confident jumping in, here\'s an example of how you can change the main color of an Input.\n\n⚠️ While the material design specification encourages theming, these examples are off the beaten path.\n\n{{"demo": "pages/demos/text-fields/CustomizedInputs.js"}}\n\nCustomization does not stop at CSS, you can use composition to build custom components and give your app a unique feel. Below is an example using the [`InputBase`](/api/input-base/) component, inspired by Google Maps.\n\n{{"demo": "pages/demos/text-fields/CustomizedInputBase.js"}}\n\n## Input Adornments\n\n`Input` allows the provision of `InputAdornment`. These can be used to add a prefix, a suffix or an action to an input. For instance, you can use an icon button to hide or reveal the password.\n\n{{"demo": "pages/demos/text-fields/InputAdornments.js"}}\n\n### With icon\n\nIcons can be specified as prepended or appended.\n\n{{"demo": "pages/demos/text-fields/InputWithIcon.js"}}\n\n### Filled Input Adornments\n\n{{"demo": "pages/demos/text-fields/FilledInputAdornments.js"}}\n\n### Outlined Input Adornments\n\n{{"demo": "pages/demos/text-fields/OutlinedInputAdornments.js"}}\n\n## Layout\n\n`TextField`, `FormControl` allow the specification of `margin` to alter the vertical spacing of inputs. Using `none` (default) will not apply margins to the `FormControl`, whereas `dense` and `normal` will as well as alter other styles to meet the specification.\n\n{{"demo": "pages/demos/text-fields/TextFieldMargins.js"}}\n\n## Limitations\n\nThe input label "shrink" state isn\'t always correct. The input label is supposed to shrink as soon as the input is displaying something. In some circumstances, we can\'t determine the "shrink" state (number input, datetime input, Stripe input). You might notice an overlap.\n\n![shrink](/static/images/text-fields/shrink.png)\n\nTo workaround the issue, you can force the "shrink" state of the label.\n\n```jsx\n<TextField InputLabelProps={{ shrink: true }} />\n```\n\nor\n\n```jsx\n<InputLabel shrink>Contagem</InputLabel>\n```\n\n## Formatted inputs\n\nYou can use third-party libraries to format an input. You have to provide a custom implementation of the `<input>` element with the `inputComponent` property. The provided input component should handle the `inputRef` property. The property should be called with a value implementing the [`HTMLInputElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement) interface.\n\nThe following demo uses the [react-text-mask](https://github.com/text-mask/text-mask) and [react-number-format](https://github.com/s-yadav/react-number-format) libraries.\n\n{{"demo": "pages/demos/text-fields/FormattedInputs.js"}}\n\n## Accessibility\n\nIn order for the text field to be accessible, **the input should be linked to the label and the helper text**. The underlying DOM nodes should have this structure.\n\n```jsx\n<div class="form-control">\n  <label for="my-input">Email address</label>\n  <input id="my-input" aria-describedby="my-helper-text" />\n  <span id="my-helper-text">We\'ll never share your email.</span>\n</div>\n```\n\n- If you are using the `TextField` component, you just have to provide a unique `id`.\n- If you are composing the component:\n\n```jsx\n<FormControl>\n  <InputLabel htmlFor="my-input">Email address</InputLabel>\n  <Input id="my-input" aria-describedby="my-helper-text" />\n  <FormHelperText id="my-helper-text">We\'ll never share your email.</FormHelperText>\n</FormControl>\n```\n\n## Complementary projects\n\nFor more advanced use cases you might be able to take advantage of:\n\n- [redux-form-material-ui](https://github.com/erikras/redux-form-material-ui) A set of wrapper components to facilitate using Material UI with Redux Form.\n- [formik-material-ui](https://github.com/stackworx/formik-material-ui) Bindings for using Material-UI with formik.\n- [final-form-material-ui](https://github.com/Deadly0/final-form-material-ui) A set of wrapper components to facilitate using Material UI with Final Form.\n- [uniforms-material](https://github.com/vazco/uniforms/tree/master/packages/uniforms-material) Material-UI wrapper components for Uniforms, a set of React libraries for building forms.'},2666:function(e,n){e.exports='---\ntitle: Componente React de Campo de Texto\ncomponents: FilledInput, FormControl, FormHelperText, Input, InputAdornment, InputBase, InputLabel, OutlinedInput, TextField\n---\n# Text Fields (Campos de Texto)\n\n<p class="description">Campos de texto permitem que os usuários digitem e editem texto.</p>\n\n[Campos de Texto](https://material.io/design/components/text-fields.html) permitem que os usuários insiram texto em uma interface de usuário. Eles geralmente aparecem em formulários e diálogos.\n\n## TextField\n\nO componente wrapper `TextField` é um controle de formulário completo, incluindo um rótulo, entrada e texto de ajuda.\n\n{{"demo": "pages/demos/text-fields/TextFields.js"}}\n\n> **Nota:** Esta versão do campo de texto não está mais documentada na documentação do Material Design.\n\n## Delineado\n\n`TextField` suporta estilo delineado.\n\n{{"demo": "pages/demos/text-fields/OutlinedTextFields.js"}}\n\n## Preenchido\n\n`TextField` suporta estilo preenchido.\n\n{{"demo": "pages/demos/text-fields/FilledTextFields.js"}}\n\n## Componentes\n\n`TextField` é composto por componentes menores ( [`FormControl`](/api/form-control/), [`Input`](/api/input/), [`FilledInput`](/api/filled-input/), [`InputLabel`](/api/input-label/), [`OutlinedInput`](/api/outlined-input/), e [`FormHelperText`](/api/form-helper-text/) ) que você pode aproveitar diretamente para personalizar significativamente as entradas do seu formulário.\n\nVocê também pode ter notado que algumas propriedades de entrada nativas do HTML estão faltando no componente `TextField`. Isto é intencional. O componente cuida das propriedades mais usadas, depois cabe ao usuário usar o componente exibido na demonstração. Ainda, você pode usar `inputProps` (`InputProps` e `InputLabelProps`) se você quiser evitar algum boilerplate.\n\n{{"demo": "pages/demos/text-fields/ComposedTextField.js"}}\n\n## Inputs\n\n{{"demo": "pages/demos/text-fields/Inputs.js"}}\n\n## Inputs Costumizados\n\nSe você leu a [página de abertura da documentação](/customization/overrides/) mas não está confiante, aqui vai um exemplo de como trocar a cor principal do Input.\n\n⚠️ Embora a especificação do design do material incentive o tema, esses exemplos estão fora do caminho comum.\n\n{{"demo": "pages/demos/text-fields/CustomizedInputs.js"}}\n\nA customização não para no CSS, você pode usar composição para criar componentes personalizados e dar ao seu aplicativo uma sensação única. Abaixo há um exemplo usando o componente [`InputBase`](/api/input-base/), inspirado pelo Google Maps.\n\n{{"demo": "pages/demos/text-fields/CustomizedInputBase.js"}}\n\n## Decoração de inputs\n\n`Input` permite o uso de `InputAdornment`. Estes podem ser usados para adicionar um prefixo, sufixo ou uma ação para uma entrada. Por exemplo, você pode usar um botão com ícone para ocultar ou revelar a senha.\n\n{{"demo": "pages/demos/text-fields/InputAdornments.js"}}\n\n### Com icon\n\nOs ícones podem ser especificados como anexados ou anexados.\n\n{{"demo": "pages/demos/text-fields/InputWithIcon.js"}}\n\n### Input com bordas preenchidas\n\n{{"demo": "pages/demos/text-fields/FilledInputAdornments.js"}}\n\n### Inputs com contornos delineados\n\n{{"demo": "pages/demos/text-fields/OutlinedInputAdornments.js"}}\n\n## Layout\n\n`TextField`, `FormControl` allow the specification of `margin` to alter the vertical spacing of inputs. Using `none` (default) will not apply margins to the `FormControl`, whereas `dense` and `normal` will as well as alter other styles to meet the specification.\n\n{{"demo": "pages/demos/text-fields/TextFieldMargins.js"}}\n\n## Limitations\n\nO label de entrada "shrink" nem sempre está correto. O input label deve encolher assim que o input estiver exibindo algo. Em algumas circunstâncias, não podemos determinar o estado de "srink" (input numérico, input datetime, input Stripe). Você pode notar uma sobreposição.\n\n![minimizar](/static/images/text-fields/shrink.png)\n\nPara contornar o problema, você pode forçar a "shrink" do label.\n\n```jsx\n<TextField InputLabelProps={{ shrink: true }} />\n```\n\nou\n\n```jsx\n<InputLabel shrink>Contagem</InputLabel>\n```\n\n## Inputs Formatados\n\nVocê pode usar bibliotecas de terceiros para formatar uma entrada. Você precisa fornecer uma implementação personalizada do elemento `<input>` com a propriedade `inputComponent`. O componente de entrada fornecido deve manipular a propriedade `inputRef`. A propriedade deve ser chamada com um valor que implementa a interface [`HTMLInputElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement).\n\nA seguinte demonstração usa as bibliotecas [react-text-mask](https://github.com/text-mask/text-mask) e [react-number-format](https://github.com/s-yadav/react-number-format).\n\n{{"demo": "pages/demos/text-fields/FormattedInputs.js"}}\n\n## Accessibility\n\nPara que o campo de texto seja acessível, **a entrada deve estar vinculada ao label e ao texto auxiliar**. Os nós DOM subjacentes devem ter essa estrutura.\n\n```jsx\n<div class="form-control">\n  <label for="my-input">Endereço de e-mail</label>\n  <input id="my-input" aria-describedby="my-helper-text" />\n  <span id="my-helper-text">Nós nunca compartilharemos seu e-mail.</span>\n</div>\n```\n\n- Se você estiver usando o componente `TextField`, basta fornecer um `id` único.\n- Se você está compondo o componente:\n\n```jsx\n<div class="form-control">\n  <label for="my-input">Endereço de e-mail</label>\n  <input id="my-input" aria-describedby="my-helper-text" />\n  <span id="my-helper-text">Nós nunca compartilharemos seu e-mail.</span>\n</div>\n```\n\n## Projetos Complementares\n\nFor more advanced use cases you might be able to take advantage of:\n\n- [redux-form-material-ui](https://github.com/erikras/redux-form-material-ui) A set of wrapper components to facilitate using Material UI with Redux Form.\n- [formik-material-ui](https://github.com/stackworx/formik-material-ui) Bindings for using Material-UI with formik.\n- [final-form-material-ui](https://github.com/Deadly0/final-form-material-ui) A set of wrapper components to facilitate using Material UI with Final Form.\n- [uniformes-material](https://github.com/vazco/uniforms/tree/master/packages/uniforms-material) Componentes Material-UI para Uniforms, um conjunto de bibliotecas React para construção de formulários.'},2667:function(e,n){e.exports='---\ntitle: Text Field React component\ncomponents: FilledInput, FormControl, FormHelperText, Input, InputAdornment, InputBase, InputLabel, OutlinedInput, TextField\n---\n# Текстовые поля\n\n<p class="description">Текстовые поля позволяют пользователям вводить и редактировать текст.</p>\n\n[Текстовые поля](https://material.io/design/components/text-fields.html) позволяют пользователям вводить текст в интерфейсe. Они обычно появляются в формах и диалогах.\n\n## TextField\n\n`TextField` представляет собой полноценный элемент управления формы, включая метку (label), само поле ввода и вспомогательный текст.\n\n{{"demo": "pages/demos/text-fields/TextFields.js"}}\n\n> **Примечание:** Эта версия текстового поля больше не документирована в спецификации Material Design.\n\n## Контурный стиль\n\n`TextField` поддерживает контурный стиль.\n\n{{"demo": "pages/demos/text-fields/OutlinedTextFields.js"}}\n\n## Заполненный стиль\n\n`TextField` поддерживает заполненный стиль.\n\n{{"demo": "pages/demos/text-fields/FilledTextFields.js"}}\n\n## Компоненты\n\n`TextField` состоит из более мелких компонентов ( [`FormControl`](/api/form-control/), [`Input`](/api/input/), [`FilledInput`](/api/filled-input/), [`InputLabel`](/api/input-label/), [`OutlinedInput`](/api/outlined-input/), и [`FormHelperText`](/api/form-helper-text/) ) которые вы можете использовать напрямую, чтобы значительно кастомизировать ваши поля ввода.\n\nВы также могли заметить, что некоторые нативные свойства ввода HTML отсутствуют в компоненте `TextField`. Это сделано специально. Компонент включает в себя наиболее часто используемые свойства, а для расширенного использования можно использовать базовый компонент, показанный в следующей демонстрации. Вы все еще можете использовать `inputProps` (и `свойства InputProps`, `InputLabelProps`), если хотите избежать излишнего кода.\n\n{{"demo": "pages/demos/text-fields/ComposedTextField.js"}}\n\n## Поля ввода\n\n{{"demo": "pages/demos/text-fields/Inputs.js"}}\n\n## Кастомизированные поля ввода\n\nЕсли вы читали [переписанную страницу документации](/customization/overrides/), но все еще не до конца уверены как будет выглядеть компонент, вот пример того, как изменить основной цвет Input-а.\n\n⚠️ Хотя спецификации материал дизайна поощряют использование тем, эти примеры не соответствуют требованиям.\n\n{{"demo": "pages/demos/text-fields/CustomizedInputs.js"}}\n\nНастройка не ограничивается CSS, вы можете использовать композицию для создания пользовательских компонентов и придать вашему приложению уникальный стиль. Ниже приведен пример использования компонента [`InputBase`](/api/input-base/), вдохновленный Google Maps.\n\n{{"demo": "pages/demos/text-fields/CustomizedInputBase.js"}}\n\n## Украшения поля ввода (Input)\n\n`Input` позволяет использовать `InputAdornment`. Их можно использовать для добавления префикса, суффикса или действия к полю ввода. Например, вы можете использовать кнопку-иконку, чтобы скрыть или показать пароль.\n\n{{"demo": "pages/demos/text-fields/InputAdornments.js"}}\n\n### С иконкой\n\nИконки могут быть указаны как предварительно добавленные или добавленные.\n\n{{"demo": "pages/demos/text-fields/InputWithIcon.js"}}\n\n### Украшение полей ввода с заполненным стилем\n\n{{"demo": "pages/demos/text-fields/FilledInputAdornments.js"}}\n\n### Украшение полей ввода с контурным стилем\n\n{{"demo": "pages/demos/text-fields/OutlinedInputAdornments.js"}}\n\n## Layout\n\n`TextField`, `FormControl` позволяет спецификации `margin` изменять вертикальные отступы для полей ввода. Использование `none` (по умолчанию) не будет применять отступы для `FormControl`, тогда как `dense` и `normal` будут применять другие стили, которые соответствуют спецификации.\n\n{{"demo": "pages/demos/text-fields/TextFieldMargins.js"}}\n\n## Ограничения\n\nСостояние метки поля ввода (label) "shrink" не всегда корректно. Предполагается, что метка поля ввода уменьшается, как только в поле ввода что-нибудь отображается. В некоторых случаях мы не можем определить состояние "shrink" (числовое поле, поле даты, Stripe input). Вы могли заметить совпадения.\n\n![сжатие](/static/images/text-fields/shrink.png)\n\nЧтобы решить эту проблему, вы можете принудительно изменить состояние метки.\n\n```jsx\n<TextField InputLabelProps={{ shrink: true }} />\n```\n\nили\n\n```jsx\n<InputLabel shrink>Contagem</InputLabel>\n```\n\n## Форматированное поле ввода\n\nВы можете использовать сторонние библиотеки для форматирования ввода. Вы должны предоставить пользовательскую реализацию элемента `<input>` со свойством `inputComponent`. Предоставленный компонент ввода должен обрабатывать свойство `inputRef`. Свойство должно вызываться со значением, реализующим интерфейс [`HTMLInputElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement).\n\nВ следующем примере используются библиотеки [response-text-mask](https://github.com/text-mask/text-mask) и [response-number-format](https://github.com/s-yadav/react-number-format).\n\n{{"demo": "pages/demos/text-fields/FormattedInputs.js"}}\n\n## Accessibility\n\nДля того, чтобы текстовое поле было доступно, **поле ввода должно быть связано с меткой и вспомогательным текстом**. Базовые узлы DOM должны иметь эту структуру.\n\n```jsx\n<div class="form-control">\n  <label for="my-input">Email address</label>\n  <input id="my-input" aria-describedby="my-helper-text" />\n  <span id="my-helper-text">We\'ll never share your email.</span>\n</div>\n```\n\n- Если вы используете компонент `TextField`, вам просто нужно предоставить уникальный `id`.\n- Если вы составляете компонент:\n\n```jsx\n<FormControl>\n  <InputLabel htmlFor="my-input">Email address</InputLabel>\n  <Input id="my-input" aria-describedby="my-helper-text" />\n  <FormHelperText id="my-helper-text">We\'ll never share your email.</FormHelperText>\n</FormControl>\n```\n\n## Дополнительные проекты\n\nFor more advanced use cases you might be able to take advantage of:\n\n- [redux-form-material-ui](https://github.com/erikras/redux-form-material-ui) A set of wrapper components to facilitate using Material UI with Redux Form.\n- [formik-material-ui](https://github.com/stackworx/formik-material-ui) Bindings for using Material-UI with formik.\n- [final-form-material-ui](https://github.com/Deadly0/final-form-material-ui) A set of wrapper components to facilitate using Material UI with Final Form.\n- [uniforms-material](https://github.com/vazco/uniforms/tree/master/packages/uniforms-material) компоненты оболочки Material-UI для Uniforms, набор библиотек React для создания форм.'},2668:function(e,n){e.exports='---\ntitle: 文本框 React 组件\ncomponents: FilledInput, FormControl, FormHelperText, Input, InputAdornment, InputBase, InputLabel, OutlinedInput, TextField\n---\n# Text Fields\n\n<p class="description">用户可以在文本框内输入或编辑文字</p>\n\n[文本框](https://material.io/design/components/text-fields.html)允许用户在界面中输入文本，通常，我们会在表单或者对话框中使用它们。\n\n## TextField\n\n` TextField `包装器组件是一个完整的表单控件，包括标签，输入和帮助文本。\n\n{{"demo": "pages/demos/text-fields/TextFields.js"}}\n\n> **注意：** 材料设计文档中不再记录此版本的文本字段。\n\n## 轮廓\n\n边框样式的`文本框`\n\n{{"demo": "pages/demos/text-fields/OutlinedTextFields.js"}}\n\n## 填充\n\n填充样式的`文本框`\n\n{{"demo": "pages/demos/text-fields/FilledTextFields.js"}}\n\n## 组件\n\n`TextField` 是由较小的组件组成的 ( [`FormControl`](/api/form-control/), [`Input`](/api/input/), [`FilledInput`](/api/filled-input/), [`InputLabel`](/api/input-label/), [`OutlinedInput`](/api/outlined-input/), and [`FormHelperText`](/api/form-helper-text/) ) 你可以利用这一点来自定义你的表单输入.\n\n您可能注意到了， `TextField`组件相对于原生的 HTML input 组件中缺少了一些属性。 这是故意为之的， 该组件只负责处理最常用的一些属性，如果有需求，需要由用户自己使用下面 Demo 中演示的基础组件。 但是同时, 为了避免过于模版化，您仍然可以使用 `inputProps` (和 `inputProps`, `InputLabelProps` 属性) 来控制原生组件的属性。\n\n{{"demo": "pages/demos/text-fields/ComposedTextField.js"}}\n\n## 输入\n\n{{"demo": "pages/demos/text-fields/Inputs.js"}}\n\n## 自定义输入\n\n如果您有阅读[重写文档](/customization/overrides/) 但你还不是很自信能够完全掌握， 以下是如何更改一个输入的主要颜色的示例\n\n⚠️虽然材料设计规范鼓励主题，但这些例子是不合适的。\n\n{{"demo": "pages/demos/text-fields/CustomizedInputs.js"}}\n\n自定义不会停留在CSS，您可以使用组合来构建自定义组件并为您的应用程序提供独特的感觉。 以下是使用受Google地图启发的 [`InputBase`](/api/input-base/) 组件的示例。\n\n{{"demo": "pages/demos/text-fields/CustomizedInputBase.js"}}\n\n## 修饰输入\n\n`Input` 允许提供`InputAdornment`. 这些可用于向输入添加前缀、后缀或动作. 例如, 您可以使用图标按钮来隐藏或显示密码.\n\n{{"demo": "pages/demos/text-fields/InputAdornments.js"}}\n\n### 使用图标\n\n图标可以指定为预置或追加。\n\n{{"demo": "pages/demos/text-fields/InputWithIcon.js"}}\n\n### 修饰填充\n\n{{"demo": "pages/demos/text-fields/FilledInputAdornments.js"}}\n\n### 修饰轮廓\n\n{{"demo": "pages/demos/text-fields/OutlinedInputAdornments.js"}}\n\n## 布局\n\n`TextField`, `FormControl` 允许指定`margin`来改变输入的垂直间距。 使用`none` (默认), 将不会在`FormControl`添加margins, 而 `dense`和`normal`也会改变其他样式以符合规范.\n\n{{"demo": "pages/demos/text-fields/TextFieldMargins.js"}}\n\n## 局限性\n\n输入标签 "shrink" 状态并不总是正确的。 输入标签应在输入显示内容时立即收缩。 在某些情况下, 我们无法确定 "shrink" 状态 (数字输入、日期时间输入、条带输入)。 您可能会注意到重叠。\n\n![缩小](/static/images/text-fields/shrink.png)\n\n若要解决此问题, 您可以强制标签的 "shrink" 状态。\n\n```jsx\n<TextField InputLabelProps={{ shrink: true }} />\n```\n\n或\n\n```jsx\n<InputLabel shrink>Count</InputLabel>\n```\n\n## 格式化输入\n\n您可以使用第三方库格式化输入。 您必须使用 `inputComponent` 属性提供 `<input>` 元素的自定义实现。 提供的输入组件应该处理 `inputRef` 属性。 应使用实现 [`HTMLInputElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement) 接口的值调用该属性。\n\n下面的演示使用 [react-text-mask](https://github.com/text-mask/text-mask)和 [react-number-format](https://github.com/s-yadav/react-number-format) 库。\n\n{{"demo": "pages/demos/text-fields/FormattedInputs.js"}}\n\n## 无障碍功能\n\n为了使文本字段可访问， **输入要链接到标签和辅助文本**。底层DOM节点应具有此结构。\n\n```jsx\n<div class="form-control">\n  <label for="my-input">Email address</label>\n  <input id="my-input" aria-describedby="my-helper-text" />\n  <span id="my-helper-text">We\'ll never share your email.</span>\n</div>\n```\n\n- 如果您使用的是 `TextField` 组件，则只需提供唯一的 `id`。\n- 如果您正在编写组件：\n\n```jsx\n<FormControl>\n  <InputLabel htmlFor="my-input">Email address</InputLabel>\n  <Input id="my-input" aria-describedby="my-helper-text" />\n  <FormHelperText id="my-helper-text">We\'ll never share your email.</FormHelperText>\n</FormControl>\n```\n\n## 补充项目\n\n对于更高级的用例，您可以利用：\n\n- [redux-form-material-ui](https://github.com/erikras/redux-form-material-ui) 用于更加方便地与Redux Form配搭来使用Material UI的一组包装组件。\n- [formik-material-ui](https://github.com/stackworx/formik-material-ui) 用于结合formik来使用Material-UI的绑定。\n- [final-form-material-ui](https://github.com/Deadly0/final-form-material-ui) 用于更加方便地与Final Form配搭来使用Material UI的一组包装组件。\n- [uniforms-material](https://github.com/vazco/uniforms/tree/master/packages/uniforms-material) Uniforms的Material-UI包装器组件，一组用于构建表单的React库。'},2669:function(e,n){e.exports='---\ntitle: Text Field React component\ncomponents: FilledInput, FormControl, FormHelperText, Input, InputAdornment, InputBase, InputLabel, OutlinedInput, TextField\n---\n\n# Text Fields\n\n<p class="description">Text fields let users enter and edit text.</p>\n\n[Text fields](https://material.io/design/components/text-fields.html) allow users to enter text into a UI. They typically appear in forms and dialogs.\n\n## TextField\n\nThe `TextField` wrapper component is a complete form control including a label, input and help text.\n\n{{"demo": "pages/demos/text-fields/TextFields.js"}}\n\n> **Note:** This version of the text field is no longer documented in the Material Design documentation.\n\n## Outlined\n\n`TextField` supports outlined styling.\n\n{{"demo": "pages/demos/text-fields/OutlinedTextFields.js"}}\n\n## Filled\n\n`TextField` supports filled styling.\n\n{{"demo": "pages/demos/text-fields/FilledTextFields.js"}}\n\n## Components\n\n`TextField` is composed of smaller components (\n[`FormControl`](/api/form-control/),\n[`Input`](/api/input/),\n[`FilledInput`](/api/filled-input/),\n[`InputLabel`](/api/input-label/),\n[`OutlinedInput`](/api/outlined-input/),\nand [`FormHelperText`](/api/form-helper-text/)\n) that you can leverage directly to significantly customize your form inputs.\n\nYou might also have noticed that some native HTML input properties are missing from the `TextField` component.\nThis is on purpose.\nThe component takes care of the most used properties, then it\'s up to the user to use the underlying component shown in the following demo. Still, you can use `inputProps` (and `InputProps`, `InputLabelProps` properties) if you want to avoid some boilerplate.\n\n{{"demo": "pages/demos/text-fields/ComposedTextField.js"}}\n\n## Inputs\n\n{{"demo": "pages/demos/text-fields/Inputs.js"}}\n\n## Customized inputs\n\nIf you have been reading the [overrides documentation page](/customization/overrides/)\nbut you are not confident jumping in, here\'s an example of how you can change the main color of an Input.\n\n⚠️ While the material design specification encourages theming, these examples are off the beaten path.\n\n{{"demo": "pages/demos/text-fields/CustomizedInputs.js"}}\n\nCustomization does not stop at CSS, you can use composition to build custom components and give your app a unique feel.\nBelow is an example using the [`InputBase`](/api/input-base/) component, inspired by Google Maps.\n\n{{"demo": "pages/demos/text-fields/CustomizedInputBase.js"}}\n\n## Input Adornments\n\n`Input` allows the provision of `InputAdornment`.\nThese can be used to add a prefix, a suffix or an action to an input.\nFor instance, you can use an icon button to hide or reveal the password.\n\n{{"demo": "pages/demos/text-fields/InputAdornments.js"}}\n\n### With icon\n\nIcons can be specified as prepended or appended.\n\n{{"demo": "pages/demos/text-fields/InputWithIcon.js"}}\n\n### Filled Input Adornments\n\n{{"demo": "pages/demos/text-fields/FilledInputAdornments.js"}}\n\n### Outlined Input Adornments\n\n{{"demo": "pages/demos/text-fields/OutlinedInputAdornments.js"}}\n\n## Layout\n\n`TextField`, `FormControl` allow the specification of `margin` to alter the vertical spacing of inputs. Using\n`none` (default) will not apply margins to the `FormControl`, whereas `dense` and `normal` will as well as alter\nother styles to meet the specification.\n\n{{"demo": "pages/demos/text-fields/TextFieldMargins.js"}}\n\n## Limitations\n\nThe input label "shrink" state isn\'t always correct.\nThe input label is supposed to shrink as soon as the input is displaying something.\nIn some circumstances, we can\'t determine the "shrink" state (number input, datetime input, Stripe input). You might notice an overlap.\n\n![shrink](/static/images/text-fields/shrink.png)\n\nTo workaround the issue, you can force the "shrink" state of the label.\n```jsx\n<TextField InputLabelProps={{ shrink: true }} />\n```\nor\n```jsx\n<InputLabel shrink>Count</InputLabel>\n```\n\n## Formatted inputs\n\nYou can use third-party libraries to format an input.\nYou have to provide a custom implementation of the `<input>` element with the `inputComponent` property.\nThe provided input component should handle the `inputRef` property.\nThe property should be called with a value implementing the [`HTMLInputElement`](https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement) interface.\n\nThe following demo uses the [react-text-mask](https://github.com/text-mask/text-mask) and [react-number-format](https://github.com/s-yadav/react-number-format) libraries.\n\n{{"demo": "pages/demos/text-fields/FormattedInputs.js"}}\n\n## Accessibility\n\nIn order for the text field to be accessible, **the input should be linked to the label and the helper text**. The underlying DOM nodes should have this structure.\n\n```jsx\n<div class="form-control">\n  <label for="my-input">Email address</label>\n  <input id="my-input" aria-describedby="my-helper-text" />\n  <span id="my-helper-text">We\'ll never share your email.</span>\n</div>\n```\n\n- If you are using the `TextField` component, you just have to provide a unique `id`.\n- If you are composing the component:\n\n```jsx\n<FormControl>\n  <InputLabel htmlFor="my-input">Email address</InputLabel>\n  <Input id="my-input" aria-describedby="my-helper-text" />\n  <FormHelperText id="my-helper-text">We\'ll never share your email.</FormHelperText>\n</FormControl>\n```\n\n## Complementary projects\n\nFor more advanced use cases you might be able to take advantage of:\n\n- [redux-form-material-ui](https://github.com/erikras/redux-form-material-ui) A set of wrapper components to facilitate using Material UI with Redux Form.\n- [formik-material-ui](https://github.com/stackworx/formik-material-ui) Bindings for using Material-UI with formik.\n- [final-form-material-ui](https://github.com/Deadly0/final-form-material-ui) A set of wrapper components to facilitate using Material UI with Final Form.\n- [uniforms-material](https://github.com/vazco/uniforms/tree/master/packages/uniforms-material) Material-UI wrapper components for Uniforms, a set of React libraries for building forms.\n'},2670:function(e,n,t){var a={"./ComposedTextField.js":2671,"./ComposedTextField.tsx":2672,"./CustomizedInputBase.js":2673,"./CustomizedInputs.js":2674,"./CustomizedInputs.tsx":2675,"./FilledInputAdornments.hooks.js":2676,"./FilledInputAdornments.js":2677,"./FilledInputAdornments.tsx":2678,"./FilledTextFields.hooks.js":2679,"./FilledTextFields.js":2680,"./FilledTextFields.tsx":2681,"./FormattedInputs.hooks.js":2682,"./FormattedInputs.js":2683,"./FormattedInputs.tsx":2684,"./InputAdornments.hooks.js":2685,"./InputAdornments.js":2686,"./InputAdornments.tsx":2687,"./InputWithIcon.js":2688,"./InputWithIcon.tsx":2689,"./Inputs.js":2690,"./Inputs.tsx":2691,"./OutlinedInputAdornments.hooks.js":2692,"./OutlinedInputAdornments.js":2693,"./OutlinedInputAdornments.tsx":2694,"./OutlinedTextFields.hooks.js":2695,"./OutlinedTextFields.js":2696,"./OutlinedTextFields.tsx":2697,"./TextFieldMargins.js":2698,"./TextFieldMargins.tsx":2699,"./TextFields.hooks.js":2700,"./TextFields.js":2701,"./TextFields.tsx":2702};function l(e){var n=r(e);return t(n)}function r(e){var n=a[e];if(!(n+1)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return n}l.keys=function(){return Object.keys(a)},l.resolve=r,e.exports=l,l.id=2670},2671:function(e,n){e.exports='import React from \'react\';\nimport ReactDOM from \'react-dom\';\nimport PropTypes from \'prop-types\';\nimport { withStyles } from \'@material-ui/core/styles\';\nimport FilledInput from \'@material-ui/core/FilledInput\';\nimport FormControl from \'@material-ui/core/FormControl\';\nimport FormHelperText from \'@material-ui/core/FormHelperText\';\nimport Input from \'@material-ui/core/Input\';\nimport InputLabel from \'@material-ui/core/InputLabel\';\nimport OutlinedInput from \'@material-ui/core/OutlinedInput\';\n\nconst styles = theme => ({\n  container: {\n    display: \'flex\',\n    flexWrap: \'wrap\',\n  },\n  formControl: {\n    margin: theme.spacing.unit,\n  },\n});\n\nclass ComposedTextField extends React.Component {\n  state = {\n    name: \'Composed TextField\',\n  };\n\n  componentDidMount() {\n    this.forceUpdate();\n  }\n\n  handleChange = event => {\n    this.setState({ name: event.target.value });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.container}>\n        <FormControl className={classes.formControl}>\n          <InputLabel htmlFor="component-simple">Name</InputLabel>\n          <Input id="component-simple" value={this.state.name} onChange={this.handleChange} />\n        </FormControl>\n        <FormControl className={classes.formControl}>\n          <InputLabel htmlFor="component-helper">Name</InputLabel>\n          <Input\n            id="component-helper"\n            value={this.state.name}\n            onChange={this.handleChange}\n            aria-describedby="component-helper-text"\n          />\n\n          <FormHelperText id="component-helper-text">Some important helper text</FormHelperText>\n        </FormControl>\n        <FormControl className={classes.formControl} disabled>\n          <InputLabel htmlFor="component-disabled">Name</InputLabel>\n          <Input id="component-disabled" value={this.state.name} onChange={this.handleChange} />\n          <FormHelperText>Disabled</FormHelperText>\n        </FormControl>\n        <FormControl className={classes.formControl} error>\n          <InputLabel htmlFor="component-error">Name</InputLabel>\n          <Input\n            id="component-error"\n            value={this.state.name}\n            onChange={this.handleChange}\n            aria-describedby="component-error-text"\n          />\n\n          <FormHelperText id="component-error-text">Error</FormHelperText>\n        </FormControl>\n        <FormControl className={classes.formControl} variant="outlined">\n          <InputLabel\n            ref={ref => {\n              this.labelRef = ReactDOM.findDOMNode(ref);\n            }}\n            htmlFor="component-outlined"\n          >\n            Name\n          </InputLabel>\n          <OutlinedInput\n            id="component-outlined"\n            value={this.state.name}\n            onChange={this.handleChange}\n            labelWidth={this.labelRef ? this.labelRef.offsetWidth : 0}\n          />\n        </FormControl>\n        <FormControl className={classes.formControl} variant="filled">\n          <InputLabel htmlFor="component-filled">Name</InputLabel>\n          <FilledInput id="component-filled" value={this.state.name} onChange={this.handleChange} />\n        </FormControl>\n      </div>\n    );\n  }\n}\n\nComposedTextField.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(ComposedTextField);\n'},2672:function(e,n){e.exports='import React, { ComponentClass } from \'react\';\nimport ReactDOM from \'react-dom\';\nimport PropTypes from \'prop-types\';\nimport { createStyles, Theme, withStyles, WithStyles } from \'@material-ui/core/styles\';\nimport FilledInput from \'@material-ui/core/FilledInput\';\nimport FormControl from \'@material-ui/core/FormControl\';\nimport FormHelperText from \'@material-ui/core/FormHelperText\';\nimport Input from \'@material-ui/core/Input\';\nimport InputLabel from \'@material-ui/core/InputLabel\';\nimport OutlinedInput from \'@material-ui/core/OutlinedInput\';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    container: {\n      display: \'flex\',\n      flexWrap: \'wrap\',\n    },\n    formControl: {\n      margin: theme.spacing.unit,\n    },\n  });\n\nexport interface Props extends WithStyles<typeof styles> {}\n\ninterface State {\n  name: string;\n}\n\nclass ComposedTextField extends React.Component<Props, State> {\n  labelRef: HTMLElement | null | undefined;\n\n  state = {\n    name: \'Composed TextField\',\n  };\n\n  componentDidMount() {\n    this.forceUpdate();\n  }\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ name: event.target.value });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.container}>\n        <FormControl className={classes.formControl}>\n          <InputLabel htmlFor="component-simple">Name</InputLabel>\n          <Input id="component-simple" value={this.state.name} onChange={this.handleChange} />\n        </FormControl>\n        <FormControl className={classes.formControl}>\n          <InputLabel htmlFor="component-helper">Name</InputLabel>\n          <Input\n            id="component-helper"\n            value={this.state.name}\n            onChange={this.handleChange}\n            aria-describedby="component-helper-text"\n          />\n          <FormHelperText id="component-helper-text">Some important helper text</FormHelperText>\n        </FormControl>\n        <FormControl className={classes.formControl} disabled>\n          <InputLabel htmlFor="component-disabled">Name</InputLabel>\n          <Input id="component-disabled" value={this.state.name} onChange={this.handleChange} />\n          <FormHelperText>Disabled</FormHelperText>\n        </FormControl>\n        <FormControl className={classes.formControl} error>\n          <InputLabel htmlFor="component-error">Name</InputLabel>\n          <Input\n            id="component-error"\n            value={this.state.name}\n            onChange={this.handleChange}\n            aria-describedby="component-error-text"\n          />\n          <FormHelperText id="component-error-text">Error</FormHelperText>\n        </FormControl>\n        <FormControl className={classes.formControl} variant="outlined">\n          <InputLabel\n            ref={ref => {\n              this.labelRef = ReactDOM.findDOMNode(ref!) as HTMLLabelElement | null;\n            }}\n            htmlFor="component-outlined"\n          >\n            Name\n          </InputLabel>\n          <OutlinedInput\n            id="component-outlined"\n            value={this.state.name}\n            onChange={this.handleChange}\n            labelWidth={this.labelRef ? this.labelRef.offsetWidth : 0}\n          />\n        </FormControl>\n        <FormControl className={classes.formControl} variant="filled">\n          <InputLabel htmlFor="component-filled">Name</InputLabel>\n          <FilledInput id="component-filled" value={this.state.name} onChange={this.handleChange} />\n        </FormControl>\n      </div>\n    );\n  }\n}\n\n(ComposedTextField as ComponentClass<Props>).propTypes = {\n  classes: PropTypes.object.isRequired,\n} as any;\n\nexport default withStyles(styles)(ComposedTextField);\n'},2673:function(e,n){e.exports="import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport InputBase from '@material-ui/core/InputBase';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport DirectionsIcon from '@material-ui/icons/Directions';\n\nconst styles = {\n  root: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center',\n    width: 400,\n  },\n  input: {\n    marginLeft: 8,\n    flex: 1,\n  },\n  iconButton: {\n    padding: 10,\n  },\n  divider: {\n    width: 1,\n    height: 28,\n    margin: 4,\n  },\n};\n\nfunction CustomizedInputBase(props) {\n  const { classes } = props;\n\n  return (\n    <Paper className={classes.root} elevation={1}>\n      <IconButton className={classes.iconButton} aria-label=\"Menu\">\n        <MenuIcon />\n      </IconButton>\n      <InputBase className={classes.input} placeholder=\"Search Google Maps\" />\n      <IconButton className={classes.iconButton} aria-label=\"Search\">\n        <SearchIcon />\n      </IconButton>\n      <Divider className={classes.divider} />\n      <IconButton color=\"primary\" className={classes.iconButton} aria-label=\"Directions\">\n        <DirectionsIcon />\n      </IconButton>\n    </Paper>\n  );\n}\n\nCustomizedInputBase.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(CustomizedInputBase);\n"},2674:function(e,n){e.exports="import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles, MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputBase from '@material-ui/core/InputBase';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport purple from '@material-ui/core/colors/purple';\nimport green from '@material-ui/core/colors/green';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  margin: {\n    margin: theme.spacing.unit,\n  },\n  cssLabel: {\n    '&$cssFocused': {\n      color: purple[500],\n    },\n  },\n  cssFocused: {},\n  cssUnderline: {\n    '&:after': {\n      borderBottomColor: purple[500],\n    },\n  },\n  cssOutlinedInput: {\n    '&$cssFocused $notchedOutline': {\n      borderColor: purple[500],\n    },\n  },\n  notchedOutline: {},\n  bootstrapRoot: {\n    'label + &': {\n      marginTop: theme.spacing.unit * 3,\n    },\n  },\n  bootstrapInput: {\n    borderRadius: 4,\n    position: 'relative',\n    backgroundColor: theme.palette.common.white,\n    border: '1px solid #ced4da',\n    fontSize: 16,\n    width: 'auto',\n    padding: '10px 12px',\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\n    // Use the system font instead of the default Roboto font.\n    fontFamily: [\n      '-apple-system',\n      'BlinkMacSystemFont',\n      '\"Segoe UI\"',\n      'Roboto',\n      '\"Helvetica Neue\"',\n      'Arial',\n      'sans-serif',\n      '\"Apple Color Emoji\"',\n      '\"Segoe UI Emoji\"',\n      '\"Segoe UI Symbol\"',\n    ].join(','),\n    '&:focus': {\n      borderRadius: 4,\n      borderColor: '#80bdff',\n      boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n    },\n  },\n  bootstrapFormLabel: {\n    fontSize: 18,\n  },\n});\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: green,\n  },\n  typography: { useNextVariants: true },\n});\n\nfunction CustomizedInputs(props) {\n  const { classes } = props;\n\n  return (\n    <div className={classes.root}>\n      <FormControl className={classes.margin}>\n        <InputLabel\n          htmlFor=\"custom-css-standard-input\"\n          classes={{\n            root: classes.cssLabel,\n            focused: classes.cssFocused,\n          }}\n        >\n          Custom CSS\n        </InputLabel>\n        <Input\n          id=\"custom-css-standard-input\"\n          classes={{\n            underline: classes.cssUnderline,\n          }}\n        />\n      </FormControl>\n      <TextField\n        className={classes.margin}\n        InputLabelProps={{\n          classes: {\n            root: classes.cssLabel,\n            focused: classes.cssFocused,\n          },\n        }}\n        InputProps={{\n          classes: {\n            root: classes.cssOutlinedInput,\n            focused: classes.cssFocused,\n            notchedOutline: classes.notchedOutline,\n          },\n        }}\n        label=\"Custom CSS\"\n        variant=\"outlined\"\n        id=\"custom-css-outlined-input\"\n      />\n\n      <MuiThemeProvider theme={theme}>\n        <TextField\n          className={classes.margin}\n          label=\"MuiThemeProvider\"\n          id=\"mui-theme-provider-standard-input\"\n        />\n\n        <TextField\n          className={classes.margin}\n          label=\"MuiThemeProvider\"\n          variant=\"outlined\"\n          id=\"mui-theme-provider-outlined-input\"\n        />\n      </MuiThemeProvider>\n      <FormControl className={classes.margin}>\n        <InputLabel shrink htmlFor=\"bootstrap-input\" className={classes.bootstrapFormLabel}>\n          Bootstrap\n        </InputLabel>\n        <InputBase\n          id=\"bootstrap-input\"\n          defaultValue=\"react-bootstrap\"\n          classes={{\n            root: classes.bootstrapRoot,\n            input: classes.bootstrapInput,\n          }}\n        />\n      </FormControl>\n      <InputBase className={classes.margin} defaultValue=\"Naked input\" />\n    </div>\n  );\n}\n\nCustomizedInputs.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(CustomizedInputs);\n"},2675:function(e,n){e.exports="import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  createStyles,\n  Theme,\n  withStyles,\n  WithStyles,\n  MuiThemeProvider,\n  createMuiTheme,\n} from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputBase from '@material-ui/core/InputBase';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\nimport purple from '@material-ui/core/colors/purple';\nimport green from '@material-ui/core/colors/green';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    margin: {\n      margin: theme.spacing.unit,\n    },\n    cssLabel: {\n      '&$cssFocused': {\n        color: purple[500],\n      },\n    },\n    cssFocused: {},\n    cssUnderline: {\n      '&:after': {\n        borderBottomColor: purple[500],\n      },\n    },\n    cssOutlinedInput: {\n      '&$cssFocused $notchedOutline': {\n        borderColor: purple[500],\n      },\n    },\n    notchedOutline: {},\n    bootstrapRoot: {\n      'label + &': {\n        marginTop: theme.spacing.unit * 3,\n      },\n    },\n    bootstrapInput: {\n      borderRadius: 4,\n      position: 'relative',\n      backgroundColor: theme.palette.common.white,\n      border: '1px solid #ced4da',\n      fontSize: 16,\n      width: 'auto',\n      padding: '10px 12px',\n      transition: theme.transitions.create(['border-color', 'box-shadow']),\n      // Use the system font instead of the default Roboto font.\n      fontFamily: [\n        '-apple-system',\n        'BlinkMacSystemFont',\n        '\"Segoe UI\"',\n        'Roboto',\n        '\"Helvetica Neue\"',\n        'Arial',\n        'sans-serif',\n        '\"Apple Color Emoji\"',\n        '\"Segoe UI Emoji\"',\n        '\"Segoe UI Symbol\"',\n      ].join(','),\n      '&:focus': {\n        borderRadius: 4,\n        borderColor: '#80bdff',\n        boxShadow: '0 0 0 0.2rem rgba(0,123,255,.25)',\n      },\n    },\n    bootstrapFormLabel: {\n      fontSize: 18,\n    },\n  });\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: green,\n  },\n  typography: { useNextVariants: true },\n});\n\nexport interface Props extends WithStyles<typeof styles> {}\n\nfunction CustomizedInputs(props: Props) {\n  const { classes } = props;\n\n  return (\n    <div className={classes.root}>\n      <FormControl className={classes.margin}>\n        <InputLabel\n          htmlFor=\"custom-css-standard-input\"\n          classes={{\n            root: classes.cssLabel,\n            focused: classes.cssFocused,\n          }}\n        >\n          Custom CSS\n        </InputLabel>\n        <Input\n          id=\"custom-css-standard-input\"\n          classes={{\n            underline: classes.cssUnderline,\n          }}\n        />\n      </FormControl>\n      <TextField\n        className={classes.margin}\n        InputLabelProps={{\n          classes: {\n            root: classes.cssLabel,\n            focused: classes.cssFocused,\n          },\n        }}\n        InputProps={{\n          classes: {\n            root: classes.cssOutlinedInput,\n            focused: classes.cssFocused,\n            notchedOutline: classes.notchedOutline,\n          },\n        }}\n        label=\"Custom CSS\"\n        variant=\"outlined\"\n        id=\"custom-css-outlined-input\"\n      />\n      <MuiThemeProvider theme={theme}>\n        <TextField\n          className={classes.margin}\n          label=\"MuiThemeProvider\"\n          id=\"mui-theme-provider-standard-input\"\n        />\n        <TextField\n          className={classes.margin}\n          label=\"MuiThemeProvider\"\n          variant=\"outlined\"\n          id=\"mui-theme-provider-outlined-input\"\n        />\n      </MuiThemeProvider>\n      <FormControl className={classes.margin}>\n        <InputLabel shrink htmlFor=\"bootstrap-input\" className={classes.bootstrapFormLabel}>\n          Bootstrap\n        </InputLabel>\n        <InputBase\n          id=\"bootstrap-input\"\n          defaultValue=\"react-bootstrap\"\n          classes={{\n            root: classes.bootstrapRoot,\n            input: classes.bootstrapInput,\n          }}\n        />\n      </FormControl>\n      <InputBase className={classes.margin} defaultValue=\"Naked input\" />\n    </div>\n  );\n}\n\nCustomizedInputs.propTypes = {\n  classes: PropTypes.object.isRequired,\n} as any;\n\nexport default withStyles(styles)(CustomizedInputs);\n"},2676:function(e,n){e.exports="import React from 'react';\nimport classNames from 'classnames';\nimport { makeStyles } from '@material-ui/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  margin: {\n    margin: theme.spacing.unit,\n  },\n  textField: {\n    flexBasis: 200,\n  },\n}));\n\nconst ranges = [\n  {\n    value: '0-20',\n    label: '0 to 20',\n  },\n  {\n    value: '21-50',\n    label: '21 to 50',\n  },\n  {\n    value: '51-100',\n    label: '51 to 100',\n  },\n];\n\nfunction FilledInputAdornments() {\n  const classes = useStyles();\n  const [values, setValues] = React.useState({\n    amount: '',\n    password: '',\n    weight: '',\n    weightRange: '',\n    showPassword: false,\n  });\n\n  const handleChange = prop => event => {\n    setValues({ ...values, [prop]: event.target.value });\n  };\n\n  const handleClickShowPassword = () => {\n    setValues({ ...values, showPassword: !values.showPassword });\n  };\n\n  return (\n    <div className={classes.root}>\n      <TextField\n        id=\"filled-simple-start-adornment\"\n        className={classNames(classes.margin, classes.textField)}\n        variant=\"filled\"\n        label=\"With filled TextField\"\n        InputProps={{\n          startAdornment: <InputAdornment position=\"start\">Kg</InputAdornment>,\n        }}\n      />\n      <TextField\n        select\n        className={classNames(classes.margin, classes.textField)}\n        variant=\"filled\"\n        label=\"With Select\"\n        value={values.weightRange}\n        onChange={handleChange('weightRange')}\n        InputProps={{\n          startAdornment: <InputAdornment position=\"start\">Kg</InputAdornment>,\n        }}\n      >\n        {ranges.map(option => (\n          <MenuItem key={option.value} value={option.value}>\n            {option.label}\n          </MenuItem>\n        ))}\n      </TextField>\n      <TextField\n        id=\"filled-adornment-amount\"\n        className={classNames(classes.margin, classes.textField)}\n        variant=\"filled\"\n        label=\"Amount\"\n        value={values.amount}\n        onChange={handleChange('amount')}\n        InputProps={{\n          startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\n        }}\n      />\n      <TextField\n        id=\"filled-adornment-weight\"\n        className={classNames(classes.margin, classes.textField)}\n        variant=\"filled\"\n        label=\"Weight\"\n        value={values.weight}\n        onChange={handleChange('weight')}\n        helperText=\"Weight\"\n        InputProps={{\n          endAdornment: <InputAdornment position=\"end\">Kg</InputAdornment>,\n        }}\n      />\n      <TextField\n        id=\"filled-adornment-password\"\n        className={classNames(classes.margin, classes.textField)}\n        variant=\"filled\"\n        type={values.showPassword ? 'text' : 'password'}\n        label=\"Password\"\n        value={values.password}\n        onChange={handleChange('password')}\n        InputProps={{\n          endAdornment: (\n            <InputAdornment position=\"end\">\n              <IconButton aria-label=\"Toggle password visibility\" onClick={handleClickShowPassword}>\n                {values.showPassword ? <VisibilityOff /> : <Visibility />}\n              </IconButton>\n            </InputAdornment>\n          ),\n        }}\n      />\n    </div>\n  );\n}\n\nexport default FilledInputAdornments;\n"},2677:function(e,n){e.exports="import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  margin: {\n    margin: theme.spacing.unit,\n  },\n  textField: {\n    flexBasis: 200,\n  },\n});\n\nconst ranges = [\n  {\n    value: '0-20',\n    label: '0 to 20',\n  },\n  {\n    value: '21-50',\n    label: '21 to 50',\n  },\n  {\n    value: '51-100',\n    label: '51 to 100',\n  },\n];\n\nclass FilledInputAdornments extends React.Component {\n  state = {\n    amount: '',\n    password: '',\n    weight: '',\n    weightRange: '',\n    showPassword: false,\n  };\n\n  handleChange = prop => event => {\n    this.setState({ [prop]: event.target.value });\n  };\n\n  handleClickShowPassword = () => {\n    this.setState(state => ({ showPassword: !state.showPassword }));\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <TextField\n          id=\"filled-simple-start-adornment\"\n          className={classNames(classes.margin, classes.textField)}\n          variant=\"filled\"\n          label=\"With filled TextField\"\n          InputProps={{\n            startAdornment: <InputAdornment position=\"start\">Kg</InputAdornment>,\n          }}\n        />\n\n        <TextField\n          select\n          className={classNames(classes.margin, classes.textField)}\n          variant=\"filled\"\n          label=\"With Select\"\n          value={this.state.weightRange}\n          onChange={this.handleChange('weightRange')}\n          InputProps={{\n            startAdornment: <InputAdornment position=\"start\">Kg</InputAdornment>,\n          }}\n        >\n          {ranges.map(option => (\n            <MenuItem key={option.value} value={option.value}>\n              {option.label}\n            </MenuItem>\n          ))}\n        </TextField>\n        <TextField\n          id=\"filled-adornment-amount\"\n          className={classNames(classes.margin, classes.textField)}\n          variant=\"filled\"\n          label=\"Amount\"\n          value={this.state.amount}\n          onChange={this.handleChange('amount')}\n          InputProps={{\n            startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\n          }}\n        />\n\n        <TextField\n          id=\"filled-adornment-weight\"\n          className={classNames(classes.margin, classes.textField)}\n          variant=\"filled\"\n          label=\"Weight\"\n          value={this.state.weight}\n          onChange={this.handleChange('weight')}\n          helperText=\"Weight\"\n          InputProps={{\n            endAdornment: <InputAdornment position=\"end\">Kg</InputAdornment>,\n          }}\n        />\n\n        <TextField\n          id=\"filled-adornment-password\"\n          className={classNames(classes.margin, classes.textField)}\n          variant=\"filled\"\n          type={this.state.showPassword ? 'text' : 'password'}\n          label=\"Password\"\n          value={this.state.password}\n          onChange={this.handleChange('password')}\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <IconButton\n                  aria-label=\"Toggle password visibility\"\n                  onClick={this.handleClickShowPassword}\n                >\n                  {this.state.showPassword ? <VisibilityOff /> : <Visibility />}\n                </IconButton>\n              </InputAdornment>\n            ),\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nFilledInputAdornments.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(FilledInputAdornments);\n"},2678:function(e,n){e.exports="import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    margin: {\n      margin: theme.spacing.unit,\n    },\n    textField: {\n      flexBasis: 200,\n    },\n  });\n\nconst ranges = [\n  {\n    value: '0-20',\n    label: '0 to 20',\n  },\n  {\n    value: '21-50',\n    label: '21 to 50',\n  },\n  {\n    value: '51-100',\n    label: '51 to 100',\n  },\n];\n\nexport interface Props extends WithStyles<typeof styles> {}\n\ninterface State {\n  amount: string;\n  password: string;\n  weight: string;\n  weightRange: string;\n  showPassword: boolean;\n}\n\nclass FilledInputAdornments extends React.Component<Props, State> {\n  state = {\n    amount: '',\n    password: '',\n    weight: '',\n    weightRange: '',\n    showPassword: false,\n  };\n\n  handleChange = (prop: 'amount' | 'password' | 'weight' | 'weightRange') => (\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    this.setState({ [prop]: event.target.value } as Pick<State, typeof prop>);\n  };\n\n  handleClickShowPassword = () => {\n    this.setState(state => ({ showPassword: !state.showPassword }));\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <TextField\n          id=\"filled-simple-start-adornment\"\n          className={classNames(classes.margin, classes.textField)}\n          variant=\"filled\"\n          label=\"With filled TextField\"\n          InputProps={{\n            startAdornment: <InputAdornment position=\"start\">Kg</InputAdornment>,\n          }}\n        />\n        <TextField\n          select\n          className={classNames(classes.margin, classes.textField)}\n          variant=\"filled\"\n          label=\"With Select\"\n          value={this.state.weightRange}\n          onChange={this.handleChange('weightRange')}\n          InputProps={{\n            startAdornment: <InputAdornment position=\"start\">Kg</InputAdornment>,\n          }}\n        >\n          {ranges.map(option => (\n            <MenuItem key={option.value} value={option.value}>\n              {option.label}\n            </MenuItem>\n          ))}\n        </TextField>\n        <TextField\n          id=\"filled-adornment-amount\"\n          className={classNames(classes.margin, classes.textField)}\n          variant=\"filled\"\n          label=\"Amount\"\n          value={this.state.amount}\n          onChange={this.handleChange('amount')}\n          InputProps={{\n            startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\n          }}\n        />\n        <TextField\n          id=\"filled-adornment-weight\"\n          className={classNames(classes.margin, classes.textField)}\n          variant=\"filled\"\n          label=\"Weight\"\n          value={this.state.weight}\n          onChange={this.handleChange('weight')}\n          helperText=\"Weight\"\n          InputProps={{\n            endAdornment: <InputAdornment position=\"end\">Kg</InputAdornment>,\n          }}\n        />\n        <TextField\n          id=\"filled-adornment-password\"\n          className={classNames(classes.margin, classes.textField)}\n          variant=\"filled\"\n          type={this.state.showPassword ? 'text' : 'password'}\n          label=\"Password\"\n          value={this.state.password}\n          onChange={this.handleChange('password')}\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <IconButton\n                  aria-label=\"Toggle password visibility\"\n                  onClick={this.handleClickShowPassword}\n                >\n                  {this.state.showPassword ? <VisibilityOff /> : <Visibility />}\n                </IconButton>\n              </InputAdornment>\n            ),\n          }}\n        />\n      </div>\n    );\n  }\n}\n\n(FilledInputAdornments as React.ComponentClass<Props>).propTypes = {\n  classes: PropTypes.object.isRequired,\n} as any;\n\nexport default withStyles(styles)(FilledInputAdornments);\n"},2679:function(e,n){e.exports='import React from \'react\';\nimport classNames from \'classnames\';\nimport { makeStyles } from \'@material-ui/styles\';\nimport MenuItem from \'@material-ui/core/MenuItem\';\nimport TextField from \'@material-ui/core/TextField\';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: \'flex\',\n    flexWrap: \'wrap\',\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n  },\n  dense: {\n    marginTop: 16,\n  },\n  menu: {\n    width: 200,\n  },\n}));\n\nconst currencies = [\n  {\n    value: \'USD\',\n    label: \'$\',\n  },\n  {\n    value: \'EUR\',\n    label: \'€\',\n  },\n  {\n    value: \'BTC\',\n    label: \'฿\',\n  },\n  {\n    value: \'JPY\',\n    label: \'¥\',\n  },\n];\n\nfunction FilledTextFields() {\n  const classes = useStyles();\n  const [values, setValues] = React.useState({\n    name: \'Cat in the Hat\',\n    age: \'\',\n    multiline: \'Controlled\',\n    currency: \'EUR\',\n  });\n\n  const handleChange = name => event => {\n    setValues({ ...values, [name]: event.target.value });\n  };\n\n  return (\n    <form className={classes.container} noValidate autoComplete="off">\n      <TextField\n        id="filled-name"\n        label="Name"\n        className={classes.textField}\n        value={values.name}\n        onChange={handleChange(\'name\')}\n        margin="normal"\n        variant="filled"\n      />\n      <TextField\n        id="filled-uncontrolled"\n        label="Uncontrolled"\n        defaultValue="foo"\n        className={classes.textField}\n        margin="normal"\n        variant="filled"\n      />\n      <TextField\n        required\n        id="filled-required"\n        label="Required"\n        defaultValue="Hello World"\n        className={classes.textField}\n        margin="normal"\n        variant="filled"\n      />\n      <TextField\n        error\n        id="filled-error"\n        label="Error"\n        defaultValue="Hello World"\n        className={classes.textField}\n        margin="normal"\n        variant="filled"\n      />\n      <TextField\n        disabled\n        id="filled-disabled"\n        label="Disabled"\n        defaultValue="Hello World"\n        className={classes.textField}\n        margin="normal"\n        variant="filled"\n      />\n      <TextField\n        id="filled-email-input"\n        label="Email"\n        className={classes.textField}\n        type="email"\n        name="email"\n        autoComplete="email"\n        margin="normal"\n        variant="filled"\n      />\n      <TextField\n        id="filled-password-input"\n        label="Password"\n        className={classes.textField}\n        type="password"\n        autoComplete="current-password"\n        margin="normal"\n        variant="filled"\n      />\n      <TextField\n        id="filled-read-only-input"\n        label="Read Only"\n        defaultValue="Hello World"\n        className={classes.textField}\n        margin="normal"\n        InputProps={{\n          readOnly: true,\n        }}\n        variant="filled"\n      />\n      <TextField\n        id="filled-dense"\n        label="Dense"\n        className={classNames(classes.textField, classes.dense)}\n        margin="dense"\n        variant="filled"\n      />\n      <TextField\n        id="filled-multiline-flexible"\n        label="Multiline"\n        multiline\n        rowsMax="4"\n        value={values.multiline}\n        onChange={handleChange(\'multiline\')}\n        className={classes.textField}\n        margin="normal"\n        helperText="hello"\n        variant="filled"\n      />\n      <TextField\n        id="filled-multiline-static"\n        label="Multiline"\n        multiline\n        rows="4"\n        defaultValue="Default Value"\n        className={classes.textField}\n        margin="normal"\n        variant="filled"\n      />\n      <TextField\n        id="filled-helperText"\n        label="Helper text"\n        defaultValue="Default Value"\n        className={classes.textField}\n        helperText="Some important text"\n        margin="normal"\n        variant="filled"\n      />\n      <TextField\n        id="filled-with-placeholder"\n        label="With placeholder"\n        placeholder="Placeholder"\n        className={classes.textField}\n        margin="normal"\n        variant="filled"\n      />\n      <TextField\n        id="filled-textarea"\n        label="Multiline Placeholder"\n        placeholder="Placeholder"\n        multiline\n        className={classes.textField}\n        margin="normal"\n        variant="filled"\n      />\n      <TextField\n        id="filled-number"\n        label="Number"\n        value={values.age}\n        onChange={handleChange(\'age\')}\n        type="number"\n        className={classes.textField}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        margin="normal"\n        variant="filled"\n      />\n      <TextField\n        id="filled-search"\n        label="Search field"\n        type="search"\n        className={classes.textField}\n        margin="normal"\n        variant="filled"\n      />\n      <TextField\n        id="filled-select-currency"\n        select\n        label="Select"\n        className={classes.textField}\n        value={values.currency}\n        onChange={handleChange(\'currency\')}\n        SelectProps={{\n          MenuProps: {\n            className: classes.menu,\n          },\n        }}\n        helperText="Please select your currency"\n        margin="normal"\n        variant="filled"\n      >\n        {currencies.map(option => (\n          <MenuItem key={option.value} value={option.value}>\n            {option.label}\n          </MenuItem>\n        ))}\n      </TextField>\n      <TextField\n        id="filled-select-currency-native"\n        select\n        label="Native select"\n        className={classes.textField}\n        value={values.currency}\n        onChange={handleChange(\'currency\')}\n        SelectProps={{\n          native: true,\n          MenuProps: {\n            className: classes.menu,\n          },\n        }}\n        helperText="Please select your currency"\n        margin="normal"\n        variant="filled"\n      >\n        {currencies.map(option => (\n          <option key={option.value} value={option.value}>\n            {option.label}\n          </option>\n        ))}\n      </TextField>\n      <TextField\n        id="filled-full-width"\n        label="Label"\n        style={{ margin: 8 }}\n        placeholder="Placeholder"\n        helperText="Full width!"\n        fullWidth\n        margin="normal"\n        variant="filled"\n        InputLabelProps={{\n          shrink: true,\n        }}\n      />\n      <TextField\n        id="filled-bare"\n        className={classes.textField}\n        defaultValue="Bare"\n        margin="normal"\n        variant="filled"\n      />\n    </form>\n  );\n}\n\nexport default FilledTextFields;\n'},2680:function(e,n){e.exports='import React from \'react\';\nimport PropTypes from \'prop-types\';\nimport classNames from \'classnames\';\nimport { withStyles } from \'@material-ui/core/styles\';\nimport MenuItem from \'@material-ui/core/MenuItem\';\nimport TextField from \'@material-ui/core/TextField\';\n\nconst styles = theme => ({\n  container: {\n    display: \'flex\',\n    flexWrap: \'wrap\',\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n  },\n  dense: {\n    marginTop: 16,\n  },\n  menu: {\n    width: 200,\n  },\n});\n\nconst currencies = [\n  {\n    value: \'USD\',\n    label: \'$\',\n  },\n  {\n    value: \'EUR\',\n    label: \'€\',\n  },\n  {\n    value: \'BTC\',\n    label: \'฿\',\n  },\n  {\n    value: \'JPY\',\n    label: \'¥\',\n  },\n];\n\nclass FilledTextFields extends React.Component {\n  state = {\n    name: \'Cat in the Hat\',\n    age: \'\',\n    multiline: \'Controlled\',\n    currency: \'EUR\',\n  };\n\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <form className={classes.container} noValidate autoComplete="off">\n        <TextField\n          id="filled-name"\n          label="Name"\n          className={classes.textField}\n          value={this.state.name}\n          onChange={this.handleChange(\'name\')}\n          margin="normal"\n          variant="filled"\n        />\n\n        <TextField\n          id="filled-uncontrolled"\n          label="Uncontrolled"\n          defaultValue="foo"\n          className={classes.textField}\n          margin="normal"\n          variant="filled"\n        />\n\n        <TextField\n          required\n          id="filled-required"\n          label="Required"\n          defaultValue="Hello World"\n          className={classes.textField}\n          margin="normal"\n          variant="filled"\n        />\n\n        <TextField\n          error\n          id="filled-error"\n          label="Error"\n          defaultValue="Hello World"\n          className={classes.textField}\n          margin="normal"\n          variant="filled"\n        />\n\n        <TextField\n          disabled\n          id="filled-disabled"\n          label="Disabled"\n          defaultValue="Hello World"\n          className={classes.textField}\n          margin="normal"\n          variant="filled"\n        />\n\n        <TextField\n          id="filled-email-input"\n          label="Email"\n          className={classes.textField}\n          type="email"\n          name="email"\n          autoComplete="email"\n          margin="normal"\n          variant="filled"\n        />\n\n        <TextField\n          id="filled-password-input"\n          label="Password"\n          className={classes.textField}\n          type="password"\n          autoComplete="current-password"\n          margin="normal"\n          variant="filled"\n        />\n\n        <TextField\n          id="filled-read-only-input"\n          label="Read Only"\n          defaultValue="Hello World"\n          className={classes.textField}\n          margin="normal"\n          InputProps={{\n            readOnly: true,\n          }}\n          variant="filled"\n        />\n\n        <TextField\n          id="filled-dense"\n          label="Dense"\n          className={classNames(classes.textField, classes.dense)}\n          margin="dense"\n          variant="filled"\n        />\n\n        <TextField\n          id="filled-multiline-flexible"\n          label="Multiline"\n          multiline\n          rowsMax="4"\n          value={this.state.multiline}\n          onChange={this.handleChange(\'multiline\')}\n          className={classes.textField}\n          margin="normal"\n          helperText="hello"\n          variant="filled"\n        />\n\n        <TextField\n          id="filled-multiline-static"\n          label="Multiline"\n          multiline\n          rows="4"\n          defaultValue="Default Value"\n          className={classes.textField}\n          margin="normal"\n          variant="filled"\n        />\n\n        <TextField\n          id="filled-helperText"\n          label="Helper text"\n          defaultValue="Default Value"\n          className={classes.textField}\n          helperText="Some important text"\n          margin="normal"\n          variant="filled"\n        />\n\n        <TextField\n          id="filled-with-placeholder"\n          label="With placeholder"\n          placeholder="Placeholder"\n          className={classes.textField}\n          margin="normal"\n          variant="filled"\n        />\n\n        <TextField\n          id="filled-textarea"\n          label="Multiline Placeholder"\n          placeholder="Placeholder"\n          multiline\n          className={classes.textField}\n          margin="normal"\n          variant="filled"\n        />\n\n        <TextField\n          id="filled-number"\n          label="Number"\n          value={this.state.age}\n          onChange={this.handleChange(\'age\')}\n          type="number"\n          className={classes.textField}\n          InputLabelProps={{\n            shrink: true,\n          }}\n          margin="normal"\n          variant="filled"\n        />\n\n        <TextField\n          id="filled-search"\n          label="Search field"\n          type="search"\n          className={classes.textField}\n          margin="normal"\n          variant="filled"\n        />\n\n        <TextField\n          id="filled-select-currency"\n          select\n          label="Select"\n          className={classes.textField}\n          value={this.state.currency}\n          onChange={this.handleChange(\'currency\')}\n          SelectProps={{\n            MenuProps: {\n              className: classes.menu,\n            },\n          }}\n          helperText="Please select your currency"\n          margin="normal"\n          variant="filled"\n        >\n          {currencies.map(option => (\n            <MenuItem key={option.value} value={option.value}>\n              {option.label}\n            </MenuItem>\n          ))}\n        </TextField>\n        <TextField\n          id="filled-select-currency-native"\n          select\n          label="Native select"\n          className={classes.textField}\n          value={this.state.currency}\n          onChange={this.handleChange(\'currency\')}\n          SelectProps={{\n            native: true,\n            MenuProps: {\n              className: classes.menu,\n            },\n          }}\n          helperText="Please select your currency"\n          margin="normal"\n          variant="filled"\n        >\n          {currencies.map(option => (\n            <option key={option.value} value={option.value}>\n              {option.label}\n            </option>\n          ))}\n        </TextField>\n        <TextField\n          id="filled-full-width"\n          label="Label"\n          style={{ margin: 8 }}\n          placeholder="Placeholder"\n          helperText="Full width!"\n          fullWidth\n          margin="normal"\n          variant="filled"\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n\n        <TextField\n          id="filled-bare"\n          className={classes.textField}\n          defaultValue="Bare"\n          margin="normal"\n          variant="filled"\n        />\n      </form>\n    );\n  }\n}\n\nFilledTextFields.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(FilledTextFields);\n'},2681:function(e,n){e.exports='import React from \'react\';\nimport PropTypes from \'prop-types\';\nimport classNames from \'classnames\';\nimport { createStyles, Theme, withStyles, WithStyles } from \'@material-ui/core/styles\';\nimport MenuItem from \'@material-ui/core/MenuItem\';\nimport TextField from \'@material-ui/core/TextField\';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    container: {\n      display: \'flex\',\n      flexWrap: \'wrap\',\n    },\n    textField: {\n      marginLeft: theme.spacing.unit,\n      marginRight: theme.spacing.unit,\n    },\n    dense: {\n      marginTop: 16,\n    },\n    menu: {\n      width: 200,\n    },\n  });\n\nconst currencies = [\n  {\n    value: \'USD\',\n    label: \'$\',\n  },\n  {\n    value: \'EUR\',\n    label: \'€\',\n  },\n  {\n    value: \'BTC\',\n    label: \'฿\',\n  },\n  {\n    value: \'JPY\',\n    label: \'¥\',\n  },\n];\n\nexport interface Props extends WithStyles<typeof styles> {}\n\ninterface State {\n  name: string;\n  age: string;\n  multiline: string;\n  currency: string;\n}\n\nclass FilledTextFields extends React.Component<Props, State> {\n  state = {\n    name: \'Cat in the Hat\',\n    age: \'\',\n    multiline: \'Controlled\',\n    currency: \'EUR\',\n  };\n\n  handleChange = (name: keyof State) => (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      [name]: event.target.value,\n    } as Pick<State, keyof State>);\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <form className={classes.container} noValidate autoComplete="off">\n        <TextField\n          id="filled-name"\n          label="Name"\n          className={classes.textField}\n          value={this.state.name}\n          onChange={this.handleChange(\'name\')}\n          margin="normal"\n          variant="filled"\n        />\n        <TextField\n          id="filled-uncontrolled"\n          label="Uncontrolled"\n          defaultValue="foo"\n          className={classes.textField}\n          margin="normal"\n          variant="filled"\n        />\n        <TextField\n          required\n          id="filled-required"\n          label="Required"\n          defaultValue="Hello World"\n          className={classes.textField}\n          margin="normal"\n          variant="filled"\n        />\n        <TextField\n          error\n          id="filled-error"\n          label="Error"\n          defaultValue="Hello World"\n          className={classes.textField}\n          margin="normal"\n          variant="filled"\n        />\n        <TextField\n          disabled\n          id="filled-disabled"\n          label="Disabled"\n          defaultValue="Hello World"\n          className={classes.textField}\n          margin="normal"\n          variant="filled"\n        />\n        <TextField\n          id="filled-email-input"\n          label="Email"\n          className={classes.textField}\n          type="email"\n          name="email"\n          autoComplete="email"\n          margin="normal"\n          variant="filled"\n        />\n        <TextField\n          id="filled-password-input"\n          label="Password"\n          className={classes.textField}\n          type="password"\n          autoComplete="current-password"\n          margin="normal"\n          variant="filled"\n        />\n        <TextField\n          id="filled-read-only-input"\n          label="Read Only"\n          defaultValue="Hello World"\n          className={classes.textField}\n          margin="normal"\n          InputProps={{\n            readOnly: true,\n          }}\n          variant="filled"\n        />\n        <TextField\n          id="filled-dense"\n          label="Dense"\n          className={classNames(classes.textField, classes.dense)}\n          margin="dense"\n          variant="filled"\n        />\n        <TextField\n          id="filled-multiline-flexible"\n          label="Multiline"\n          multiline\n          rowsMax="4"\n          value={this.state.multiline}\n          onChange={this.handleChange(\'multiline\')}\n          className={classes.textField}\n          margin="normal"\n          helperText="hello"\n          variant="filled"\n        />\n        <TextField\n          id="filled-multiline-static"\n          label="Multiline"\n          multiline\n          rows="4"\n          defaultValue="Default Value"\n          className={classes.textField}\n          margin="normal"\n          variant="filled"\n        />\n        <TextField\n          id="filled-helperText"\n          label="Helper text"\n          defaultValue="Default Value"\n          className={classes.textField}\n          helperText="Some important text"\n          margin="normal"\n          variant="filled"\n        />\n        <TextField\n          id="filled-with-placeholder"\n          label="With placeholder"\n          placeholder="Placeholder"\n          className={classes.textField}\n          margin="normal"\n          variant="filled"\n        />\n        <TextField\n          id="filled-textarea"\n          label="Multiline Placeholder"\n          placeholder="Placeholder"\n          multiline\n          className={classes.textField}\n          margin="normal"\n          variant="filled"\n        />\n        <TextField\n          id="filled-number"\n          label="Number"\n          value={this.state.age}\n          onChange={this.handleChange(\'age\')}\n          type="number"\n          className={classes.textField}\n          InputLabelProps={{\n            shrink: true,\n          }}\n          margin="normal"\n          variant="filled"\n        />\n        <TextField\n          id="filled-search"\n          label="Search field"\n          type="search"\n          className={classes.textField}\n          margin="normal"\n          variant="filled"\n        />\n        <TextField\n          id="filled-select-currency"\n          select\n          label="Select"\n          className={classes.textField}\n          value={this.state.currency}\n          onChange={this.handleChange(\'currency\')}\n          SelectProps={{\n            MenuProps: {\n              className: classes.menu,\n            },\n          }}\n          helperText="Please select your currency"\n          margin="normal"\n          variant="filled"\n        >\n          {currencies.map(option => (\n            <MenuItem key={option.value} value={option.value}>\n              {option.label}\n            </MenuItem>\n          ))}\n        </TextField>\n        <TextField\n          id="filled-select-currency-native"\n          select\n          label="Native select"\n          className={classes.textField}\n          value={this.state.currency}\n          onChange={this.handleChange(\'currency\')}\n          SelectProps={{\n            native: true,\n            MenuProps: {\n              className: classes.menu,\n            },\n          }}\n          helperText="Please select your currency"\n          margin="normal"\n          variant="filled"\n        >\n          {currencies.map(option => (\n            <option key={option.value} value={option.value}>\n              {option.label}\n            </option>\n          ))}\n        </TextField>\n        <TextField\n          id="filled-full-width"\n          label="Label"\n          style={{ margin: 8 }}\n          placeholder="Placeholder"\n          helperText="Full width!"\n          fullWidth\n          margin="normal"\n          variant="filled"\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n        <TextField\n          id="filled-bare"\n          className={classes.textField}\n          defaultValue="Bare"\n          margin="normal"\n          variant="filled"\n        />\n      </form>\n    );\n  }\n}\n\n(FilledTextFields as React.ComponentClass<Props>).propTypes = {\n  classes: PropTypes.object.isRequired,\n} as any;\n\nexport default withStyles(styles)(FilledTextFields);\n'},2682:function(e,n){e.exports="import React from 'react';\nimport MaskedInput from 'react-text-mask';\nimport NumberFormat from 'react-number-format';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  formControl: {\n    margin: theme.spacing.unit,\n  },\n}));\n\nfunction TextMaskCustom(props) {\n  const { inputRef, ...other } = props;\n\n  return (\n    <MaskedInput\n      {...other}\n      ref={ref => {\n        inputRef(ref ? ref.inputElement : null);\n      }}\n      mask={['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\n      placeholderChar={'\\u2000'}\n      showMask\n    />\n  );\n}\n\nTextMaskCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n};\n\nfunction NumberFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={values => {\n        onChange({\n          target: {\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      prefix=\"$\"\n    />\n  );\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nfunction FormattedInputs() {\n  const classes = useStyles();\n  const [values, setValues] = React.useState({\n    textmask: '(1  )    -    ',\n    numberformat: '1320',\n  });\n\n  const handleChange = name => event => {\n    setValues({ ...values, [name]: event.target.value });\n  };\n\n  return (\n    <div className={classes.container}>\n      <FormControl className={classes.formControl}>\n        <InputLabel htmlFor=\"formatted-text-mask-input\">react-text-mask</InputLabel>\n        <Input\n          value={values.textmask}\n          onChange={handleChange('textmask')}\n          id=\"formatted-text-mask-input\"\n          inputComponent={TextMaskCustom}\n        />\n      </FormControl>\n      <TextField\n        className={classes.formControl}\n        label=\"react-number-format\"\n        value={values.numberformat}\n        onChange={handleChange('numberformat')}\n        id=\"formatted-numberformat-input\"\n        InputProps={{\n          inputComponent: NumberFormatCustom,\n        }}\n      />\n    </div>\n  );\n}\n\nexport default FormattedInputs;\n"},2683:function(e,n){e.exports="import React from 'react';\nimport MaskedInput from 'react-text-mask';\nimport NumberFormat from 'react-number-format';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\n\nconst styles = theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  formControl: {\n    margin: theme.spacing.unit,\n  },\n});\n\nfunction TextMaskCustom(props) {\n  const { inputRef, ...other } = props;\n\n  return (\n    <MaskedInput\n      {...other}\n      ref={ref => {\n        inputRef(ref ? ref.inputElement : null);\n      }}\n      mask={['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\n      placeholderChar={'\\u2000'}\n      showMask\n    />\n  );\n}\n\nTextMaskCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n};\n\nfunction NumberFormatCustom(props) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={values => {\n        onChange({\n          target: {\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      prefix=\"$\"\n    />\n  );\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nclass FormattedInputs extends React.Component {\n  state = {\n    textmask: '(1  )    -    ',\n    numberformat: '1320',\n  };\n\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { textmask, numberformat } = this.state;\n\n    return (\n      <div className={classes.container}>\n        <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"formatted-text-mask-input\">react-text-mask</InputLabel>\n          <Input\n            value={textmask}\n            onChange={this.handleChange('textmask')}\n            id=\"formatted-text-mask-input\"\n            inputComponent={TextMaskCustom}\n          />\n        </FormControl>\n        <TextField\n          className={classes.formControl}\n          label=\"react-number-format\"\n          value={numberformat}\n          onChange={this.handleChange('numberformat')}\n          id=\"formatted-numberformat-input\"\n          InputProps={{\n            inputComponent: NumberFormatCustom,\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nFormattedInputs.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(FormattedInputs);\n"},2684:function(e,n){e.exports="import React from 'react';\nimport MaskedInput from 'react-text-mask';\nimport NumberFormat from 'react-number-format';\nimport PropTypes from 'prop-types';\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport TextField from '@material-ui/core/TextField';\nimport FormControl from '@material-ui/core/FormControl';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    formControl: {\n      margin: theme.spacing.unit,\n    },\n  });\n\nexport interface TextMaskCustomProps {\n  inputRef: (ref: HTMLInputElement | null) => void;\n}\n\nfunction TextMaskCustom(props: TextMaskCustomProps) {\n  const { inputRef, ...other } = props;\n\n  return (\n    <MaskedInput\n      {...other}\n      ref={(ref: any) => {\n        inputRef(ref ? ref.inputElement : null);\n      }}\n      mask={['(', /[1-9]/, /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\n      placeholderChar={'\\u2000'}\n      showMask\n    />\n  );\n}\n\nTextMaskCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n} as any;\n\nexport interface NumberFormatCustomProps {\n  inputRef: (instance: NumberFormat | null) => void;\n  onChange: (event: { target: { value: string } }) => void;\n}\n\nfunction NumberFormatCustom(props: NumberFormatCustomProps) {\n  const { inputRef, onChange, ...other } = props;\n\n  return (\n    <NumberFormat\n      {...other}\n      getInputRef={inputRef}\n      onValueChange={values => {\n        onChange({\n          target: {\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      prefix=\"$\"\n    />\n  );\n}\n\nNumberFormatCustom.propTypes = {\n  inputRef: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n} as any;\n\nexport interface Props extends WithStyles<typeof styles> {}\n\ninterface State {\n  textmask: string;\n  numberformat: string;\n}\n\nclass FormattedInputs extends React.Component<Props, State> {\n  state = {\n    textmask: '(1  )    -    ',\n    numberformat: '1320',\n  };\n\n  handleChange = (name: keyof State) => (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      [name]: event.target.value,\n    } as Pick<State, keyof State>);\n  };\n\n  render() {\n    const { classes } = this.props;\n    const { textmask, numberformat } = this.state;\n\n    return (\n      <div className={classes.container}>\n        <FormControl className={classes.formControl}>\n          <InputLabel htmlFor=\"formatted-text-mask-input\">react-text-mask</InputLabel>\n          <Input\n            value={textmask}\n            onChange={this.handleChange('textmask')}\n            id=\"formatted-text-mask-input\"\n            inputComponent={TextMaskCustom as any}\n          />\n        </FormControl>\n        <TextField\n          className={classes.formControl}\n          label=\"react-number-format\"\n          value={numberformat}\n          onChange={this.handleChange('numberformat')}\n          id=\"formatted-numberformat-input\"\n          InputProps={{\n            inputComponent: NumberFormatCustom as any,\n          }}\n        />\n      </div>\n    );\n  }\n}\n\n(FormattedInputs as React.ComponentClass<Props>).propTypes = {\n  classes: PropTypes.object.isRequired,\n} as any;\n\nexport default withStyles(styles)(FormattedInputs);\n"},2685:function(e,n){e.exports="import React from 'react';\nimport classNames from 'classnames';\nimport { makeStyles } from '@material-ui/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  margin: {\n    margin: theme.spacing.unit,\n  },\n  withoutLabel: {\n    marginTop: theme.spacing.unit * 3,\n  },\n  textField: {\n    flexBasis: 200,\n  },\n}));\n\nconst ranges = [\n  {\n    value: '0-20',\n    label: '0 to 20',\n  },\n  {\n    value: '21-50',\n    label: '21 to 50',\n  },\n  {\n    value: '51-100',\n    label: '51 to 100',\n  },\n];\n\nfunction InputAdornments() {\n  const classes = useStyles();\n  const [values, setValues] = React.useState({\n    amount: '',\n    password: '',\n    weight: '',\n    weightRange: '',\n    showPassword: false,\n  });\n\n  const handleChange = prop => event => {\n    setValues({ ...values, [prop]: event.target.value });\n  };\n\n  const handleClickShowPassword = () => {\n    setValues({ ...values, showPassword: !values.showPassword });\n  };\n\n  return (\n    <div className={classes.root}>\n      <TextField\n        label=\"With normal TextField\"\n        id=\"simple-start-adornment\"\n        className={classNames(classes.margin, classes.textField)}\n        InputProps={{\n          startAdornment: <InputAdornment position=\"start\">Kg</InputAdornment>,\n        }}\n      />\n      <TextField\n        select\n        label=\"With Select\"\n        className={classNames(classes.margin, classes.textField)}\n        value={values.weightRange}\n        onChange={handleChange('weightRange')}\n        InputProps={{\n          startAdornment: <InputAdornment position=\"start\">Kg</InputAdornment>,\n        }}\n      >\n        {ranges.map(option => (\n          <MenuItem key={option.value} value={option.value}>\n            {option.label}\n          </MenuItem>\n        ))}\n      </TextField>\n      <FormControl fullWidth className={classes.margin}>\n        <InputLabel htmlFor=\"adornment-amount\">Amount</InputLabel>\n        <Input\n          id=\"adornment-amount\"\n          value={values.amount}\n          onChange={handleChange('amount')}\n          startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n        />\n      </FormControl>\n      <FormControl className={classNames(classes.margin, classes.withoutLabel, classes.textField)}>\n        <Input\n          id=\"adornment-weight\"\n          value={values.weight}\n          onChange={handleChange('weight')}\n          endAdornment={<InputAdornment position=\"end\">Kg</InputAdornment>}\n          aria-describedby=\"weight-helper-text\"\n          inputProps={{\n            'aria-label': 'Weight',\n          }}\n        />\n        <FormHelperText id=\"weight-helper-text\">Weight</FormHelperText>\n      </FormControl>\n      <FormControl className={classNames(classes.margin, classes.textField)}>\n        <InputLabel htmlFor=\"adornment-password\">Password</InputLabel>\n        <Input\n          id=\"adornment-password\"\n          type={values.showPassword ? 'text' : 'password'}\n          value={values.password}\n          onChange={handleChange('password')}\n          endAdornment={\n            <InputAdornment position=\"end\">\n              <IconButton aria-label=\"Toggle password visibility\" onClick={handleClickShowPassword}>\n                {values.showPassword ? <Visibility /> : <VisibilityOff />}\n              </IconButton>\n            </InputAdornment>\n          }\n        />\n      </FormControl>\n    </div>\n  );\n}\n\nexport default InputAdornments;\n"},2686:function(e,n){e.exports="import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  margin: {\n    margin: theme.spacing.unit,\n  },\n  withoutLabel: {\n    marginTop: theme.spacing.unit * 3,\n  },\n  textField: {\n    flexBasis: 200,\n  },\n});\n\nconst ranges = [\n  {\n    value: '0-20',\n    label: '0 to 20',\n  },\n  {\n    value: '21-50',\n    label: '21 to 50',\n  },\n  {\n    value: '51-100',\n    label: '51 to 100',\n  },\n];\n\nclass InputAdornments extends React.Component {\n  state = {\n    amount: '',\n    password: '',\n    weight: '',\n    weightRange: '',\n    showPassword: false,\n  };\n\n  handleChange = prop => event => {\n    this.setState({ [prop]: event.target.value });\n  };\n\n  handleClickShowPassword = () => {\n    this.setState(state => ({ showPassword: !state.showPassword }));\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <TextField\n          label=\"With normal TextField\"\n          id=\"simple-start-adornment\"\n          className={classNames(classes.margin, classes.textField)}\n          InputProps={{\n            startAdornment: <InputAdornment position=\"start\">Kg</InputAdornment>,\n          }}\n        />\n\n        <TextField\n          select\n          label=\"With Select\"\n          className={classNames(classes.margin, classes.textField)}\n          value={this.state.weightRange}\n          onChange={this.handleChange('weightRange')}\n          InputProps={{\n            startAdornment: <InputAdornment position=\"start\">Kg</InputAdornment>,\n          }}\n        >\n          {ranges.map(option => (\n            <MenuItem key={option.value} value={option.value}>\n              {option.label}\n            </MenuItem>\n          ))}\n        </TextField>\n        <FormControl fullWidth className={classes.margin}>\n          <InputLabel htmlFor=\"adornment-amount\">Amount</InputLabel>\n          <Input\n            id=\"adornment-amount\"\n            value={this.state.amount}\n            onChange={this.handleChange('amount')}\n            startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n          />\n        </FormControl>\n        <FormControl\n          className={classNames(classes.margin, classes.withoutLabel, classes.textField)}\n        >\n          <Input\n            id=\"adornment-weight\"\n            value={this.state.weight}\n            onChange={this.handleChange('weight')}\n            aria-describedby=\"weight-helper-text\"\n            endAdornment={<InputAdornment position=\"end\">Kg</InputAdornment>}\n            inputProps={{\n              'aria-label': 'Weight',\n            }}\n          />\n\n          <FormHelperText id=\"weight-helper-text\">Weight</FormHelperText>\n        </FormControl>\n        <FormControl className={classNames(classes.margin, classes.textField)}>\n          <InputLabel htmlFor=\"adornment-password\">Password</InputLabel>\n          <Input\n            id=\"adornment-password\"\n            type={this.state.showPassword ? 'text' : 'password'}\n            value={this.state.password}\n            onChange={this.handleChange('password')}\n            endAdornment={\n              <InputAdornment position=\"end\">\n                <IconButton\n                  aria-label=\"Toggle password visibility\"\n                  onClick={this.handleClickShowPassword}\n                >\n                  {this.state.showPassword ? <Visibility /> : <VisibilityOff />}\n                </IconButton>\n              </InputAdornment>\n            }\n          />\n        </FormControl>\n      </div>\n    );\n  }\n}\n\nInputAdornments.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(InputAdornments);\n"},2687:function(e,n){e.exports="import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    margin: {\n      margin: theme.spacing.unit,\n    },\n    withoutLabel: {\n      marginTop: theme.spacing.unit * 3,\n    },\n    textField: {\n      flexBasis: 200,\n    },\n  });\n\nconst ranges = [\n  {\n    value: '0-20',\n    label: '0 to 20',\n  },\n  {\n    value: '21-50',\n    label: '21 to 50',\n  },\n  {\n    value: '51-100',\n    label: '51 to 100',\n  },\n];\n\nexport interface Props extends WithStyles<typeof styles> {}\n\ninterface State {\n  amount: string;\n  password: string;\n  weight: string;\n  weightRange: string;\n  showPassword: boolean;\n}\n\nclass InputAdornments extends React.Component<Props, State> {\n  state = {\n    amount: '',\n    password: '',\n    weight: '',\n    weightRange: '',\n    showPassword: false,\n  };\n\n  handleChange = (prop: 'amount' | 'password' | 'weight' | 'weightRange') => (\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    this.setState({ [prop]: event.target.value } as Pick<State, typeof prop>);\n  };\n\n  handleClickShowPassword = () => {\n    this.setState(state => ({ showPassword: !state.showPassword }));\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <TextField\n          label=\"With normal TextField\"\n          id=\"simple-start-adornment\"\n          className={classNames(classes.margin, classes.textField)}\n          InputProps={{\n            startAdornment: <InputAdornment position=\"start\">Kg</InputAdornment>,\n          }}\n        />\n        <TextField\n          select\n          label=\"With Select\"\n          className={classNames(classes.margin, classes.textField)}\n          value={this.state.weightRange}\n          onChange={this.handleChange('weightRange')}\n          InputProps={{\n            startAdornment: <InputAdornment position=\"start\">Kg</InputAdornment>,\n          }}\n        >\n          {ranges.map(option => (\n            <MenuItem key={option.value} value={option.value}>\n              {option.label}\n            </MenuItem>\n          ))}\n        </TextField>\n        <FormControl fullWidth className={classes.margin}>\n          <InputLabel htmlFor=\"adornment-amount\">Amount</InputLabel>\n          <Input\n            id=\"adornment-amount\"\n            value={this.state.amount}\n            onChange={this.handleChange('amount')}\n            startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\n          />\n        </FormControl>\n        <FormControl\n          className={classNames(classes.margin, classes.withoutLabel, classes.textField)}\n        >\n          <Input\n            id=\"adornment-weight\"\n            value={this.state.weight}\n            onChange={this.handleChange('weight')}\n            aria-describedby=\"weight-helper-text\"\n            endAdornment={<InputAdornment position=\"end\">Kg</InputAdornment>}\n            inputProps={{\n              'aria-label': 'Weight',\n            }}\n          />\n          <FormHelperText id=\"weight-helper-text\">Weight</FormHelperText>\n        </FormControl>\n        <FormControl className={classNames(classes.margin, classes.textField)}>\n          <InputLabel htmlFor=\"adornment-password\">Password</InputLabel>\n          <Input\n            id=\"adornment-password\"\n            type={this.state.showPassword ? 'text' : 'password'}\n            value={this.state.password}\n            onChange={this.handleChange('password')}\n            endAdornment={\n              <InputAdornment position=\"end\">\n                <IconButton\n                  aria-label=\"Toggle password visibility\"\n                  onClick={this.handleClickShowPassword}\n                >\n                  {this.state.showPassword ? <Visibility /> : <VisibilityOff />}\n                </IconButton>\n              </InputAdornment>\n            }\n          />\n        </FormControl>\n      </div>\n    );\n  }\n}\n\n(InputAdornments as React.ComponentClass<Props>).propTypes = {\n  classes: PropTypes.object.isRequired,\n} as any;\n\nexport default withStyles(styles)(InputAdornments);\n"},2688:function(e,n){e.exports="import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\n\nconst styles = theme => ({\n  margin: {\n    margin: theme.spacing.unit,\n  },\n});\n\nfunction InputWithIcon(props) {\n  const { classes } = props;\n\n  return (\n    <div>\n      <FormControl className={classes.margin}>\n        <InputLabel htmlFor=\"input-with-icon-adornment\">With a start adornment</InputLabel>\n        <Input\n          id=\"input-with-icon-adornment\"\n          startAdornment={\n            <InputAdornment position=\"start\">\n              <AccountCircle />\n            </InputAdornment>\n          }\n        />\n      </FormControl>\n      <TextField\n        className={classes.margin}\n        id=\"input-with-icon-textfield\"\n        label=\"TextField\"\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <AccountCircle />\n            </InputAdornment>\n          ),\n        }}\n      />\n\n      <div className={classes.margin}>\n        <Grid container spacing={8} alignItems=\"flex-end\">\n          <Grid item>\n            <AccountCircle />\n          </Grid>\n          <Grid item>\n            <TextField id=\"input-with-icon-grid\" label=\"With a grid\" />\n          </Grid>\n        </Grid>\n      </div>\n    </div>\n  );\n}\n\nInputWithIcon.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(InputWithIcon);\n"},2689:function(e,n){e.exports="import React from 'react';\nimport PropTypes from 'prop-types';\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    margin: {\n      margin: theme.spacing.unit,\n    },\n  });\n\nexport interface Props extends WithStyles<typeof styles> {}\n\nfunction InputWithIcon(props: Props) {\n  const { classes } = props;\n\n  return (\n    <div>\n      <FormControl className={classes.margin}>\n        <InputLabel htmlFor=\"input-with-icon-adornment\">With a start adornment</InputLabel>\n        <Input\n          id=\"input-with-icon-adornment\"\n          startAdornment={\n            <InputAdornment position=\"start\">\n              <AccountCircle />\n            </InputAdornment>\n          }\n        />\n      </FormControl>\n      <TextField\n        className={classes.margin}\n        id=\"input-with-icon-textfield\"\n        label=\"TextField\"\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <AccountCircle />\n            </InputAdornment>\n          ),\n        }}\n      />\n      <div className={classes.margin}>\n        <Grid container spacing={8} alignItems=\"flex-end\">\n          <Grid item>\n            <AccountCircle />\n          </Grid>\n          <Grid item>\n            <TextField id=\"input-with-icon-grid\" label=\"With a grid\" />\n          </Grid>\n        </Grid>\n      </div>\n    </div>\n  );\n}\n\nInputWithIcon.propTypes = {\n  classes: PropTypes.object.isRequired,\n} as any;\n\nexport default withStyles(styles)(InputWithIcon);\n"},2690:function(e,n){e.exports="import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\n\nconst styles = theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  input: {\n    margin: theme.spacing.unit,\n  },\n});\n\nfunction Inputs(props) {\n  const { classes } = props;\n  return (\n    <div className={classes.container}>\n      <Input\n        defaultValue=\"Hello world\"\n        className={classes.input}\n        inputProps={{\n          'aria-label': 'Description',\n        }}\n      />\n\n      <Input\n        placeholder=\"Placeholder\"\n        className={classes.input}\n        inputProps={{\n          'aria-label': 'Description',\n        }}\n      />\n\n      <Input\n        value=\"Disabled\"\n        className={classes.input}\n        disabled\n        inputProps={{\n          'aria-label': 'Description',\n        }}\n      />\n\n      <Input\n        defaultValue=\"Error\"\n        className={classes.input}\n        error\n        inputProps={{\n          'aria-label': 'Description',\n        }}\n      />\n    </div>\n  );\n}\n\nInputs.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Inputs);\n"},2691:function(e,n){e.exports="import React from 'react';\nimport PropTypes from 'prop-types';\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\nimport Input from '@material-ui/core/Input';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    input: {\n      margin: theme.spacing.unit,\n    },\n  });\n\nexport interface Props extends WithStyles<typeof styles> {}\n\nfunction Inputs(props: Props) {\n  const { classes } = props;\n  return (\n    <div className={classes.container}>\n      <Input\n        defaultValue=\"Hello world\"\n        className={classes.input}\n        inputProps={{\n          'aria-label': 'Description',\n        }}\n      />\n      <Input\n        placeholder=\"Placeholder\"\n        className={classes.input}\n        inputProps={{\n          'aria-label': 'Description',\n        }}\n      />\n      <Input\n        value=\"Disabled\"\n        className={classes.input}\n        disabled\n        inputProps={{\n          'aria-label': 'Description',\n        }}\n      />\n      <Input\n        defaultValue=\"Error\"\n        className={classes.input}\n        error\n        inputProps={{\n          'aria-label': 'Description',\n        }}\n      />\n    </div>\n  );\n}\n\nInputs.propTypes = {\n  classes: PropTypes.object.isRequired,\n} as any;\n\nexport default withStyles(styles)(Inputs);\n"},2692:function(e,n){e.exports="import React from 'react';\nimport classNames from 'classnames';\nimport { makeStyles } from '@material-ui/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  margin: {\n    margin: theme.spacing.unit,\n  },\n  textField: {\n    flexBasis: 200,\n  },\n}));\n\nconst ranges = [\n  {\n    value: '0-20',\n    label: '0 to 20',\n  },\n  {\n    value: '21-50',\n    label: '21 to 50',\n  },\n  {\n    value: '51-100',\n    label: '51 to 100',\n  },\n];\n\nfunction OutlinedInputAdornments() {\n  const classes = useStyles();\n  const [values, setValues] = React.useState({\n    amount: '',\n    password: '',\n    weight: '',\n    weightRange: '',\n    showPassword: false,\n  });\n\n  const handleChange = prop => event => {\n    setValues({ ...values, [prop]: event.target.value });\n  };\n\n  const handleClickShowPassword = () => {\n    setValues({ ...values, showPassword: !values.showPassword });\n  };\n\n  return (\n    <div className={classes.root}>\n      <TextField\n        id=\"outlined-simple-start-adornment\"\n        className={classNames(classes.margin, classes.textField)}\n        variant=\"outlined\"\n        label=\"With outlined TextField\"\n        InputProps={{\n          startAdornment: <InputAdornment position=\"start\">Kg</InputAdornment>,\n        }}\n      />\n      <TextField\n        select\n        className={classNames(classes.margin, classes.textField)}\n        variant=\"outlined\"\n        label=\"With Select\"\n        value={values.weightRange}\n        onChange={handleChange('weightRange')}\n        InputProps={{\n          startAdornment: <InputAdornment position=\"start\">Kg</InputAdornment>,\n        }}\n      >\n        {ranges.map(option => (\n          <MenuItem key={option.value} value={option.value}>\n            {option.label}\n          </MenuItem>\n        ))}\n      </TextField>\n      <TextField\n        id=\"outlined-adornment-amount\"\n        className={classNames(classes.margin, classes.textField)}\n        variant=\"outlined\"\n        label=\"Amount\"\n        value={values.amount}\n        onChange={handleChange('amount')}\n        InputProps={{\n          startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\n        }}\n      />\n      <TextField\n        id=\"outlined-adornment-weight\"\n        className={classNames(classes.margin, classes.textField)}\n        variant=\"outlined\"\n        label=\"Weight\"\n        value={values.weight}\n        onChange={handleChange('weight')}\n        helperText=\"Weight\"\n        InputProps={{\n          endAdornment: <InputAdornment position=\"end\">Kg</InputAdornment>,\n        }}\n      />\n      <TextField\n        id=\"outlined-adornment-password\"\n        className={classNames(classes.margin, classes.textField)}\n        variant=\"outlined\"\n        type={values.showPassword ? 'text' : 'password'}\n        label=\"Password\"\n        value={values.password}\n        onChange={handleChange('password')}\n        InputProps={{\n          endAdornment: (\n            <InputAdornment position=\"end\">\n              <IconButton aria-label=\"Toggle password visibility\" onClick={handleClickShowPassword}>\n                {values.showPassword ? <VisibilityOff /> : <Visibility />}\n              </IconButton>\n            </InputAdornment>\n          ),\n        }}\n      />\n    </div>\n  );\n}\n\nexport default OutlinedInputAdornments;\n"},2693:function(e,n){e.exports="import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  margin: {\n    margin: theme.spacing.unit,\n  },\n  textField: {\n    flexBasis: 200,\n  },\n});\n\nconst ranges = [\n  {\n    value: '0-20',\n    label: '0 to 20',\n  },\n  {\n    value: '21-50',\n    label: '21 to 50',\n  },\n  {\n    value: '51-100',\n    label: '51 to 100',\n  },\n];\n\nclass OutlinedInputAdornments extends React.Component {\n  state = {\n    amount: '',\n    password: '',\n    weight: '',\n    weightRange: '',\n    showPassword: false,\n  };\n\n  handleChange = prop => event => {\n    this.setState({ [prop]: event.target.value });\n  };\n\n  handleClickShowPassword = () => {\n    this.setState(state => ({ showPassword: !state.showPassword }));\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <TextField\n          id=\"outlined-simple-start-adornment\"\n          className={classNames(classes.margin, classes.textField)}\n          variant=\"outlined\"\n          label=\"With outlined TextField\"\n          InputProps={{\n            startAdornment: <InputAdornment position=\"start\">Kg</InputAdornment>,\n          }}\n        />\n\n        <TextField\n          select\n          className={classNames(classes.margin, classes.textField)}\n          variant=\"outlined\"\n          label=\"With Select\"\n          value={this.state.weightRange}\n          onChange={this.handleChange('weightRange')}\n          InputProps={{\n            startAdornment: <InputAdornment position=\"start\">Kg</InputAdornment>,\n          }}\n        >\n          {ranges.map(option => (\n            <MenuItem key={option.value} value={option.value}>\n              {option.label}\n            </MenuItem>\n          ))}\n        </TextField>\n        <TextField\n          id=\"outlined-adornment-amount\"\n          className={classNames(classes.margin, classes.textField)}\n          variant=\"outlined\"\n          label=\"Amount\"\n          value={this.state.amount}\n          onChange={this.handleChange('amount')}\n          InputProps={{\n            startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\n          }}\n        />\n\n        <TextField\n          id=\"outlined-adornment-weight\"\n          className={classNames(classes.margin, classes.textField)}\n          variant=\"outlined\"\n          label=\"Weight\"\n          value={this.state.weight}\n          onChange={this.handleChange('weight')}\n          helperText=\"Weight\"\n          InputProps={{\n            endAdornment: <InputAdornment position=\"end\">Kg</InputAdornment>,\n          }}\n        />\n\n        <TextField\n          id=\"outlined-adornment-password\"\n          className={classNames(classes.margin, classes.textField)}\n          variant=\"outlined\"\n          type={this.state.showPassword ? 'text' : 'password'}\n          label=\"Password\"\n          value={this.state.password}\n          onChange={this.handleChange('password')}\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <IconButton\n                  aria-label=\"Toggle password visibility\"\n                  onClick={this.handleClickShowPassword}\n                >\n                  {this.state.showPassword ? <VisibilityOff /> : <Visibility />}\n                </IconButton>\n              </InputAdornment>\n            ),\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nOutlinedInputAdornments.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(OutlinedInputAdornments);\n"},2694:function(e,n){e.exports="import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    margin: {\n      margin: theme.spacing.unit,\n    },\n    textField: {\n      flexBasis: 200,\n    },\n  });\n\nconst ranges = [\n  {\n    value: '0-20',\n    label: '0 to 20',\n  },\n  {\n    value: '21-50',\n    label: '21 to 50',\n  },\n  {\n    value: '51-100',\n    label: '51 to 100',\n  },\n];\n\nexport interface Props extends WithStyles<typeof styles> {}\n\ninterface State {\n  amount: string;\n  password: string;\n  weight: string;\n  weightRange: string;\n  showPassword: boolean;\n}\n\nclass OutlinedInputAdornments extends React.Component<Props, State> {\n  state = {\n    amount: '',\n    password: '',\n    weight: '',\n    weightRange: '',\n    showPassword: false,\n  };\n\n  handleChange = (prop: 'amount' | 'password' | 'weight' | 'weightRange') => (\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    this.setState({ [prop]: event.target.value } as Pick<State, typeof prop>);\n  };\n\n  handleClickShowPassword = () => {\n    this.setState(state => ({ showPassword: !state.showPassword }));\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <TextField\n          id=\"outlined-simple-start-adornment\"\n          className={classNames(classes.margin, classes.textField)}\n          variant=\"outlined\"\n          label=\"With outlined TextField\"\n          InputProps={{\n            startAdornment: <InputAdornment position=\"start\">Kg</InputAdornment>,\n          }}\n        />\n        <TextField\n          select\n          className={classNames(classes.margin, classes.textField)}\n          variant=\"outlined\"\n          label=\"With Select\"\n          value={this.state.weightRange}\n          onChange={this.handleChange('weightRange')}\n          InputProps={{\n            startAdornment: <InputAdornment position=\"start\">Kg</InputAdornment>,\n          }}\n        >\n          {ranges.map(option => (\n            <MenuItem key={option.value} value={option.value}>\n              {option.label}\n            </MenuItem>\n          ))}\n        </TextField>\n        <TextField\n          id=\"outlined-adornment-amount\"\n          className={classNames(classes.margin, classes.textField)}\n          variant=\"outlined\"\n          label=\"Amount\"\n          value={this.state.amount}\n          onChange={this.handleChange('amount')}\n          InputProps={{\n            startAdornment: <InputAdornment position=\"start\">$</InputAdornment>,\n          }}\n        />\n        <TextField\n          id=\"outlined-adornment-weight\"\n          className={classNames(classes.margin, classes.textField)}\n          variant=\"outlined\"\n          label=\"Weight\"\n          value={this.state.weight}\n          onChange={this.handleChange('weight')}\n          helperText=\"Weight\"\n          InputProps={{\n            endAdornment: <InputAdornment position=\"end\">Kg</InputAdornment>,\n          }}\n        />\n        <TextField\n          id=\"outlined-adornment-password\"\n          className={classNames(classes.margin, classes.textField)}\n          variant=\"outlined\"\n          type={this.state.showPassword ? 'text' : 'password'}\n          label=\"Password\"\n          value={this.state.password}\n          onChange={this.handleChange('password')}\n          InputProps={{\n            endAdornment: (\n              <InputAdornment position=\"end\">\n                <IconButton\n                  aria-label=\"Toggle password visibility\"\n                  onClick={this.handleClickShowPassword}\n                >\n                  {this.state.showPassword ? <VisibilityOff /> : <Visibility />}\n                </IconButton>\n              </InputAdornment>\n            ),\n          }}\n        />\n      </div>\n    );\n  }\n}\n\n(OutlinedInputAdornments as React.ComponentClass<Props>).propTypes = {\n  classes: PropTypes.object.isRequired,\n} as any;\n\nexport default withStyles(styles)(OutlinedInputAdornments);\n"},2695:function(e,n){e.exports='import React from \'react\';\nimport classNames from \'classnames\';\nimport { makeStyles } from \'@material-ui/styles\';\nimport MenuItem from \'@material-ui/core/MenuItem\';\nimport TextField from \'@material-ui/core/TextField\';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: \'flex\',\n    flexWrap: \'wrap\',\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n  },\n  dense: {\n    marginTop: 16,\n  },\n  menu: {\n    width: 200,\n  },\n}));\n\nconst currencies = [\n  {\n    value: \'USD\',\n    label: \'$\',\n  },\n  {\n    value: \'EUR\',\n    label: \'€\',\n  },\n  {\n    value: \'BTC\',\n    label: \'฿\',\n  },\n  {\n    value: \'JPY\',\n    label: \'¥\',\n  },\n];\n\nfunction OutlinedTextFields() {\n  const classes = useStyles();\n  const [values, setValues] = React.useState({\n    name: \'Cat in the Hat\',\n    age: \'\',\n    multiline: \'Controlled\',\n    currency: \'EUR\',\n  });\n\n  const handleChange = name => event => {\n    setValues({ ...values, [name]: event.target.value });\n  };\n\n  return (\n    <form className={classes.container} noValidate autoComplete="off">\n      <TextField\n        id="outlined-name"\n        label="Name"\n        className={classes.textField}\n        value={values.name}\n        onChange={handleChange(\'name\')}\n        margin="normal"\n        variant="outlined"\n      />\n      <TextField\n        id="outlined-uncontrolled"\n        label="Uncontrolled"\n        defaultValue="foo"\n        className={classes.textField}\n        margin="normal"\n        variant="outlined"\n      />\n      <TextField\n        required\n        id="outlined-required"\n        label="Required"\n        defaultValue="Hello World"\n        className={classes.textField}\n        margin="normal"\n        variant="outlined"\n      />\n      <TextField\n        error\n        id="outlined-error"\n        label="Error"\n        defaultValue="Hello World"\n        className={classes.textField}\n        margin="normal"\n        variant="outlined"\n      />\n      <TextField\n        disabled\n        id="outlined-disabled"\n        label="Disabled"\n        defaultValue="Hello World"\n        className={classes.textField}\n        margin="normal"\n        variant="outlined"\n      />\n      <TextField\n        id="outlined-email-input"\n        label="Email"\n        className={classes.textField}\n        type="email"\n        name="email"\n        autoComplete="email"\n        margin="normal"\n        variant="outlined"\n      />\n      <TextField\n        id="outlined-password-input"\n        label="Password"\n        className={classes.textField}\n        type="password"\n        autoComplete="current-password"\n        margin="normal"\n        variant="outlined"\n      />\n      <TextField\n        id="outlined-read-only-input"\n        label="Read Only"\n        defaultValue="Hello World"\n        className={classes.textField}\n        margin="normal"\n        InputProps={{\n          readOnly: true,\n        }}\n        variant="outlined"\n      />\n      <TextField\n        id="outlined-dense"\n        label="Dense"\n        className={classNames(classes.textField, classes.dense)}\n        margin="dense"\n        variant="outlined"\n      />\n      <TextField\n        id="outlined-multiline-flexible"\n        label="Multiline"\n        multiline\n        rowsMax="4"\n        value={values.multiline}\n        onChange={handleChange(\'multiline\')}\n        className={classes.textField}\n        margin="normal"\n        helperText="hello"\n        variant="outlined"\n      />\n      <TextField\n        id="outlined-multiline-static"\n        label="Multiline"\n        multiline\n        rows="4"\n        defaultValue="Default Value"\n        className={classes.textField}\n        margin="normal"\n        variant="outlined"\n      />\n      <TextField\n        id="outlined-helperText"\n        label="Helper text"\n        defaultValue="Default Value"\n        className={classes.textField}\n        helperText="Some important text"\n        margin="normal"\n        variant="outlined"\n      />\n      <TextField\n        id="outlined-with-placeholder"\n        label="With placeholder"\n        placeholder="Placeholder"\n        className={classes.textField}\n        margin="normal"\n        variant="outlined"\n      />\n      <TextField\n        id="outlined-textarea"\n        label="Multiline Placeholder"\n        placeholder="Placeholder"\n        multiline\n        className={classes.textField}\n        margin="normal"\n        variant="outlined"\n      />\n      <TextField\n        id="outlined-number"\n        label="Number"\n        value={values.age}\n        onChange={handleChange(\'age\')}\n        type="number"\n        className={classes.textField}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        margin="normal"\n        variant="outlined"\n      />\n      <TextField\n        id="outlined-search"\n        label="Search field"\n        type="search"\n        className={classes.textField}\n        margin="normal"\n        variant="outlined"\n      />\n      <TextField\n        id="outlined-select-currency"\n        select\n        label="Select"\n        className={classes.textField}\n        value={values.currency}\n        onChange={handleChange(\'currency\')}\n        SelectProps={{\n          MenuProps: {\n            className: classes.menu,\n          },\n        }}\n        helperText="Please select your currency"\n        margin="normal"\n        variant="outlined"\n      >\n        {currencies.map(option => (\n          <MenuItem key={option.value} value={option.value}>\n            {option.label}\n          </MenuItem>\n        ))}\n      </TextField>\n      <TextField\n        id="outlined-select-currency-native"\n        select\n        label="Native select"\n        className={classes.textField}\n        value={values.currency}\n        onChange={handleChange(\'currency\')}\n        SelectProps={{\n          native: true,\n          MenuProps: {\n            className: classes.menu,\n          },\n        }}\n        helperText="Please select your currency"\n        margin="normal"\n        variant="outlined"\n      >\n        {currencies.map(option => (\n          <option key={option.value} value={option.value}>\n            {option.label}\n          </option>\n        ))}\n      </TextField>\n      <TextField\n        id="outlined-full-width"\n        label="Label"\n        style={{ margin: 8 }}\n        placeholder="Placeholder"\n        helperText="Full width!"\n        fullWidth\n        margin="normal"\n        variant="outlined"\n        InputLabelProps={{\n          shrink: true,\n        }}\n      />\n      <TextField\n        id="outlined-bare"\n        className={classes.textField}\n        defaultValue="Bare"\n        margin="normal"\n        variant="outlined"\n      />\n    </form>\n  );\n}\n\nexport default OutlinedTextFields;\n'},2696:function(e,n){e.exports='import React from \'react\';\nimport PropTypes from \'prop-types\';\nimport classNames from \'classnames\';\nimport { withStyles } from \'@material-ui/core/styles\';\nimport MenuItem from \'@material-ui/core/MenuItem\';\nimport TextField from \'@material-ui/core/TextField\';\n\nconst styles = theme => ({\n  container: {\n    display: \'flex\',\n    flexWrap: \'wrap\',\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n  },\n  dense: {\n    marginTop: 16,\n  },\n  menu: {\n    width: 200,\n  },\n});\n\nconst currencies = [\n  {\n    value: \'USD\',\n    label: \'$\',\n  },\n  {\n    value: \'EUR\',\n    label: \'€\',\n  },\n  {\n    value: \'BTC\',\n    label: \'฿\',\n  },\n  {\n    value: \'JPY\',\n    label: \'¥\',\n  },\n];\n\nclass OutlinedTextFields extends React.Component {\n  state = {\n    name: \'Cat in the Hat\',\n    age: \'\',\n    multiline: \'Controlled\',\n    currency: \'EUR\',\n  };\n\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <form className={classes.container} noValidate autoComplete="off">\n        <TextField\n          id="outlined-name"\n          label="Name"\n          className={classes.textField}\n          value={this.state.name}\n          onChange={this.handleChange(\'name\')}\n          margin="normal"\n          variant="outlined"\n        />\n\n        <TextField\n          id="outlined-uncontrolled"\n          label="Uncontrolled"\n          defaultValue="foo"\n          className={classes.textField}\n          margin="normal"\n          variant="outlined"\n        />\n\n        <TextField\n          required\n          id="outlined-required"\n          label="Required"\n          defaultValue="Hello World"\n          className={classes.textField}\n          margin="normal"\n          variant="outlined"\n        />\n\n        <TextField\n          error\n          id="outlined-error"\n          label="Error"\n          defaultValue="Hello World"\n          className={classes.textField}\n          margin="normal"\n          variant="outlined"\n        />\n\n        <TextField\n          disabled\n          id="outlined-disabled"\n          label="Disabled"\n          defaultValue="Hello World"\n          className={classes.textField}\n          margin="normal"\n          variant="outlined"\n        />\n\n        <TextField\n          id="outlined-email-input"\n          label="Email"\n          className={classes.textField}\n          type="email"\n          name="email"\n          autoComplete="email"\n          margin="normal"\n          variant="outlined"\n        />\n\n        <TextField\n          id="outlined-password-input"\n          label="Password"\n          className={classes.textField}\n          type="password"\n          autoComplete="current-password"\n          margin="normal"\n          variant="outlined"\n        />\n\n        <TextField\n          id="outlined-read-only-input"\n          label="Read Only"\n          defaultValue="Hello World"\n          className={classes.textField}\n          margin="normal"\n          InputProps={{\n            readOnly: true,\n          }}\n          variant="outlined"\n        />\n\n        <TextField\n          id="outlined-dense"\n          label="Dense"\n          className={classNames(classes.textField, classes.dense)}\n          margin="dense"\n          variant="outlined"\n        />\n\n        <TextField\n          id="outlined-multiline-flexible"\n          label="Multiline"\n          multiline\n          rowsMax="4"\n          value={this.state.multiline}\n          onChange={this.handleChange(\'multiline\')}\n          className={classes.textField}\n          margin="normal"\n          helperText="hello"\n          variant="outlined"\n        />\n\n        <TextField\n          id="outlined-multiline-static"\n          label="Multiline"\n          multiline\n          rows="4"\n          defaultValue="Default Value"\n          className={classes.textField}\n          margin="normal"\n          variant="outlined"\n        />\n\n        <TextField\n          id="outlined-helperText"\n          label="Helper text"\n          defaultValue="Default Value"\n          className={classes.textField}\n          helperText="Some important text"\n          margin="normal"\n          variant="outlined"\n        />\n\n        <TextField\n          id="outlined-with-placeholder"\n          label="With placeholder"\n          placeholder="Placeholder"\n          className={classes.textField}\n          margin="normal"\n          variant="outlined"\n        />\n\n        <TextField\n          id="outlined-textarea"\n          label="Multiline Placeholder"\n          placeholder="Placeholder"\n          multiline\n          className={classes.textField}\n          margin="normal"\n          variant="outlined"\n        />\n\n        <TextField\n          id="outlined-number"\n          label="Number"\n          value={this.state.age}\n          onChange={this.handleChange(\'age\')}\n          type="number"\n          className={classes.textField}\n          InputLabelProps={{\n            shrink: true,\n          }}\n          margin="normal"\n          variant="outlined"\n        />\n\n        <TextField\n          id="outlined-search"\n          label="Search field"\n          type="search"\n          className={classes.textField}\n          margin="normal"\n          variant="outlined"\n        />\n\n        <TextField\n          id="outlined-select-currency"\n          select\n          label="Select"\n          className={classes.textField}\n          value={this.state.currency}\n          onChange={this.handleChange(\'currency\')}\n          SelectProps={{\n            MenuProps: {\n              className: classes.menu,\n            },\n          }}\n          helperText="Please select your currency"\n          margin="normal"\n          variant="outlined"\n        >\n          {currencies.map(option => (\n            <MenuItem key={option.value} value={option.value}>\n              {option.label}\n            </MenuItem>\n          ))}\n        </TextField>\n        <TextField\n          id="outlined-select-currency-native"\n          select\n          label="Native select"\n          className={classes.textField}\n          value={this.state.currency}\n          onChange={this.handleChange(\'currency\')}\n          SelectProps={{\n            native: true,\n            MenuProps: {\n              className: classes.menu,\n            },\n          }}\n          helperText="Please select your currency"\n          margin="normal"\n          variant="outlined"\n        >\n          {currencies.map(option => (\n            <option key={option.value} value={option.value}>\n              {option.label}\n            </option>\n          ))}\n        </TextField>\n        <TextField\n          id="outlined-full-width"\n          label="Label"\n          style={{ margin: 8 }}\n          placeholder="Placeholder"\n          helperText="Full width!"\n          fullWidth\n          margin="normal"\n          variant="outlined"\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n\n        <TextField\n          id="outlined-bare"\n          className={classes.textField}\n          defaultValue="Bare"\n          margin="normal"\n          variant="outlined"\n        />\n      </form>\n    );\n  }\n}\n\nOutlinedTextFields.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(OutlinedTextFields);\n'},2697:function(e,n){e.exports='import React from \'react\';\nimport PropTypes from \'prop-types\';\nimport classNames from \'classnames\';\nimport { createStyles, Theme, withStyles, WithStyles } from \'@material-ui/core/styles\';\nimport MenuItem from \'@material-ui/core/MenuItem\';\nimport TextField from \'@material-ui/core/TextField\';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    container: {\n      display: \'flex\',\n      flexWrap: \'wrap\',\n    },\n    textField: {\n      marginLeft: theme.spacing.unit,\n      marginRight: theme.spacing.unit,\n    },\n    dense: {\n      marginTop: 16,\n    },\n    menu: {\n      width: 200,\n    },\n  });\n\nconst currencies = [\n  {\n    value: \'USD\',\n    label: \'$\',\n  },\n  {\n    value: \'EUR\',\n    label: \'€\',\n  },\n  {\n    value: \'BTC\',\n    label: \'฿\',\n  },\n  {\n    value: \'JPY\',\n    label: \'¥\',\n  },\n];\n\nexport interface Props extends WithStyles<typeof styles> {}\n\ninterface State {\n  name: string;\n  age: string;\n  multiline: string;\n  currency: string;\n}\n\nclass OutlinedTextFields extends React.Component<Props, State> {\n  state = {\n    name: \'Cat in the Hat\',\n    age: \'\',\n    multiline: \'Controlled\',\n    currency: \'EUR\',\n  };\n\n  handleChange = (name: keyof State) => (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({\n      [name]: event.target.value,\n    } as Pick<State, keyof State>);\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <form className={classes.container} noValidate autoComplete="off">\n        <TextField\n          id="outlined-name"\n          label="Name"\n          className={classes.textField}\n          value={this.state.name}\n          onChange={this.handleChange(\'name\')}\n          margin="normal"\n          variant="outlined"\n        />\n        <TextField\n          id="outlined-uncontrolled"\n          label="Uncontrolled"\n          defaultValue="foo"\n          className={classes.textField}\n          margin="normal"\n          variant="outlined"\n        />\n        <TextField\n          required\n          id="outlined-required"\n          label="Required"\n          defaultValue="Hello World"\n          className={classes.textField}\n          margin="normal"\n          variant="outlined"\n        />\n        <TextField\n          error\n          id="outlined-error"\n          label="Error"\n          defaultValue="Hello World"\n          className={classes.textField}\n          margin="normal"\n          variant="outlined"\n        />\n        <TextField\n          disabled\n          id="outlined-disabled"\n          label="Disabled"\n          defaultValue="Hello World"\n          className={classes.textField}\n          margin="normal"\n          variant="outlined"\n        />\n        <TextField\n          id="outlined-email-input"\n          label="Email"\n          className={classes.textField}\n          type="email"\n          name="email"\n          autoComplete="email"\n          margin="normal"\n          variant="outlined"\n        />\n        <TextField\n          id="outlined-password-input"\n          label="Password"\n          className={classes.textField}\n          type="password"\n          autoComplete="current-password"\n          margin="normal"\n          variant="outlined"\n        />\n        <TextField\n          id="outlined-read-only-input"\n          label="Read Only"\n          defaultValue="Hello World"\n          className={classes.textField}\n          margin="normal"\n          InputProps={{\n            readOnly: true,\n          }}\n          variant="outlined"\n        />\n        <TextField\n          id="outlined-dense"\n          label="Dense"\n          className={classNames(classes.textField, classes.dense)}\n          margin="dense"\n          variant="outlined"\n        />\n        <TextField\n          id="outlined-multiline-flexible"\n          label="Multiline"\n          multiline\n          rowsMax="4"\n          value={this.state.multiline}\n          onChange={this.handleChange(\'multiline\')}\n          className={classes.textField}\n          margin="normal"\n          helperText="hello"\n          variant="outlined"\n        />\n        <TextField\n          id="outlined-multiline-static"\n          label="Multiline"\n          multiline\n          rows="4"\n          defaultValue="Default Value"\n          className={classes.textField}\n          margin="normal"\n          variant="outlined"\n        />\n        <TextField\n          id="outlined-helperText"\n          label="Helper text"\n          defaultValue="Default Value"\n          className={classes.textField}\n          helperText="Some important text"\n          margin="normal"\n          variant="outlined"\n        />\n        <TextField\n          id="outlined-with-placeholder"\n          label="With placeholder"\n          placeholder="Placeholder"\n          className={classes.textField}\n          margin="normal"\n          variant="outlined"\n        />\n        <TextField\n          id="outlined-textarea"\n          label="Multiline Placeholder"\n          placeholder="Placeholder"\n          multiline\n          className={classes.textField}\n          margin="normal"\n          variant="outlined"\n        />\n        <TextField\n          id="outlined-number"\n          label="Number"\n          value={this.state.age}\n          onChange={this.handleChange(\'age\')}\n          type="number"\n          className={classes.textField}\n          InputLabelProps={{\n            shrink: true,\n          }}\n          margin="normal"\n          variant="outlined"\n        />\n        <TextField\n          id="outlined-search"\n          label="Search field"\n          type="search"\n          className={classes.textField}\n          margin="normal"\n          variant="outlined"\n        />\n        <TextField\n          id="outlined-select-currency"\n          select\n          label="Select"\n          className={classes.textField}\n          value={this.state.currency}\n          onChange={this.handleChange(\'currency\')}\n          SelectProps={{\n            MenuProps: {\n              className: classes.menu,\n            },\n          }}\n          helperText="Please select your currency"\n          margin="normal"\n          variant="outlined"\n        >\n          {currencies.map(option => (\n            <MenuItem key={option.value} value={option.value}>\n              {option.label}\n            </MenuItem>\n          ))}\n        </TextField>\n        <TextField\n          id="outlined-select-currency-native"\n          select\n          label="Native select"\n          className={classes.textField}\n          value={this.state.currency}\n          onChange={this.handleChange(\'currency\')}\n          SelectProps={{\n            native: true,\n            MenuProps: {\n              className: classes.menu,\n            },\n          }}\n          helperText="Please select your currency"\n          margin="normal"\n          variant="outlined"\n        >\n          {currencies.map(option => (\n            <option key={option.value} value={option.value}>\n              {option.label}\n            </option>\n          ))}\n        </TextField>\n        <TextField\n          id="outlined-full-width"\n          label="Label"\n          style={{ margin: 8 }}\n          placeholder="Placeholder"\n          helperText="Full width!"\n          fullWidth\n          margin="normal"\n          variant="outlined"\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n        <TextField\n          id="outlined-bare"\n          className={classes.textField}\n          defaultValue="Bare"\n          margin="normal"\n          variant="outlined"\n        />\n      </form>\n    );\n  }\n}\n\n(OutlinedTextFields as React.ComponentClass<Props>).propTypes = {\n  classes: PropTypes.object.isRequired,\n} as any;\n\nexport default withStyles(styles)(OutlinedTextFields);\n'},2698:function(e,n){e.exports='import React from \'react\';\nimport PropTypes from \'prop-types\';\nimport { withStyles } from \'@material-ui/core/styles\';\nimport TextField from \'@material-ui/core/TextField\';\n\nconst styles = theme => ({\n  container: {\n    display: \'flex\',\n    flexWrap: \'wrap\',\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 200,\n  },\n});\n\nconst TextFieldMargins = props => {\n  const { classes } = props;\n\n  return (\n    <div className={classes.container}>\n      <TextField\n        label="None"\n        id="margin-none"\n        defaultValue="Default Value"\n        className={classes.textField}\n        helperText="Some important text"\n      />\n\n      <TextField\n        label="Dense"\n        id="margin-dense"\n        defaultValue="Default Value"\n        className={classes.textField}\n        helperText="Some important text"\n        margin="dense"\n      />\n\n      <TextField\n        label="Normal"\n        id="margin-normal"\n        defaultValue="Default Value"\n        className={classes.textField}\n        helperText="Some important text"\n        margin="normal"\n      />\n    </div>\n  );\n};\n\nTextFieldMargins.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(TextFieldMargins);\n'},2699:function(e,n){e.exports='import React from \'react\';\nimport PropTypes from \'prop-types\';\nimport { createStyles, Theme, withStyles, WithStyles } from \'@material-ui/core/styles\';\nimport TextField from \'@material-ui/core/TextField\';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    container: {\n      display: \'flex\',\n      flexWrap: \'wrap\',\n    },\n    textField: {\n      marginLeft: theme.spacing.unit,\n      marginRight: theme.spacing.unit,\n      width: 200,\n    },\n  });\n\nexport interface Props extends WithStyles<typeof styles> {}\n\nconst TextFieldMargins = (props: Props) => {\n  const { classes } = props;\n\n  return (\n    <div className={classes.container}>\n      <TextField\n        label="None"\n        id="margin-none"\n        defaultValue="Default Value"\n        className={classes.textField}\n        helperText="Some important text"\n      />\n      <TextField\n        label="Dense"\n        id="margin-dense"\n        defaultValue="Default Value"\n        className={classes.textField}\n        helperText="Some important text"\n        margin="dense"\n      />\n      <TextField\n        label="Normal"\n        id="margin-normal"\n        defaultValue="Default Value"\n        className={classes.textField}\n        helperText="Some important text"\n        margin="normal"\n      />\n    </div>\n  );\n};\n\nTextFieldMargins.propTypes = {\n  classes: PropTypes.object.isRequired,\n} as any;\n\nexport default withStyles(styles)(TextFieldMargins);\n'},2700:function(e,n){e.exports='import React from \'react\';\nimport classNames from \'classnames\';\nimport { makeStyles } from \'@material-ui/styles\';\nimport MenuItem from \'@material-ui/core/MenuItem\';\nimport TextField from \'@material-ui/core/TextField\';\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: \'flex\',\n    flexWrap: \'wrap\',\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 200,\n  },\n  dense: {\n    marginTop: 19,\n  },\n  menu: {\n    width: 200,\n  },\n}));\n\nconst currencies = [\n  {\n    value: \'USD\',\n    label: \'$\',\n  },\n  {\n    value: \'EUR\',\n    label: \'€\',\n  },\n  {\n    value: \'BTC\',\n    label: \'฿\',\n  },\n  {\n    value: \'JPY\',\n    label: \'¥\',\n  },\n];\n\nfunction TextFields() {\n  const classes = useStyles();\n  const [values, setValues] = React.useState({\n    name: \'Cat in the Hat\',\n    age: \'\',\n    multiline: \'Controlled\',\n    currency: \'EUR\',\n  });\n\n  const handleChange = name => event => {\n    setValues({ ...values, [name]: event.target.value });\n  };\n\n  return (\n    <form className={classes.container} noValidate autoComplete="off">\n      <TextField\n        id="standard-name"\n        label="Name"\n        className={classes.textField}\n        value={values.name}\n        onChange={handleChange(\'name\')}\n        margin="normal"\n      />\n      <TextField\n        id="standard-uncontrolled"\n        label="Uncontrolled"\n        defaultValue="foo"\n        className={classes.textField}\n        margin="normal"\n      />\n      <TextField\n        required\n        id="standard-required"\n        label="Required"\n        defaultValue="Hello World"\n        className={classes.textField}\n        margin="normal"\n      />\n      <TextField\n        error\n        id="standard-error"\n        label="Error"\n        defaultValue="Hello World"\n        className={classes.textField}\n        margin="normal"\n      />\n      <TextField\n        disabled\n        id="standard-disabled"\n        label="Disabled"\n        defaultValue="Hello World"\n        className={classes.textField}\n        margin="normal"\n      />\n      <TextField\n        id="standard-password-input"\n        label="Password"\n        className={classes.textField}\n        type="password"\n        autoComplete="current-password"\n        margin="normal"\n      />\n      <TextField\n        id="standard-read-only-input"\n        label="Read Only"\n        defaultValue="Hello World"\n        className={classes.textField}\n        margin="normal"\n        InputProps={{\n          readOnly: true,\n        }}\n      />\n      <TextField\n        id="standard-dense"\n        label="Dense"\n        className={classNames(classes.textField, classes.dense)}\n        margin="dense"\n      />\n      <TextField\n        id="standard-multiline-flexible"\n        label="Multiline"\n        multiline\n        rowsMax="4"\n        value={values.multiline}\n        onChange={handleChange(\'multiline\')}\n        className={classes.textField}\n        margin="normal"\n      />\n      <TextField\n        id="standard-multiline-static"\n        label="Multiline"\n        multiline\n        rows="4"\n        defaultValue="Default Value"\n        className={classes.textField}\n        margin="normal"\n      />\n      <TextField\n        id="standard-helperText"\n        label="Helper text"\n        defaultValue="Default Value"\n        className={classes.textField}\n        helperText="Some important text"\n        margin="normal"\n      />\n      <TextField\n        id="standard-with-placeholder"\n        label="With placeholder"\n        placeholder="Placeholder"\n        className={classes.textField}\n        margin="normal"\n      />\n      <TextField\n        id="standard-textarea"\n        label="With placeholder multiline"\n        placeholder="Placeholder"\n        multiline\n        className={classes.textField}\n        margin="normal"\n      />\n      <TextField\n        id="standard-number"\n        label="Number"\n        value={values.age}\n        onChange={handleChange(\'age\')}\n        type="number"\n        className={classes.textField}\n        InputLabelProps={{\n          shrink: true,\n        }}\n        margin="normal"\n      />\n      <TextField\n        id="standard-search"\n        label="Search field"\n        type="search"\n        className={classes.textField}\n        margin="normal"\n      />\n      <TextField\n        id="standard-select-currency"\n        select\n        label="Select"\n        className={classes.textField}\n        value={values.currency}\n        onChange={handleChange(\'currency\')}\n        SelectProps={{\n          MenuProps: {\n            className: classes.menu,\n          },\n        }}\n        helperText="Please select your currency"\n        margin="normal"\n      >\n        {currencies.map(option => (\n          <MenuItem key={option.value} value={option.value}>\n            {option.label}\n          </MenuItem>\n        ))}\n      </TextField>\n      <TextField\n        id="standard-select-currency-native"\n        select\n        label="Native select"\n        className={classes.textField}\n        value={values.currency}\n        onChange={handleChange(\'currency\')}\n        SelectProps={{\n          native: true,\n          MenuProps: {\n            className: classes.menu,\n          },\n        }}\n        helperText="Please select your currency"\n        margin="normal"\n      >\n        {currencies.map(option => (\n          <option key={option.value} value={option.value}>\n            {option.label}\n          </option>\n        ))}\n      </TextField>\n      <TextField\n        id="standard-full-width"\n        label="Label"\n        style={{ margin: 8 }}\n        placeholder="Placeholder"\n        helperText="Full width!"\n        fullWidth\n        margin="normal"\n        InputLabelProps={{\n          shrink: true,\n        }}\n      />\n      <TextField\n        id="standard-bare"\n        className={classes.textField}\n        defaultValue="Bare"\n        margin="normal"\n      />\n    </form>\n  );\n}\n\nexport default TextFields;\n'},2701:function(e,n){e.exports='import React from \'react\';\nimport PropTypes from \'prop-types\';\nimport classNames from \'classnames\';\nimport { withStyles } from \'@material-ui/core/styles\';\nimport MenuItem from \'@material-ui/core/MenuItem\';\nimport TextField from \'@material-ui/core/TextField\';\n\nconst styles = theme => ({\n  container: {\n    display: \'flex\',\n    flexWrap: \'wrap\',\n  },\n  textField: {\n    marginLeft: theme.spacing.unit,\n    marginRight: theme.spacing.unit,\n    width: 200,\n  },\n  dense: {\n    marginTop: 19,\n  },\n  menu: {\n    width: 200,\n  },\n});\n\nconst currencies = [\n  {\n    value: \'USD\',\n    label: \'$\',\n  },\n  {\n    value: \'EUR\',\n    label: \'€\',\n  },\n  {\n    value: \'BTC\',\n    label: \'฿\',\n  },\n  {\n    value: \'JPY\',\n    label: \'¥\',\n  },\n];\n\nclass TextFields extends React.Component {\n  state = {\n    name: \'Cat in the Hat\',\n    age: \'\',\n    multiline: \'Controlled\',\n    currency: \'EUR\',\n  };\n\n  handleChange = name => event => {\n    this.setState({ [name]: event.target.value });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <form className={classes.container} noValidate autoComplete="off">\n        <TextField\n          id="standard-name"\n          label="Name"\n          className={classes.textField}\n          value={this.state.name}\n          onChange={this.handleChange(\'name\')}\n          margin="normal"\n        />\n\n        <TextField\n          id="standard-uncontrolled"\n          label="Uncontrolled"\n          defaultValue="foo"\n          className={classes.textField}\n          margin="normal"\n        />\n\n        <TextField\n          required\n          id="standard-required"\n          label="Required"\n          defaultValue="Hello World"\n          className={classes.textField}\n          margin="normal"\n        />\n\n        <TextField\n          error\n          id="standard-error"\n          label="Error"\n          defaultValue="Hello World"\n          className={classes.textField}\n          margin="normal"\n        />\n\n        <TextField\n          disabled\n          id="standard-disabled"\n          label="Disabled"\n          defaultValue="Hello World"\n          className={classes.textField}\n          margin="normal"\n        />\n\n        <TextField\n          id="standard-password-input"\n          label="Password"\n          className={classes.textField}\n          type="password"\n          autoComplete="current-password"\n          margin="normal"\n        />\n\n        <TextField\n          id="standard-read-only-input"\n          label="Read Only"\n          defaultValue="Hello World"\n          className={classes.textField}\n          margin="normal"\n          InputProps={{\n            readOnly: true,\n          }}\n        />\n\n        <TextField\n          id="standard-dense"\n          label="Dense"\n          className={classNames(classes.textField, classes.dense)}\n          margin="dense"\n        />\n\n        <TextField\n          id="standard-multiline-flexible"\n          label="Multiline"\n          multiline\n          rowsMax="4"\n          value={this.state.multiline}\n          onChange={this.handleChange(\'multiline\')}\n          className={classes.textField}\n          margin="normal"\n        />\n\n        <TextField\n          id="standard-multiline-static"\n          label="Multiline"\n          multiline\n          rows="4"\n          defaultValue="Default Value"\n          className={classes.textField}\n          margin="normal"\n        />\n\n        <TextField\n          id="standard-helperText"\n          label="Helper text"\n          defaultValue="Default Value"\n          className={classes.textField}\n          helperText="Some important text"\n          margin="normal"\n        />\n\n        <TextField\n          id="standard-with-placeholder"\n          label="With placeholder"\n          placeholder="Placeholder"\n          className={classes.textField}\n          margin="normal"\n        />\n\n        <TextField\n          id="standard-textarea"\n          label="With placeholder multiline"\n          placeholder="Placeholder"\n          multiline\n          className={classes.textField}\n          margin="normal"\n        />\n\n        <TextField\n          id="standard-number"\n          label="Number"\n          value={this.state.age}\n          onChange={this.handleChange(\'age\')}\n          type="number"\n          className={classes.textField}\n          InputLabelProps={{\n            shrink: true,\n          }}\n          margin="normal"\n        />\n\n        <TextField\n          id="standard-search"\n          label="Search field"\n          type="search"\n          className={classes.textField}\n          margin="normal"\n        />\n\n        <TextField\n          id="standard-select-currency"\n          select\n          label="Select"\n          className={classes.textField}\n          value={this.state.currency}\n          onChange={this.handleChange(\'currency\')}\n          SelectProps={{\n            MenuProps: {\n              className: classes.menu,\n            },\n          }}\n          helperText="Please select your currency"\n          margin="normal"\n        >\n          {currencies.map(option => (\n            <MenuItem key={option.value} value={option.value}>\n              {option.label}\n            </MenuItem>\n          ))}\n        </TextField>\n        <TextField\n          id="standard-select-currency-native"\n          select\n          label="Native select"\n          className={classes.textField}\n          value={this.state.currency}\n          onChange={this.handleChange(\'currency\')}\n          SelectProps={{\n            native: true,\n            MenuProps: {\n              className: classes.menu,\n            },\n          }}\n          helperText="Please select your currency"\n          margin="normal"\n        >\n          {currencies.map(option => (\n            <option key={option.value} value={option.value}>\n              {option.label}\n            </option>\n          ))}\n        </TextField>\n        <TextField\n          id="standard-full-width"\n          label="Label"\n          style={{ margin: 8 }}\n          placeholder="Placeholder"\n          helperText="Full width!"\n          fullWidth\n          margin="normal"\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n\n        <TextField\n          id="standard-bare"\n          className={classes.textField}\n          defaultValue="Bare"\n          margin="normal"\n        />\n      </form>\n    );\n  }\n}\n\nTextFields.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(TextFields);\n'},2702:function(e,n){e.exports='import React from \'react\';\nimport PropTypes from \'prop-types\';\nimport classNames from \'classnames\';\nimport { createStyles, Theme, withStyles, WithStyles } from \'@material-ui/core/styles\';\nimport MenuItem from \'@material-ui/core/MenuItem\';\nimport TextField from \'@material-ui/core/TextField\';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    container: {\n      display: \'flex\',\n      flexWrap: \'wrap\',\n    },\n    textField: {\n      marginLeft: theme.spacing.unit,\n      marginRight: theme.spacing.unit,\n      width: 200,\n    },\n    dense: {\n      marginTop: 19,\n    },\n    menu: {\n      width: 200,\n    },\n  });\n\nconst currencies = [\n  {\n    value: \'USD\',\n    label: \'$\',\n  },\n  {\n    value: \'EUR\',\n    label: \'€\',\n  },\n  {\n    value: \'BTC\',\n    label: \'฿\',\n  },\n  {\n    value: \'JPY\',\n    label: \'¥\',\n  },\n];\n\nexport interface Props extends WithStyles<typeof styles> {}\n\nexport interface State {\n  name: string;\n  age: string;\n  multiline: string;\n  currency: string;\n}\n\nclass TextFields extends React.Component<Props, State> {\n  state: State = {\n    name: \'Cat in the Hat\',\n    age: \'\',\n    multiline: \'Controlled\',\n    currency: \'EUR\',\n  };\n\n  handleChange = (name: keyof State) => (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ [name]: event.target.value } as Pick<State, keyof State>);\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <form className={classes.container} noValidate autoComplete="off">\n        <TextField\n          id="standard-name"\n          label="Name"\n          className={classes.textField}\n          value={this.state.name}\n          onChange={this.handleChange(\'name\')}\n          margin="normal"\n        />\n        <TextField\n          id="standard-uncontrolled"\n          label="Uncontrolled"\n          defaultValue="foo"\n          className={classes.textField}\n          margin="normal"\n        />\n        <TextField\n          required\n          id="standard-required"\n          label="Required"\n          defaultValue="Hello World"\n          className={classes.textField}\n          margin="normal"\n        />\n        <TextField\n          error\n          id="standard-error"\n          label="Error"\n          defaultValue="Hello World"\n          className={classes.textField}\n          margin="normal"\n        />\n        <TextField\n          disabled\n          id="standard-disabled"\n          label="Disabled"\n          defaultValue="Hello World"\n          className={classes.textField}\n          margin="normal"\n        />\n        <TextField\n          id="standard-password-input"\n          label="Password"\n          className={classes.textField}\n          type="password"\n          autoComplete="current-password"\n          margin="normal"\n        />\n        <TextField\n          id="standard-read-only-input"\n          label="Read Only"\n          defaultValue="Hello World"\n          className={classes.textField}\n          margin="normal"\n          InputProps={{\n            readOnly: true,\n          }}\n        />\n        <TextField\n          id="standard-dense"\n          label="Dense"\n          className={classNames(classes.textField, classes.dense)}\n          margin="dense"\n        />\n        <TextField\n          id="standard-multiline-flexible"\n          label="Multiline"\n          multiline\n          rowsMax="4"\n          value={this.state.multiline}\n          onChange={this.handleChange(\'multiline\')}\n          className={classes.textField}\n          margin="normal"\n        />\n        <TextField\n          id="standard-multiline-static"\n          label="Multiline"\n          multiline\n          rows="4"\n          defaultValue="Default Value"\n          className={classes.textField}\n          margin="normal"\n        />\n        <TextField\n          id="standard-helperText"\n          label="Helper text"\n          defaultValue="Default Value"\n          className={classes.textField}\n          helperText="Some important text"\n          margin="normal"\n        />\n        <TextField\n          id="standard-with-placeholder"\n          label="With placeholder"\n          placeholder="Placeholder"\n          className={classes.textField}\n          margin="normal"\n        />\n        <TextField\n          id="standard-textarea"\n          label="With placeholder multiline"\n          placeholder="Placeholder"\n          multiline\n          className={classes.textField}\n          margin="normal"\n        />\n        <TextField\n          id="standard-number"\n          label="Number"\n          value={this.state.age}\n          onChange={this.handleChange(\'age\')}\n          type="number"\n          className={classes.textField}\n          InputLabelProps={{\n            shrink: true,\n          }}\n          margin="normal"\n        />\n        <TextField\n          id="standard-search"\n          label="Search field"\n          type="search"\n          className={classes.textField}\n          margin="normal"\n        />\n        <TextField\n          id="standard-select-currency"\n          select\n          label="Select"\n          className={classes.textField}\n          value={this.state.currency}\n          onChange={this.handleChange(\'currency\')}\n          SelectProps={{\n            MenuProps: {\n              className: classes.menu,\n            },\n          }}\n          helperText="Please select your currency"\n          margin="normal"\n        >\n          {currencies.map(option => (\n            <MenuItem key={option.value} value={option.value}>\n              {option.label}\n            </MenuItem>\n          ))}\n        </TextField>\n        <TextField\n          id="standard-select-currency-native"\n          select\n          label="Native select"\n          className={classes.textField}\n          value={this.state.currency}\n          onChange={this.handleChange(\'currency\')}\n          SelectProps={{\n            native: true,\n            MenuProps: {\n              className: classes.menu,\n            },\n          }}\n          helperText="Please select your currency"\n          margin="normal"\n        >\n          {currencies.map(option => (\n            <option key={option.value} value={option.value}>\n              {option.label}\n            </option>\n          ))}\n        </TextField>\n        <TextField\n          id="standard-full-width"\n          label="Label"\n          style={{ margin: 8 }}\n          placeholder="Placeholder"\n          helperText="Full width!"\n          fullWidth\n          margin="normal"\n          InputLabelProps={{\n            shrink: true,\n          }}\n        />\n        <TextField\n          id="standard-bare"\n          className={classes.textField}\n          defaultValue="Bare"\n          margin="normal"\n        />\n      </form>\n    );\n  }\n}\n\n(TextFields as React.ComponentClass<Props>).propTypes = {\n  classes: PropTypes.object.isRequired,\n} as any;\n\nexport default withStyles(styles)(TextFields);\n'},288:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var a={50:"#f3e5f5",100:"#e1bee7",200:"#ce93d8",300:"#ba68c8",400:"#ab47bc",500:"#9c27b0",600:"#8e24aa",700:"#7b1fa2",800:"#6a1b9a",900:"#4a148c",A100:"#ea80fc",A200:"#e040fb",A400:"#d500f9",A700:"#aa00ff"};n.default=a},32:function(e,n,t){"use strict";var a=t(0);Object.defineProperty(n,"__esModule",{value:!0}),Object.defineProperty(n,"default",{enumerable:!0,get:function(){return l.default}});var l=a(t(38))},36:function(e,n,t){"use strict";var a=t(0);Object.defineProperty(n,"__esModule",{value:!0}),Object.defineProperty(n,"default",{enumerable:!0,get:function(){return l.default}});var l=a(t(65))},38:function(e,n,t){"use strict";var a=t(0);Object.defineProperty(n,"__esModule",{value:!0}),n.default=n.styles=void 0;var l=a(t(6)),r=a(t(4)),i=a(t(3)),o=a(t(1)),s=(a(t(2)),a(t(5))),d=(t(9),a(t(7))),u=t(75),m=(a(t(39)),[0,8,16,24,32,40]),p=["auto",!0,1,2,3,4,5,6,7,8,9,10,11,12];var c=function(e){return(0,i.default)({container:{boxSizing:"border-box",display:"flex",flexWrap:"wrap",width:"100%"},item:{boxSizing:"border-box",margin:"0"},zeroMinWidth:{minWidth:0},"direction-xs-column":{flexDirection:"column"},"direction-xs-column-reverse":{flexDirection:"column-reverse"},"direction-xs-row-reverse":{flexDirection:"row-reverse"},"wrap-xs-nowrap":{flexWrap:"nowrap"},"wrap-xs-wrap-reverse":{flexWrap:"wrap-reverse"},"align-items-xs-center":{alignItems:"center"},"align-items-xs-flex-start":{alignItems:"flex-start"},"align-items-xs-flex-end":{alignItems:"flex-end"},"align-items-xs-baseline":{alignItems:"baseline"},"align-content-xs-center":{alignContent:"center"},"align-content-xs-flex-start":{alignContent:"flex-start"},"align-content-xs-flex-end":{alignContent:"flex-end"},"align-content-xs-space-between":{alignContent:"space-between"},"align-content-xs-space-around":{alignContent:"space-around"},"justify-xs-center":{justifyContent:"center"},"justify-xs-flex-end":{justifyContent:"flex-end"},"justify-xs-space-between":{justifyContent:"space-between"},"justify-xs-space-around":{justifyContent:"space-around"},"justify-xs-space-evenly":{justifyContent:"space-evenly"}},function(e,n){var t={};return m.forEach(function(e,a){0!==a&&(t["spacing-".concat(n,"-").concat(e)]={margin:-e/2,width:"calc(100% + ".concat(e,"px)"),"& > $item":{padding:e/2}})}),t}(0,"xs"),u.keys.reduce(function(n,t){return function(e,n,t){var a={};p.forEach(function(e){var n="grid-".concat(t,"-").concat(e);if(!0!==e)if("auto"!==e){var l="".concat(Math.round(e/12*1e8)/1e6,"%");a[n]={flexBasis:l,flexGrow:0,maxWidth:l}}else a[n]={flexBasis:"auto",flexGrow:0,maxWidth:"none"};else a[n]={flexBasis:0,flexGrow:1,maxWidth:"100%"}}),"xs"===t?(0,i.default)(e,a):e[n.breakpoints.up(t)]=a}(n,e,t),n},{}))};function f(e){var n,t=e.alignContent,a=e.alignItems,d=e.classes,u=e.className,m=e.component,p=e.container,c=e.direction,h=e.item,g=e.justify,x=e.lg,v=e.md,b=e.sm,y=e.spacing,F=e.wrap,I=e.xl,C=e.xs,T=e.zeroMinWidth,w=(0,r.default)(e,["alignContent","alignItems","classes","className","component","container","direction","item","justify","lg","md","sm","spacing","wrap","xl","xs","zeroMinWidth"]),P=(0,s.default)((n={},(0,l.default)(n,d.container,p),(0,l.default)(n,d.item,h),(0,l.default)(n,d.zeroMinWidth,T),(0,l.default)(n,d["spacing-xs-".concat(String(y))],p&&0!==y),(0,l.default)(n,d["direction-xs-".concat(String(c))],c!==f.defaultProps.direction),(0,l.default)(n,d["wrap-xs-".concat(String(F))],F!==f.defaultProps.wrap),(0,l.default)(n,d["align-items-xs-".concat(String(a))],a!==f.defaultProps.alignItems),(0,l.default)(n,d["align-content-xs-".concat(String(t))],t!==f.defaultProps.alignContent),(0,l.default)(n,d["justify-xs-".concat(String(g))],g!==f.defaultProps.justify),(0,l.default)(n,d["grid-xs-".concat(String(C))],!1!==C),(0,l.default)(n,d["grid-sm-".concat(String(b))],!1!==b),(0,l.default)(n,d["grid-md-".concat(String(v))],!1!==v),(0,l.default)(n,d["grid-lg-".concat(String(x))],!1!==x),(0,l.default)(n,d["grid-xl-".concat(String(I))],!1!==I),n),u);return o.default.createElement(m,(0,i.default)({className:P},w))}n.styles=c,f.defaultProps={alignContent:"stretch",alignItems:"stretch",component:"div",container:!1,direction:"row",item:!1,justify:"flex-start",lg:!1,md:!1,sm:!1,spacing:0,wrap:"wrap",xl:!1,xs:!1,zeroMinWidth:!1};var h=(0,d.default)(c,{name:"MuiGrid"})(f);n.default=h},381:function(e,n,t){"use strict";var a=t(0);Object.defineProperty(n,"__esModule",{value:!0}),n.default=n.styles=void 0;var l=a(t(3)),r=a(t(6)),i=a(t(4)),o=a(t(1)),s=(a(t(2)),a(t(5))),d=(t(9),a(t(20)),a(t(16))),u=a(t(7)),m=a(t(23)),p={root:{display:"flex",height:"0.01em",maxHeight:"2em",alignItems:"center"},filled:{"&$positionStart":{marginTop:16}},positionStart:{marginRight:8},positionEnd:{marginLeft:8},disablePointerEvents:{pointerEvents:"none"}};function c(e){var n,t=e.children,a=e.component,u=e.classes,m=e.className,p=e.disablePointerEvents,c=e.disableTypography,f=e.muiFormControl,h=e.position,g=e.variant,x=(0,i.default)(e,["children","component","classes","className","disablePointerEvents","disableTypography","muiFormControl","position","variant"]),v=g;return f&&!v&&(v=f.variant),o.default.createElement(a,(0,l.default)({className:(0,s.default)(u.root,(n={},(0,r.default)(n,u.filled,"filled"===v),(0,r.default)(n,u.positionStart,"start"===h),(0,r.default)(n,u.positionEnd,"end"===h),(0,r.default)(n,u.disablePointerEvents,p),n),m)},x),"string"!=typeof t||c?t:o.default.createElement(d.default,{color:"textSecondary"},t))}n.styles=p,c.defaultProps={component:"div",disablePointerEvents:!1,disableTypography:!1};var f=(0,u.default)(p,{name:"MuiInputAdornment"})((0,m.default)(c));n.default=f},39:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var a=function(e){return function(){return null}};n.default=a},417:function(e,n,t){"use strict";var a=t(0);Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var l=a(t(1)),r=(0,a(t(21)).default)(l.default.createElement(l.default.Fragment,null,l.default.createElement("path",{d:"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 3c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm0 14.2c-2.5 0-4.71-1.28-6-3.22.03-1.99 4-3.08 6-3.08 1.99 0 5.97 1.09 6 3.08-1.29 1.94-3.5 3.22-6 3.22z"}),l.default.createElement("path",{fill:"none",d:"M0 0h24v24H0z"})),"AccountCircle");n.default=r},424:function(e,n,t){"use strict";var a=t(0);Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var l=a(t(1)),r=(0,a(t(21)).default)(l.default.createElement(l.default.Fragment,null,l.default.createElement("path",{fill:"none",d:"M0 0h24v24H0z"}),l.default.createElement("path",{d:"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z"})),"Visibility");n.default=r},425:function(e,n,t){"use strict";var a=t(0);Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var l=a(t(1)),r=(0,a(t(21)).default)(l.default.createElement(l.default.Fragment,null,l.default.createElement("path",{fill:"none",d:"M0 0h24v24H0zm0 0h24v24H0zm0 0h24v24H0zm0 0h24v24H0z"}),l.default.createElement("path",{d:"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78l3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z"})),"VisibilityOff");n.default=r},47:function(e,n,t){"use strict";var a=t(0);Object.defineProperty(n,"__esModule",{value:!0}),Object.defineProperty(n,"default",{enumerable:!0,get:function(){return l.default}});var l=a(t(73))},48:function(e,n,t){"use strict";var a=t(0);Object.defineProperty(n,"__esModule",{value:!0}),Object.defineProperty(n,"default",{enumerable:!0,get:function(){return l.default}});var l=a(t(98))},49:function(e,n,t){"use strict";var a=t(0);Object.defineProperty(n,"__esModule",{value:!0}),Object.defineProperty(n,"default",{enumerable:!0,get:function(){return l.default}});var l=a(t(61))},50:function(e,n,t){"use strict";var a=t(0);Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var l=a(t(1)),r=a(t(33)),i=a(t(31)),o=l.default.createElement("path",{d:"M7 10l5 5 5-5z"}),s=function(e){return l.default.createElement(i.default,e,o)};(s=(0,r.default)(s)).muiName="SvgIcon";var d=s;n.default=d},51:function(e,n,t){"use strict";var a=t(0);Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var l=a(t(3)),r=a(t(6)),i=a(t(4)),o=a(t(1)),s=(a(t(2)),a(t(5)));t(9);var d=function(e){var n,t=e.children,a=e.classes,d=e.className,u=e.disabled,m=e.IconComponent,p=e.inputRef,c=e.name,f=e.onChange,h=e.value,g=e.variant,x=(0,i.default)(e,["children","classes","className","disabled","IconComponent","inputRef","name","onChange","value","variant"]);return o.default.createElement("div",{className:a.root},o.default.createElement("select",(0,l.default)({className:(0,s.default)(a.select,(n={},(0,r.default)(n,a.filled,"filled"===g),(0,r.default)(n,a.outlined,"outlined"===g),(0,r.default)(n,a.disabled,u),n),d),name:c,disabled:u,onChange:f,value:h,ref:p},x),t),o.default.createElement(m,{className:a.icon}))};n.default=d},59:function(e,n,t){"use strict";var a=t(0);Object.defineProperty(n,"__esModule",{value:!0}),Object.defineProperty(n,"default",{enumerable:!0,get:function(){return l.default}});var l=a(t(85))},61:function(e,n,t){"use strict";var a=t(0);Object.defineProperty(n,"__esModule",{value:!0}),n.default=n.styles=void 0;var l=a(t(3)),r=a(t(6)),i=a(t(4)),o=a(t(1)),s=(a(t(2)),a(t(5))),d=(t(9),a(t(30))),u=a(t(23)),m=a(t(7)),p=function(e){return{root:{fontFamily:e.typography.fontFamily,color:e.palette.text.secondary,fontSize:e.typography.pxToRem(16),lineHeight:1,padding:0,"&$focused":{color:e.palette.primary["light"===e.palette.type?"dark":"light"]},"&$disabled":{color:e.palette.text.disabled},"&$error":{color:e.palette.error.main}},focused:{},disabled:{},error:{},filled:{},required:{},asterisk:{"&$error":{color:e.palette.error.main}}}};function c(e){var n,t=e.children,a=e.classes,u=e.className,m=e.component,p=(e.disabled,e.error,e.filled,e.focused,e.muiFormControl),c=(e.required,(0,i.default)(e,["children","classes","className","component","disabled","error","filled","focused","muiFormControl","required"])),f=(0,d.default)({props:e,muiFormControl:p,states:["required","focused","disabled","error","filled"]});return o.default.createElement(m,(0,l.default)({className:(0,s.default)(a.root,(n={},(0,r.default)(n,a.disabled,f.disabled),(0,r.default)(n,a.error,f.error),(0,r.default)(n,a.filled,f.filled),(0,r.default)(n,a.focused,f.focused),(0,r.default)(n,a.required,f.required),n),u)},c),t,f.required&&o.default.createElement("span",{className:(0,s.default)(a.asterisk,(0,r.default)({},a.error,f.error))}," *"))}n.styles=p,c.defaultProps={component:"label"};var f=(0,m.default)(p,{name:"MuiFormLabel"})((0,u.default)(c));n.default=f},62:function(e,n,t){"use strict";var a=t(0);Object.defineProperty(n,"__esModule",{value:!0}),Object.defineProperty(n,"default",{enumerable:!0,get:function(){return l.default}});var l=a(t(93))},65:function(e,n,t){"use strict";var a=t(0);Object.defineProperty(n,"__esModule",{value:!0}),n.default=n.styles=void 0;var l=a(t(3)),r=a(t(6)),i=a(t(4)),o=a(t(10)),s=a(t(12)),d=a(t(13)),u=a(t(11)),m=a(t(14)),p=a(t(1)),c=(a(t(2)),a(t(5))),f=(t(9),t(67)),h=a(t(7)),g=t(22),x=t(43),v=a(t(114)),b={root:{display:"inline-flex",flexDirection:"column",position:"relative",minWidth:0,padding:0,margin:0,border:0,verticalAlign:"top"},marginNormal:{marginTop:16,marginBottom:8},marginDense:{marginTop:8,marginBottom:4},fullWidth:{width:"100%"}};n.styles=b;var y=function(e){function n(e){var t;(0,o.default)(this,n),(t=(0,s.default)(this,(0,d.default)(n).call(this))).handleFocus=function(){t.setState(function(e){return e.focused?null:{focused:!0}})},t.handleBlur=function(){t.setState(function(e){return e.focused?{focused:!1}:null})},t.handleDirty=function(){t.state.filled||t.setState({filled:!0})},t.handleClean=function(){t.state.filled&&t.setState({filled:!1})},t.state={adornedStart:!1,filled:!1,focused:!1};var a=e.children;return a&&p.default.Children.forEach(a,function(e){if((0,x.isMuiElement)(e,["Input","Select"])){(0,f.isFilled)(e.props,!0)&&(t.state.filled=!0);var n=(0,x.isMuiElement)(e,["Select"])?e.props.input:e;n&&(0,f.isAdornedStart)(n.props)&&(t.state.adornedStart=!0)}}),t}return(0,m.default)(n,e),(0,u.default)(n,null,[{key:"getDerivedStateFromProps",value:function(e,n){return e.disabled&&n.focused?{focused:!1}:null}}]),(0,u.default)(n,[{key:"render",value:function(){var e,n=this.props,t=n.classes,a=n.className,o=n.component,s=n.disabled,d=n.error,u=n.fullWidth,m=n.margin,f=n.required,h=n.variant,x=(0,i.default)(n,["classes","className","component","disabled","error","fullWidth","margin","required","variant"]),b=this.state,y={adornedStart:b.adornedStart,disabled:s,error:d,filled:b.filled,focused:b.focused,margin:m,onBlur:this.handleBlur,onEmpty:this.handleClean,onFilled:this.handleDirty,onFocus:this.handleFocus,required:f,variant:h};return p.default.createElement(v.default.Provider,{value:y},p.default.createElement(o,(0,l.default)({className:(0,c.default)(t.root,(e={},(0,r.default)(e,t["margin".concat((0,g.capitalize)(m))],"none"!==m),(0,r.default)(e,t.fullWidth,u),e),a)},x)))}}]),n}(p.default.Component);y.defaultProps={component:"div",disabled:!1,error:!1,fullWidth:!1,margin:"none",required:!1,variant:"standard"};var F=(0,h.default)(b,{name:"MuiFormControl"})(y);n.default=F},70:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var a={50:"#e8f5e9",100:"#c8e6c9",200:"#a5d6a7",300:"#81c784",400:"#66bb6a",500:"#4caf50",600:"#43a047",700:"#388e3c",800:"#2e7d32",900:"#1b5e20",A100:"#b9f6ca",A200:"#69f0ae",A400:"#00e676",A700:"#00c853"};n.default=a},73:function(e,n,t){"use strict";var a=t(0);Object.defineProperty(n,"__esModule",{value:!0}),n.default=n.styles=void 0;var l=a(t(3)),r=a(t(6)),i=a(t(4)),o=a(t(1)),s=(a(t(2)),a(t(5))),d=a(t(30)),u=a(t(23)),m=a(t(7)),p=a(t(49)),c=function(e){return{root:{transformOrigin:"top left"},focused:{},disabled:{},error:{},required:{},formControl:{position:"absolute",left:0,top:0,transform:"translate(0, 24px) scale(1)"},marginDense:{transform:"translate(0, 21px) scale(1)"},shrink:{transform:"translate(0, 1.5px) scale(0.75)",transformOrigin:"top left"},animated:{transition:e.transitions.create(["color","transform"],{duration:e.transitions.duration.shorter,easing:e.transitions.easing.easeOut})},filled:{zIndex:1,pointerEvents:"none",transform:"translate(12px, 20px) scale(1)","&$marginDense":{transform:"translate(12px, 17px) scale(1)"},"&$shrink":{transform:"translate(12px, 10px) scale(0.75)","&$marginDense":{transform:"translate(12px, 7px) scale(0.75)"}}},outlined:{zIndex:1,pointerEvents:"none",transform:"translate(14px, 20px) scale(1)","&$marginDense":{transform:"translate(14px, 17px) scale(1)"},"&$shrink":{transform:"translate(14px, -6px) scale(0.75)"}}}};function f(e){var n,t=e.children,a=e.classes,u=e.className,m=e.disableAnimation,c=e.FormLabelClasses,f=(e.margin,e.muiFormControl),h=e.shrink,g=(e.variant,(0,i.default)(e,["children","classes","className","disableAnimation","FormLabelClasses","margin","muiFormControl","shrink","variant"])),x=h;void 0===x&&f&&(x=f.filled||f.focused||f.adornedStart);var v=(0,d.default)({props:e,muiFormControl:f,states:["margin","variant"]}),b=(0,s.default)(a.root,(n={},(0,r.default)(n,a.formControl,f),(0,r.default)(n,a.animated,!m),(0,r.default)(n,a.shrink,x),(0,r.default)(n,a.marginDense,"dense"===v.margin),(0,r.default)(n,a.filled,"filled"===v.variant),(0,r.default)(n,a.outlined,"outlined"===v.variant),n),u);return o.default.createElement(p.default,(0,l.default)({"data-shrink":x,className:b,classes:(0,l.default)({focused:a.focused,disabled:a.disabled,error:a.error,required:a.required},c)},g),t)}n.styles=c,f.defaultProps={disableAnimation:!1};var h=(0,m.default)(c,{name:"MuiInputLabel"})((0,u.default)(f));n.default=h},77:function(e,n,t){"use strict";var a=t(0);Object.defineProperty(n,"__esModule",{value:!0}),n.default=n.styles=void 0;var l=a(t(3)),r=a(t(4)),i=a(t(1)),o=(a(t(2)),t(9),a(t(51))),s=a(t(7)),d=a(t(30)),u=a(t(23)),m=a(t(50)),p=a(t(35)),c=function(e){return{root:{position:"relative",width:"100%"},select:{"-moz-appearance":"none","-webkit-appearance":"none",userSelect:"none",paddingRight:32,borderRadius:0,height:"1.1875em",width:"calc(100% - 32px)",minWidth:16,cursor:"pointer","&:focus":{backgroundColor:"light"===e.palette.type?"rgba(0, 0, 0, 0.05)":"rgba(255, 255, 255, 0.05)",borderRadius:0},"&::-ms-expand":{display:"none"},"&$disabled":{cursor:"default"},"&[multiple]":{height:"auto"},"&:not([multiple]) option, &:not([multiple]) optgroup":{backgroundColor:e.palette.background.paper}},filled:{width:"calc(100% - 44px)"},outlined:{width:"calc(100% - 46px)",borderRadius:e.shape.borderRadius},selectMenu:{width:"auto",height:"auto",textOverflow:"ellipsis",whiteSpace:"nowrap",overflow:"hidden",minHeight:"1.1875em"},disabled:{},icon:{position:"absolute",right:0,top:"calc(50% - 12px)",color:e.palette.action.active,"pointer-events":"none"}}};function f(e){var n=e.children,t=e.classes,a=e.IconComponent,s=e.input,u=e.inputProps,m=e.muiFormControl,p=(e.variant,(0,r.default)(e,["children","classes","IconComponent","input","inputProps","muiFormControl","variant"])),c=(0,d.default)({props:e,muiFormControl:m,states:["variant"]});return i.default.cloneElement(s,(0,l.default)({inputComponent:o.default,inputProps:(0,l.default)({children:n,classes:t,IconComponent:a,variant:c.variant,type:void 0},u,s?s.props.inputProps:{})},p))}n.styles=c,f.defaultProps={IconComponent:m.default,input:i.default.createElement(p.default,null)},f.muiName="Select";var h=(0,s.default)(c,{name:"MuiNativeSelect"})((0,u.default)(f));n.default=h},83:function(e,n,t){"use strict";var a=t(0);Object.defineProperty(n,"__esModule",{value:!0}),Object.defineProperty(n,"default",{enumerable:!0,get:function(){return l.default}});var l=a(t(95))},84:function(e,n,t){"use strict";var a=t(0);Object.defineProperty(n,"__esModule",{value:!0}),Object.defineProperty(n,"default",{enumerable:!0,get:function(){return l.default}});var l=a(t(96))},85:function(e,n,t){"use strict";var a=t(0);Object.defineProperty(n,"__esModule",{value:!0}),n.default=n.styles=void 0;var l=a(t(3)),r=a(t(4)),i=a(t(1)),o=(a(t(2)),t(9),a(t(86))),s=a(t(30)),d=a(t(23)),u=a(t(7)),m=a(t(148)),p=a(t(50)),c=a(t(35)),f=t(77),h=a(t(51)),g=f.styles;function x(e){var n=e.autoWidth,t=e.children,a=e.classes,d=e.displayEmpty,u=e.IconComponent,p=e.input,c=e.inputProps,f=e.MenuProps,g=e.muiFormControl,v=e.multiple,b=e.native,y=e.onClose,F=e.onOpen,I=e.open,C=e.renderValue,T=e.SelectDisplayProps,w=(e.variant,(0,r.default)(e,["autoWidth","children","classes","displayEmpty","IconComponent","input","inputProps","MenuProps","muiFormControl","multiple","native","onClose","onOpen","open","renderValue","SelectDisplayProps","variant"])),P=b?h.default:o.default,N=(0,s.default)({props:e,muiFormControl:g,states:["variant"]});return i.default.cloneElement(p,(0,l.default)({inputComponent:P,inputProps:(0,l.default)({children:t,IconComponent:u,variant:N.variant,type:void 0,multiple:v},b?{}:{autoWidth:n,displayEmpty:d,MenuProps:f,onClose:y,onOpen:F,open:I,renderValue:C,SelectDisplayProps:T},c,{classes:c?(0,m.default)({baseClasses:a,newClasses:c.classes,Component:x}):a},p?p.props.inputProps:{})},w))}n.styles=g,x.defaultProps={autoWidth:!1,displayEmpty:!1,IconComponent:p.default,input:i.default.createElement(c.default,null),multiple:!1,native:!1},x.muiName="Select";var v=(0,u.default)(g,{name:"MuiSelect"})((0,d.default)(x));n.default=v},86:function(e,n,t){"use strict";var a=t(0);Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var l=a(t(3)),r=a(t(6)),i=a(t(4)),o=a(t(41)),s=a(t(10)),d=a(t(11)),u=a(t(12)),m=a(t(13)),p=a(t(14)),c=a(t(71)),f=a(t(1)),h=(a(t(2)),a(t(5))),g=(a(t(20)),t(9),a(t(149))),x=t(67),v=t(43);function b(e,n){return"object"===(0,c.default)(n)&&null!==n?e===n:String(e)===String(n)}var y=function(e){function n(e){var t;return(0,s.default)(this,n),(t=(0,u.default)(this,(0,m.default)(n).call(this))).ignoreNextBlur=!1,t.update=function(e){var n=e.event,a=e.open;t.isOpenControlled?a?t.props.onOpen(n):t.props.onClose(n):t.setState({menuMinWidth:t.props.autoWidth?null:t.displayRef.clientWidth,open:a})},t.handleClick=function(e){t.ignoreNextBlur=!0,t.update({open:!0,event:e})},t.handleClose=function(e){t.update({open:!1,event:e})},t.handleItemClick=function(e){return function(n){t.props.multiple||t.update({open:!1,event:n});var a=t.props,l=a.onChange,r=a.name;if(l){var i;if(t.props.multiple){var s=(i=Array.isArray(t.props.value)?(0,o.default)(t.props.value):[]).indexOf(e.props.value);-1===s?i.push(e.props.value):i.splice(s,1)}else i=e.props.value;n.persist(),n.target={value:i,name:r},l(n,e)}}},t.handleBlur=function(e){if(!0===t.ignoreNextBlur)return e.stopPropagation(),void(t.ignoreNextBlur=!1);if(t.props.onBlur){var n=t.props,a=n.value,l=n.name;e.persist(),e.target={value:a,name:l},t.props.onBlur(e)}},t.handleKeyDown=function(e){t.props.readOnly||-1!==[" ","ArrowUp","ArrowDown"].indexOf(e.key)&&(e.preventDefault(),t.ignoreNextBlur=!0,t.update({open:!0,event:e}))},t.handleDisplayRef=function(e){t.displayRef=e},t.handleInputRef=function(e){var n=t.props.inputRef;if(n){var a={node:e,value:t.props.value,focus:function(){t.displayRef.focus()}};(0,v.setRef)(n,a)}},t.isOpenControlled=void 0!==e.open,t.state={menuMinWidth:null,open:!1},t}return(0,p.default)(n,e),(0,d.default)(n,[{key:"componentDidMount",value:function(){this.isOpenControlled&&this.props.open&&(this.displayRef.focus(),this.forceUpdate()),this.props.autoFocus&&this.displayRef.focus()}},{key:"render",value:function(){var e,n,t=this,a=this.props,o=a.autoWidth,s=a.children,d=a.classes,u=a.className,m=a.disabled,p=a.displayEmpty,c=a.IconComponent,v=(a.inputRef,a.MenuProps),y=void 0===v?{}:v,F=a.multiple,I=a.name,C=(a.onBlur,a.onChange,a.onClose,a.onFocus),T=(a.onOpen,a.open),w=a.readOnly,P=a.renderValue,N=(a.required,a.SelectDisplayProps),S=a.tabIndex,E=a.type,k=void 0===E?"hidden":E,M=a.value,A=a.variant,R=(0,i.default)(a,["autoWidth","children","classes","className","disabled","displayEmpty","IconComponent","inputRef","MenuProps","multiple","name","onBlur","onChange","onClose","onFocus","onOpen","open","readOnly","renderValue","required","SelectDisplayProps","tabIndex","type","value","variant"]),O=this.isOpenControlled&&this.displayRef?T:this.state.open;delete R["aria-invalid"];var j="",V=[],W=!1;((0,x.isFilled)(this.props)||p)&&(P?n=P(M):W=!0);var L=f.default.Children.map(s,function(e){if(!f.default.isValidElement(e))return null;var n;if(F){if(!Array.isArray(M))throw new Error("Material-UI: the `value` property must be an array when using the `Select` component with `multiple`.");(n=M.some(function(n){return b(n,e.props.value)}))&&W&&V.push(e.props.children)}else(n=b(M,e.props.value))&&W&&(j=e.props.children);return f.default.cloneElement(e,{onClick:t.handleItemClick(e),role:"option",selected:n,value:void 0,"data-value":e.props.value})});W&&(n=F?V.join(", "):j);var D,B=this.state.menuMinWidth;return!o&&this.isOpenControlled&&this.displayRef&&(B=this.displayRef.clientWidth),D=void 0!==S?S:m?null:0,f.default.createElement("div",{className:d.root},f.default.createElement("div",(0,l.default)({className:(0,h.default)(d.select,d.selectMenu,(e={},(0,r.default)(e,d.disabled,m),(0,r.default)(e,d.filled,"filled"===A),(0,r.default)(e,d.outlined,"outlined"===A),e),u),ref:this.handleDisplayRef,"aria-pressed":O?"true":"false",tabIndex:D,role:"button","aria-owns":O?"menu-".concat(I||""):void 0,"aria-haspopup":"true",onKeyDown:this.handleKeyDown,onBlur:this.handleBlur,onClick:m||w?null:this.handleClick,onFocus:C,id:I?"select-".concat(I):void 0},N),n||f.default.createElement("span",{dangerouslySetInnerHTML:{__html:"&#8203;"}})),f.default.createElement("input",(0,l.default)({value:Array.isArray(M)?M.join(","):M,name:I,ref:this.handleInputRef,type:k},R)),f.default.createElement(c,{className:d.icon}),f.default.createElement(g.default,(0,l.default)({id:"menu-".concat(I||""),anchorEl:this.displayRef,open:O,onClose:this.handleClose},y,{MenuListProps:(0,l.default)({role:"listbox",disableListWrap:!0},y.MenuListProps),PaperProps:(0,l.default)({},y.PaperProps,{style:(0,l.default)({minWidth:B},null!=y.PaperProps?y.PaperProps.style:null)})}),L))}}]),n}(f.default.Component);n.default=y},898:function(e,n,t){var a;e.exports=(a=t(1),function(e){function n(a){if(t[a])return t[a].exports;var l=t[a]={exports:{},id:a,loaded:!1};return e[a].call(l.exports,l,l.exports,n),l.loaded=!0,l.exports}var t={};return n.m=e,n.c=t,n.p="",n(0)}([function(e,n,t){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(n,"__esModule",{value:!0}),n.conformToMask=void 0;var l=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e},r=function(){function e(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(n,t,a){return t&&e(n.prototype,t),a&&e(n,a),n}}(),i=t(3);Object.defineProperty(n,"conformToMask",{enumerable:!0,get:function(){return a(i).default}});var o=t(11),s=a(o),d=t(9),u=a(d),m=t(5),p=a(m),c=t(2),f=function(e){function n(){var e;!function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,n);for(var t=arguments.length,a=Array(t),l=0;l<t;l++)a[l]=arguments[l];var r=function(e,n){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!n||"object"!=typeof n&&"function"!=typeof n?e:n}(this,(e=n.__proto__||Object.getPrototypeOf(n)).call.apply(e,[this].concat(a)));return r.setRef=r.setRef.bind(r),r.onBlur=r.onBlur.bind(r),r.onChange=r.onChange.bind(r),r}return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function, not "+typeof n);e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),n&&(Object.setPrototypeOf?Object.setPrototypeOf(e,n):e.__proto__=n)}(n,e),r(n,[{key:"setRef",value:function(e){this.inputElement=e}},{key:"initTextMask",value:function(){var e=this.props,n=this.props.value;this.textMaskInputElement=(0,p.default)(l({inputElement:this.inputElement},e)),this.textMaskInputElement.update(n)}},{key:"componentDidMount",value:function(){this.initTextMask()}},{key:"componentDidUpdate",value:function(e){var n=this.props,t=n.value,a=n.pipe,l=n.mask,r=n.guide,i=n.placeholderChar,o=n.showMask,s={guide:r,placeholderChar:i,showMask:o},d="function"==typeof a&&"function"==typeof e.pipe?a.toString()!==e.pipe.toString():(0,c.isNil)(a)&&!(0,c.isNil)(e.pipe)||!(0,c.isNil)(a)&&(0,c.isNil)(e.pipe),u=l.toString()!==e.mask.toString(),m=Object.keys(s).some(function(n){return s[n]!==e[n]})||u||d,p=t!==this.inputElement.value;(p||m)&&this.initTextMask()}},{key:"render",value:function(){var e=this.props,n=e.render,t=function(e,n){var t={};for(var a in e)n.indexOf(a)>=0||Object.prototype.hasOwnProperty.call(e,a)&&(t[a]=e[a]);return t}(e,["render"]);return delete t.mask,delete t.guide,delete t.pipe,delete t.placeholderChar,delete t.keepCharPositions,delete t.value,delete t.onBlur,delete t.onChange,delete t.showMask,n(this.setRef,l({onBlur:this.onBlur,onChange:this.onChange,defaultValue:this.props.value},t))}},{key:"onChange",value:function(e){this.textMaskInputElement.update(),"function"==typeof this.props.onChange&&this.props.onChange(e)}},{key:"onBlur",value:function(e){"function"==typeof this.props.onBlur&&this.props.onBlur(e)}}]),n}(s.default.PureComponent);n.default=f,f.propTypes={mask:u.default.oneOfType([u.default.array,u.default.func,u.default.bool,u.default.shape({mask:u.default.oneOfType([u.default.array,u.default.func]),pipe:u.default.func})]).isRequired,guide:u.default.bool,value:u.default.oneOfType([u.default.string,u.default.number]),pipe:u.default.func,placeholderChar:u.default.string,keepCharPositions:u.default.bool,showMask:u.default.bool},f.defaultProps={render:function(e,n){return s.default.createElement("input",l({ref:e},n))}}},function(e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.placeholderChar="_",n.strFunction="function"},function(e,n,t){"use strict";function a(e){return Array.isArray&&Array.isArray(e)||e instanceof Array}Object.defineProperty(n,"__esModule",{value:!0}),n.convertMaskToPlaceholder=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:r,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:l.placeholderChar;if(!a(e))throw new Error("Text-mask:convertMaskToPlaceholder; The mask property must be an array.");if(-1!==e.indexOf(n))throw new Error("Placeholder character must not be used as part of the mask. Please specify a character that is not present in your mask as your placeholder character.\n\nThe placeholder character that was received is: "+JSON.stringify(n)+"\n\nThe mask that was received is: "+JSON.stringify(e));return e.map(function(e){return e instanceof RegExp?n:e}).join("")},n.isArray=a,n.isString=function(e){return"string"==typeof e||e instanceof String},n.isNumber=function(e){return"number"==typeof e&&void 0===e.length&&!isNaN(e)},n.isNil=function(e){return null==e},n.processCaretTraps=function(e){for(var n=[],t=void 0;-1!==(t=e.indexOf(i));)n.push(t),e.splice(t,1);return{maskWithoutCaretTraps:e,indexes:n}};var l=t(1),r=[],i="[]"},function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0});var a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};n.default=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:o,n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:i,t=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!(0,l.isArray)(n)){if((void 0===n?"undefined":a(n))!==r.strFunction)throw new Error("Text-mask:conformToMask; The mask property must be an array.");n=n(e,t),n=(0,l.processCaretTraps)(n).maskWithoutCaretTraps}var s=t.guide,d=void 0===s||s,u=t.previousConformedValue,m=void 0===u?o:u,p=t.placeholderChar,c=void 0===p?r.placeholderChar:p,f=t.placeholder,h=void 0===f?(0,l.convertMaskToPlaceholder)(n,c):f,g=t.currentCaretPosition,x=t.keepCharPositions,v=!1===d&&void 0!==m,b=e.length,y=m.length,F=h.length,I=n.length,C=b-y,T=C>0,w=g+(T?-C:0),P=w+Math.abs(C);if(!0===x&&!T){for(var N=o,S=w;S<P;S++)h[S]===c&&(N+=c);e=e.slice(0,w)+N+e.slice(w,b)}for(var E=e.split(o).map(function(e,n){return{char:e,isNew:n>=w&&n<P}}),k=b-1;k>=0;k--){var M=E[k].char;if(M!==c){var A=k>=w&&y===I;M===h[A?k-C:k]&&E.splice(k,1)}}var R=o,O=!1;e:for(var j=0;j<F;j++){var V=h[j];if(V===c){if(E.length>0)for(;E.length>0;){var W=E.shift(),L=W.char,D=W.isNew;if(L===c&&!0!==v){R+=c;continue e}if(n[j].test(L)){if(!0===x&&!1!==D&&m!==o&&!1!==d&&T){for(var B=E.length,H=null,_=0;_<B;_++){var U=E[_];if(U.char!==c&&!1===U.isNew)break;if(U.char===c){H=_;break}}null!==H?(R+=L,E.splice(H,1)):j--}else R+=L;continue e}O=!0}!1===v&&(R+=h.substr(j,F));break}R+=V}if(v&&!1===T){for(var q=null,z=0;z<R.length;z++)h[z]===c&&(q=z);R=null!==q?R.substr(0,q+1):o}return{conformedValue:R,meta:{someCharsRejected:O}}};var l=t(2),r=t(1),i=[],o=""},function(e,n){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=function(e){var n=e.previousConformedValue,l=void 0===n?a:n,r=e.previousPlaceholder,i=void 0===r?a:r,o=e.currentCaretPosition,s=void 0===o?0:o,d=e.conformedValue,u=e.rawValue,m=e.placeholderChar,p=e.placeholder,c=e.indexesOfPipedChars,f=void 0===c?t:c,h=e.caretTrapIndexes,g=void 0===h?t:h;if(0===s||!u.length)return 0;var x=u.length,v=l.length,b=p.length,y=d.length,F=x-v,I=F>0,C=0===v;if(F>1&&!I&&!C)return s;var T=0,w=void 0,P=void 0;if(!I||l!==d&&d!==p){var N=d.toLowerCase(),S=u.toLowerCase(),E=S.substr(0,s).split(a),k=E.filter(function(e){return-1!==N.indexOf(e)});P=k[k.length-1];var M=i.substr(0,k.length).split(a).filter(function(e){return e!==m}).length,A=p.substr(0,k.length).split(a).filter(function(e){return e!==m}).length,R=A!==M,O=void 0!==i[k.length-1]&&void 0!==p[k.length-2]&&i[k.length-1]!==m&&i[k.length-1]!==p[k.length-1]&&i[k.length-1]===p[k.length-2];!I&&(R||O)&&M>0&&p.indexOf(P)>-1&&void 0!==u[s]&&(w=!0,P=u[s]);for(var j=f.map(function(e){return N[e]}),V=j.filter(function(e){return e===P}).length,W=k.filter(function(e){return e===P}).length,L=p.substr(0,p.indexOf(m)).split(a).filter(function(e,n){return e===P&&u[n]!==e}).length,D=L+W+V+(w?1:0),B=0,H=0;H<y;H++){var _=N[H];if(T=H+1,_===P&&B++,B>=D)break}}else T=s-F;if(I){for(var U=T,q=T;q<=b;q++)if(p[q]===m&&(U=q),p[q]===m||-1!==g.indexOf(q)||q===b)return U}else if(w){for(var z=T-1;z>=0;z--)if(d[z]===P||-1!==g.indexOf(z)||0===z)return z}else for(var $=T;$>=0;$--)if(p[$-1]===m||-1!==g.indexOf($)||0===$)return $};var t=[],a=""},function(e,n,t){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}function l(e,n){document.activeElement===e&&(g?x(function(){return e.setSelectionRange(n,n,f)},0):e.setSelectionRange(n,n,f))}Object.defineProperty(n,"__esModule",{value:!0});var r=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e},i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};n.default=function(e){var n={previousConformedValue:void 0,previousPlaceholder:void 0};return{state:n,update:function(t){var a=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e,o=a.inputElement,d=a.mask,f=a.guide,g=a.pipe,x=a.placeholderChar,v=void 0===x?p.placeholderChar:x,b=a.keepCharPositions,y=void 0!==b&&b,F=a.showMask,I=void 0!==F&&F;if(void 0===t&&(t=o.value),t!==n.previousConformedValue){(void 0===d?"undefined":i(d))===h&&void 0!==d.pipe&&void 0!==d.mask&&(g=d.pipe,d=d.mask);var C=void 0,T=void 0;if(d instanceof Array&&(C=(0,m.convertMaskToPlaceholder)(d,v)),!1!==d){var w=function(e){if((0,m.isString)(e))return e;if((0,m.isNumber)(e))return String(e);if(null==e)return c;throw new Error("The 'value' provided to Text Mask needs to be a string or a number. The value received was:\n\n "+JSON.stringify(e))}(t),P=o.selectionEnd,N=n.previousConformedValue,S=n.previousPlaceholder,E=void 0;if((void 0===d?"undefined":i(d))===p.strFunction){if(!1===(T=d(w,{currentCaretPosition:P,previousConformedValue:N,placeholderChar:v})))return;var k=(0,m.processCaretTraps)(T),M=k.maskWithoutCaretTraps,A=k.indexes;T=M,E=A,C=(0,m.convertMaskToPlaceholder)(T,v)}else T=d;var R={previousConformedValue:N,guide:f,placeholderChar:v,pipe:g,placeholder:C,currentCaretPosition:P,keepCharPositions:y},O=(0,u.default)(w,T,R),j=O.conformedValue,V=(void 0===g?"undefined":i(g))===p.strFunction,W={};V&&(!1===(W=g(j,r({rawValue:w},R)))?W={value:N,rejected:!0}:(0,m.isString)(W)&&(W={value:W}));var L=V?W.value:j,D=(0,s.default)({previousConformedValue:N,previousPlaceholder:S,conformedValue:L,placeholder:C,rawValue:w,currentCaretPosition:P,placeholderChar:v,indexesOfPipedChars:W.indexesOfPipedChars,caretTrapIndexes:E}),B=L===C&&0===D,H=I?C:c,_=B?H:L;n.previousConformedValue=_,n.previousPlaceholder=C,o.value!==_&&(o.value=_,l(o,D))}}}}};var o=t(4),s=a(o),d=t(3),u=a(d),m=t(2),p=t(1),c="",f="none",h="object",g="undefined"!=typeof navigator&&/Android/i.test(navigator.userAgent),x="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:setTimeout},function(e,n){"use strict";function t(e){return function(){return e}}var a=function(){};a.thatReturns=t,a.thatReturnsFalse=t(!1),a.thatReturnsTrue=t(!0),a.thatReturnsNull=t(null),a.thatReturnsThis=function(){return this},a.thatReturnsArgument=function(e){return e},e.exports=a},function(e,n,t){"use strict";var a=function(e){};e.exports=function(e,n,t,l,r,i,o,s){if(a(n),!e){var d;if(void 0===n)d=new Error("Minified exception occurred; use the non-minified dev environment for the full error message and additional helpful warnings.");else{var u=[t,l,r,i,o,s],m=0;(d=new Error(n.replace(/%s/g,function(){return u[m++]}))).name="Invariant Violation"}throw d.framesToPop=1,d}}},function(e,n,t){"use strict";var a=t(6),l=t(7),r=t(10);e.exports=function(){function e(e,n,t,a,i,o){o!==r&&l(!1,"Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types")}function n(){return e}e.isRequired=e;var t={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:n,element:e,instanceOf:n,node:e,objectOf:n,oneOf:n,oneOfType:n,shape:n,exact:n};return t.checkPropTypes=a,t.PropTypes=t,t}},function(e,n,t){"use strict";"function"==typeof Symbol&&Symbol.iterator,e.exports=t(8)()},function(e,n){"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},function(e,n){e.exports=a}]))},899:function(e,n,t){"use strict";Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var a=i(t(2)),l=i(t(1)),r=t(2649);function i(e){return e&&e.__esModule?e:{default:e}}function o(e){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function s(){return(s=Object.assign||function(e){for(var n=1;n<arguments.length;n++){var t=arguments[n];for(var a in t)Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a])}return e}).apply(this,arguments)}function d(e,n){for(var t=0;t<n.length;t++){var a=n[t];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function u(e){return(u=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function m(e,n){return(m=Object.setPrototypeOf||function(e,n){return e.__proto__=n,e})(e,n)}function p(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}var c={thousandSeparator:a.default.oneOfType([a.default.string,a.default.oneOf([!0])]),decimalSeparator:a.default.string,thousandsGroupStyle:a.default.oneOf(["thousand","lakh","wan"]),decimalScale:a.default.number,fixedDecimalScale:a.default.bool,displayType:a.default.oneOf(["input","text"]),prefix:a.default.string,suffix:a.default.string,format:a.default.oneOfType([a.default.string,a.default.func]),removeFormatting:a.default.func,mask:a.default.oneOfType([a.default.string,a.default.arrayOf(a.default.string)]),value:a.default.oneOfType([a.default.number,a.default.string]),defaultValue:a.default.oneOfType([a.default.number,a.default.string]),isNumericString:a.default.bool,customInput:a.default.func,allowNegative:a.default.bool,allowEmptyFormatting:a.default.bool,onValueChange:a.default.func,onKeyDown:a.default.func,onMouseUp:a.default.func,onChange:a.default.func,onFocus:a.default.func,onBlur:a.default.func,type:a.default.oneOf(["text","tel","password"]),isAllowed:a.default.func,renderText:a.default.func,getInputRef:a.default.func},f={displayType:"input",decimalSeparator:".",thousandsGroupStyle:"thousand",fixedDecimalScale:!1,prefix:"",suffix:"",allowNegative:!0,allowEmptyFormatting:!1,isNumericString:!1,type:"text",onValueChange:r.noop,onChange:r.noop,onKeyDown:r.noop,onMouseUp:r.noop,onFocus:r.noop,onBlur:r.noop,isAllowed:r.returnTrue,getInputRef:r.noop},h=function(e){function n(e){var t,a,l;!function(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}(this,n),a=this,t=!(l=u(n).call(this,e))||"object"!==o(l)&&"function"!=typeof l?p(a):l;var r=e.defaultValue;t.validateProps();var i=t.formatValueProp(r);return t.state={value:i,numAsString:t.removeFormatting(i)},t.selectionBeforeInput={selectionStart:0,selectionEnd:0},t.onChange=t.onChange.bind(p(p(t))),t.onKeyDown=t.onKeyDown.bind(p(p(t))),t.onMouseUp=t.onMouseUp.bind(p(p(t))),t.onFocus=t.onFocus.bind(p(p(t))),t.onBlur=t.onBlur.bind(p(p(t))),t}var t,a,i;return function(e,n){if("function"!=typeof n&&null!==n)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(n&&n.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),n&&m(e,n)}(n,l.default.Component),t=n,(a=[{key:"componentDidUpdate",value:function(e){this.updateValueIfRequired(e)}},{key:"updateValueIfRequired",value:function(e){var n=this.props,t=this.state,a=this.focusedElm,l=t.value,r=t.numAsString,i=void 0===r?"":r;if(e!==n){this.validateProps();var o=this.formatNumString(i),s=void 0===n.value?o:this.formatValueProp(),d=this.removeFormatting(s),u=parseFloat(d),m=parseFloat(i);(isNaN(u)&&isNaN(m)||u===m)&&o===l&&(null!==a||s===l)||this.updateValue({formattedValue:s,numAsString:d,input:a})}}},{key:"getFloatString",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",n=this.props.decimalScale,t=this.getSeparators().decimalSeparator,a=this.getNumberRegex(!0),l="-"===e[0];l&&(e=e.replace("-","")),t&&0===n&&(e=e.split(t)[0]);var i=(e=(e.match(a)||[]).join("").replace(t,".")).indexOf(".");return-1!==i&&(e="".concat(e.substring(0,i),".").concat(e.substring(i+1,e.length).replace(new RegExp((0,r.escapeRegExp)(t),"g"),""))),l&&(e="-"+e),e}},{key:"getNumberRegex",value:function(e,n){var t=this.props,a=t.format,l=t.decimalScale,i=this.getSeparators().decimalSeparator;return new RegExp("\\d"+(!i||0===l||n||a?"":"|"+(0,r.escapeRegExp)(i)),e?"g":void 0)}},{key:"getSeparators",value:function(){var e=this.props.decimalSeparator,n=this.props.thousandSeparator;return!0===n&&(n=","),{decimalSeparator:e,thousandSeparator:n}}},{key:"getMaskAtIndex",value:function(e){var n=this.props.mask,t=void 0===n?" ":n;return"string"==typeof t?t:t[e]||" "}},{key:"getValueObject",value:function(e,n){var t=parseFloat(n);return{formattedValue:e,value:n,floatValue:isNaN(t)?void 0:t}}},{key:"validateProps",value:function(){var e=this.props.mask,n=this.getSeparators(),t=n.decimalSeparator,a=n.thousandSeparator;if(t===a)throw new Error("\n          Decimal separator can't be same as thousand separator.\n          thousandSeparator: ".concat(a,' (thousandSeparator = {true} is same as thousandSeparator = ",")\n          decimalSeparator: ').concat(t," (default value for decimalSeparator is .)\n       "));if(e&&("string"===e?e:e.toString()).match(/\d/g))throw new Error("\n          Mask ".concat(e," should not contain numeric character;\n        "))}},{key:"setPatchedCaretPosition",value:function(e,n,t){(0,r.setCaretPosition)(e,n),setTimeout(function(){e.value===t&&(0,r.setCaretPosition)(e,n)},0)}},{key:"correctCaretPosition",value:function(e,n,t){var a=this.props,l=a.prefix,i=a.suffix,o=a.format;if(""===e)return 0;if(n=(0,r.clamp)(n,0,e.length),!o){var s="-"===e[0];return(0,r.clamp)(n,l.length+(s?1:0),e.length-i.length)}if("function"==typeof o)return n;if("#"===o[n]&&(0,r.charIsNumber)(e[n]))return n;if("#"===o[n-1]&&(0,r.charIsNumber)(e[n-1]))return n;var d=o.indexOf("#"),u=o.lastIndexOf("#");n=(0,r.clamp)(n,d,u+1);for(var m=o.substring(n,o.length).indexOf("#"),p=n,c=n+(-1===m?0:m);p>d&&("#"!==o[p]||!(0,r.charIsNumber)(e[p]));)p-=1;return!(0,r.charIsNumber)(e[c])||"left"===t&&n!==d||n-p<c-n?(0,r.charIsNumber)(e[p])?p+1:p:c}},{key:"getCaretPosition",value:function(e,n,t){var a,l,r=this.props.format,i=this.state.value,o=this.getNumberRegex(!0),s=(e.match(o)||[]).join(""),d=(n.match(o)||[]).join("");for(a=0,l=0;l<t;l++){var u=e[l]||"",m=n[a]||"";if((u.match(o)||u===m)&&("0"!==u||!m.match(o)||"0"===m||s.length===d.length)){for(;u!==n[a]&&a<n.length;)a++;a++}}return"string"!=typeof r||i||(a=n.length),a=this.correctCaretPosition(n,a)}},{key:"removePrefixAndSuffix",value:function(e){var n=this.props,t=n.format,a=n.prefix,l=n.suffix;if(!t&&e){var r="-"===e[0];r&&(e=e.substring(1,e.length));var i=(e=a&&0===e.indexOf(a)?e.substring(a.length,e.length):e).lastIndexOf(l);e=l&&-1!==i&&i===e.length-l.length?e.substring(0,i):e,r&&(e="-"+e)}return e}},{key:"removePatternFormatting",value:function(e){for(var n=this.props.format.split("#").filter(function(e){return""!==e}),t=0,a="",l=0,r=n.length;l<=r;l++){var i=n[l]||"",o=l===r?e.length:e.indexOf(i,t);if(-1===o){a=e;break}a+=e.substring(t,o),t=o+i.length}return(a.match(/\d/g)||[]).join("")}},{key:"removeFormatting",value:function(e){var n=this.props,t=n.format,a=n.removeFormatting;return e?(t?e="string"==typeof t?this.removePatternFormatting(e):"function"==typeof a?a(e):(e.match(/\d/g)||[]).join(""):(e=this.removePrefixAndSuffix(e),e=this.getFloatString(e)),e):e}},{key:"formatWithPattern",value:function(e){for(var n=this.props.format,t=0,a=n.split(""),l=0,r=n.length;l<r;l++)"#"===n[l]&&(a[l]=e[t]||this.getMaskAtIndex(t),t+=1);return a.join("")}},{key:"formatAsNumber",value:function(e){var n=this.props,t=n.decimalScale,a=n.fixedDecimalScale,l=n.prefix,i=n.suffix,o=n.allowNegative,s=n.thousandsGroupStyle,d=this.getSeparators(),u=d.thousandSeparator,m=d.decimalSeparator,p=-1!==e.indexOf(".")||t&&a,c=(0,r.splitDecimal)(e,o),f=c.beforeDecimal,h=c.afterDecimal,g=c.addNegation;if(void 0!==t&&(h=(0,r.limitToScale)(h,t,a)),u){var x=(0,r.getThousandsGroupRegex)(s);f=f.replace(x,"$1"+u)}return l&&(f=l+f),i&&(h+=i),g&&(f="-"+f),e=f+(p&&m||"")+h}},{key:"formatNumString",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",n=this.props,t=n.format,a=n.allowEmptyFormatting,l=e;return l=""!==e||a?"-"!==e||t?"string"==typeof t?this.formatWithPattern(l):"function"==typeof t?t(l):this.formatAsNumber(l):"-":""}},{key:"formatValueProp",value:function(e){var n=this.props,t=n.format,a=n.decimalScale,l=n.fixedDecimalScale,i=n.allowEmptyFormatting,o=this.props,s=o.value,d=void 0===s?e:s,u=o.isNumericString,m=!d&&0!==d;return m&&i&&(d=""),m&&!i?"":("number"==typeof d&&(d=d.toString(),u=!0),"Infinity"===d&&u&&(d=""),u&&!t&&"number"==typeof a&&(d=(0,r.roundToPrecision)(d,a,l)),u?this.formatNumString(d):this.formatInput(d))}},{key:"formatNegation",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"",n=this.props.allowNegative,t=new RegExp("(-)"),a=new RegExp("(-)(.)*(-)"),l=t.test(e),r=a.test(e);return e=e.replace(/-/g,""),l&&!r&&n&&(e="-"+e),e}},{key:"formatInput",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"";return this.props.format||(e=this.removePrefixAndSuffix(e),e=this.formatNegation(e)),e=this.removeFormatting(e),this.formatNumString(e)}},{key:"isCharacterAFormat",value:function(e,n){var t=this.props,a=t.format,l=t.prefix,r=t.suffix,i=t.decimalScale,o=t.fixedDecimalScale,s=this.getSeparators().decimalSeparator;return"string"==typeof a&&"#"!==a[e]||!(a||!(e<l.length||e>=n.length-r.length||i&&o&&n[e]===s))}},{key:"checkIfFormatGotDeleted",value:function(e,n,t){for(var a=e;a<n;a++)if(this.isCharacterAFormat(a,t))return!0;return!1}},{key:"correctInputValue",value:function(e,n,t){var a=this.props,l=a.format,i=a.allowNegative,o=a.prefix,s=a.suffix,d=this.getSeparators().decimalSeparator,u=this.state.numAsString||"",m=this.selectionBeforeInput,p=m.selectionStart,c=m.selectionEnd,f=(0,r.findChangedIndex)(n,t),h=f.start,g=f.end;if(!l&&"."!==d&&h===g&&"."===t[p])return t.substr(0,p)+d+t.substr(p+1,t.length);var x=l?0:o.length,v=n.length-(l?0:s.length);if(t.length>n.length||!t.length||h===g||0===p&&c===n.length||p===x&&c===v)return t;if(this.checkIfFormatGotDeleted(h,g,n)&&(t=n),!l){var b=this.removeFormatting(t),y=(0,r.splitDecimal)(b,i),F=y.beforeDecimal,I=y.afterDecimal,C=y.addNegation,T=e<t.indexOf(d)+1;if(b.length<u.length&&T&&""===F&&!parseFloat(I))return C?"-":""}return t}},{key:"updateValue",value:function(e){var n=this,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:r.noop,a=e.formattedValue,l=e.input,i=e.numAsString,o=e.caretPos,s=this.props.onValueChange,d=this.state.value;if(l){if(!o){var u=e.inputValue||l.value,m=(0,r.getCurrentCaretPosition)(l);o=this.getCaretPosition(u,a,m)}l.value=a,this.setPatchedCaretPosition(l,o,a)}void 0===i&&(i=this.removeFormatting(a)),a!==d?this.setState({value:a,numAsString:i},function(){s(n.getValueObject(a,i)),t()}):t()}},{key:"onChange",value:function(e){e.persist();var n=e.target,t=n.value,a=this.state,l=this.props,i=l.isAllowed,o=a.value||"",s=(0,r.getCurrentCaretPosition)(n);t=this.correctInputValue(s,o,t);var d=this.formatInput(t)||"",u=this.removeFormatting(d);i(this.getValueObject(d,u))||(d=o),this.updateValue({formattedValue:d,numAsString:u,inputValue:t,input:n},function(){l.onChange(e)})}},{key:"onBlur",value:function(e){var n=this.props,t=this.state,a=n.format,l=n.onBlur,i=t.numAsString,o=t.value;if(this.focusedElm=null,!a){i=(0,r.fixLeadingZero)(i);var s=this.formatNumString(i);if(s!==o)return e.persist(),void this.updateValue({formattedValue:s,numAsString:i},function(){l(e)})}l(e)}},{key:"onKeyDown",value:function(e){var n,t=e.target,a=e.key,l=t.selectionStart,r=t.selectionEnd,i=t.value,o=void 0===i?"":i,s=this.props,d=s.decimalScale,u=s.fixedDecimalScale,m=s.prefix,p=s.suffix,c=s.format,f=s.onKeyDown,h=(s.onValueChange,void 0!==d&&u),g=this.getNumberRegex(!1,h),x=new RegExp("-"),v="string"==typeof c;if(this.selectionBeforeInput={selectionStart:l,selectionEnd:r},"ArrowLeft"===a||"Backspace"===a?n=l-1:"ArrowRight"===a?n=l+1:"Delete"===a&&(n=l),void 0!==n&&l===r){var b=n,y=v?c.indexOf("#"):m.length,F=v?c.lastIndexOf("#")+1:o.length-p.length;if("ArrowLeft"===a||"ArrowRight"===a){var I="ArrowLeft"===a?"left":"right";b=this.correctCaretPosition(o,n,I)}else if("Delete"!==a||g.test(o[n])||x.test(o[n])){if("Backspace"===a&&!g.test(o[n]))if(l<=y+1&&"-"===o[0]&&void 0===c){var C=o.substring(1);e.persist(),this.updateValue({formattedValue:C,caretPos:b,input:t})}else if(!x.test(o[n])){for(;!g.test(o[b-1])&&b>y;)b--;b=this.correctCaretPosition(o,b,"left")}}else for(;!g.test(o[b])&&b<F;)b++;(b!==n||n<y||n>F)&&(e.preventDefault(),this.setPatchedCaretPosition(t,b,o)),e.isUnitTestRun&&this.setPatchedCaretPosition(t,b,o),this.props.onKeyDown(e)}else f(e)}},{key:"onMouseUp",value:function(e){var n=e.target,t=n.selectionStart,a=n.selectionEnd,l=n.value,r=void 0===l?"":l;if(t===a){var i=this.correctCaretPosition(r,t);i!==t&&this.setPatchedCaretPosition(n,i,r)}this.props.onMouseUp(e)}},{key:"onFocus",value:function(e){var n=this;e.persist(),this.focusedElm=e.target,setTimeout(function(){var t=e.target,a=t.selectionStart,l=t.selectionEnd,r=t.value,i=void 0===r?"":r,o=n.correctCaretPosition(i,a);o===a||0===a&&l===i.length||n.setPatchedCaretPosition(t,o,i),n.props.onFocus(e)},0)}},{key:"render",value:function(){var e=this.props,n=e.type,t=e.displayType,a=e.customInput,i=e.renderText,o=e.getInputRef,d=this.state.value,u=(0,r.omit)(this.props,c),m=s({},u,{type:n,value:d,onChange:this.onChange,onKeyDown:this.onKeyDown,onMouseUp:this.onMouseUp,onFocus:this.onFocus,onBlur:this.onBlur});if("text"===t)return i?i(d)||null:l.default.createElement("span",s({},u,{ref:o}),d);if(a){var p=a;return l.default.createElement(p,m)}return l.default.createElement("input",s({},m,{ref:o}))}}])&&d(t.prototype,a),i&&d(t,i),n}();h.propTypes=c,h.defaultProps=f;var g=h;n.default=g,e.exports=n.default},93:function(e,n,t){"use strict";var a=t(0);Object.defineProperty(n,"__esModule",{value:!0}),n.default=n.styles=void 0;var l=a(t(3)),r=a(t(6)),i=a(t(4)),o=a(t(1)),s=(a(t(2)),a(t(5))),d=(t(9),a(t(30))),u=a(t(23)),m=a(t(7)),p=function(e){return{root:{color:e.palette.text.secondary,fontFamily:e.typography.fontFamily,fontSize:e.typography.pxToRem(12),textAlign:"left",marginTop:8,lineHeight:"1em",minHeight:"1em",margin:0,"&$disabled":{color:e.palette.text.disabled},"&$error":{color:e.palette.error.main}},error:{},disabled:{},marginDense:{marginTop:4},contained:{margin:"8px 12px 0"},focused:{},filled:{},required:{}}};function c(e){var n,t=e.classes,a=e.className,u=e.component,m=(e.disabled,e.error,e.filled,e.focused,e.margin,e.muiFormControl),p=(e.required,e.variant,(0,i.default)(e,["classes","className","component","disabled","error","filled","focused","margin","muiFormControl","required","variant"])),c=(0,d.default)({props:e,muiFormControl:m,states:["variant","margin","disabled","error","filled","focused","required"]});return o.default.createElement(u,(0,l.default)({className:(0,s.default)(t.root,(n={},(0,r.default)(n,t.contained,"filled"===c.variant||"outlined"===c.variant),(0,r.default)(n,t.marginDense,"dense"===c.margin),(0,r.default)(n,t.disabled,c.disabled),(0,r.default)(n,t.error,c.error),(0,r.default)(n,t.filled,c.filled),(0,r.default)(n,t.focused,c.focused),(0,r.default)(n,t.required,c.required),n),a)},p))}n.styles=p,c.defaultProps={component:"p"};var f=(0,m.default)(p,{name:"MuiFormHelperText"})((0,u.default)(c));n.default=f},95:function(e,n,t){"use strict";var a=t(0);Object.defineProperty(n,"__esModule",{value:!0}),n.default=n.styles=void 0;var l=a(t(6)),r=a(t(3)),i=a(t(4)),o=a(t(1)),s=(a(t(2)),a(t(5))),d=(t(9),a(t(68))),u=a(t(7)),m=function(e){var n="light"===e.palette.type,t=n?"rgba(0, 0, 0, 0.42)":"rgba(255, 255, 255, 0.7)",a=n?"rgba(0, 0, 0, 0.09)":"rgba(255, 255, 255, 0.09)";return{root:{position:"relative",backgroundColor:a,borderTopLeftRadius:e.shape.borderRadius,borderTopRightRadius:e.shape.borderRadius,transition:e.transitions.create("background-color",{duration:e.transitions.duration.shorter,easing:e.transitions.easing.easeOut}),"&:hover":{backgroundColor:n?"rgba(0, 0, 0, 0.13)":"rgba(255, 255, 255, 0.13)","@media (hover: none)":{backgroundColor:a}},"&$focused":{backgroundColor:n?"rgba(0, 0, 0, 0.09)":"rgba(255, 255, 255, 0.09)"},"&$disabled":{backgroundColor:n?"rgba(0, 0, 0, 0.12)":"rgba(255, 255, 255, 0.12)"}},underline:{"&:after":{borderBottom:"2px solid ".concat(e.palette.primary[n?"dark":"light"]),left:0,bottom:0,content:'""',position:"absolute",right:0,transform:"scaleX(0)",transition:e.transitions.create("transform",{duration:e.transitions.duration.shorter,easing:e.transitions.easing.easeOut}),pointerEvents:"none"},"&$focused:after":{transform:"scaleX(1)"},"&$error:after":{borderBottomColor:e.palette.error.main,transform:"scaleX(1)"},"&:before":{borderBottom:"1px solid ".concat(t),left:0,bottom:0,content:'"\\00a0"',position:"absolute",right:0,transition:e.transitions.create("border-bottom-color",{duration:e.transitions.duration.shorter}),pointerEvents:"none"},"&:hover:not($disabled):not($focused):not($error):before":{borderBottom:"1px solid ".concat(e.palette.text.primary)},"&$disabled:before":{borderBottom:"1px dotted ".concat(t)}},focused:{},disabled:{},adornedStart:{paddingLeft:12},adornedEnd:{paddingRight:12},error:{},multiline:{padding:"27px 12px 10px",boxSizing:"border-box"},input:{padding:"27px 12px 10px"},inputMarginDense:{paddingTop:24,paddingBottom:6},inputMultiline:{padding:0},inputAdornedStart:{paddingLeft:0},inputAdornedEnd:{paddingRight:0}}};function p(e){var n=e.disableUnderline,t=e.classes,a=(0,i.default)(e,["disableUnderline","classes"]);return o.default.createElement(d.default,(0,r.default)({classes:(0,r.default)({},t,{root:(0,s.default)(t.root,(0,l.default)({},t.underline,!n)),underline:null})},a))}n.styles=m,d.default.defaultProps={fullWidth:!1,inputComponent:"input",multiline:!1,type:"text"},p.muiName="Input";var c=(0,u.default)(m,{name:"MuiFilledInput"})(p);n.default=c},96:function(e,n,t){"use strict";var a=t(0);Object.defineProperty(n,"__esModule",{value:!0}),n.default=n.styles=void 0;var l=a(t(3)),r=a(t(4)),i=a(t(1)),o=(a(t(2)),a(t(5))),s=(t(9),a(t(68))),d=a(t(97)),u=a(t(7)),m=function(e){var n="light"===e.palette.type?"rgba(0, 0, 0, 0.23)":"rgba(255, 255, 255, 0.23)";return{root:{position:"relative","& $notchedOutline":{borderColor:n},"&:hover:not($disabled):not($focused):not($error) $notchedOutline":{borderColor:e.palette.text.primary,"@media (hover: none)":{borderColor:n}},"&$focused $notchedOutline":{borderColor:e.palette.primary.main,borderWidth:2},"&$error $notchedOutline":{borderColor:e.palette.error.main},"&$disabled $notchedOutline":{borderColor:e.palette.action.disabled}},focused:{},disabled:{},adornedStart:{paddingLeft:14},adornedEnd:{paddingRight:14},error:{},multiline:{padding:"18.5px 14px",boxSizing:"border-box"},notchedOutline:{},input:{padding:"18.5px 14px"},inputMarginDense:{paddingTop:15,paddingBottom:15},inputMultiline:{padding:0},inputAdornedStart:{paddingLeft:0},inputAdornedEnd:{paddingRight:0}}};function p(e){var n=e.classes,t=e.labelWidth,a=e.notched,u=(0,r.default)(e,["classes","labelWidth","notched"]);return i.default.createElement(s.default,(0,l.default)({renderPrefix:function(e){return i.default.createElement(d.default,{className:n.notchedOutline,labelWidth:t,notched:void 0!==a?a:Boolean(e.startAdornment||e.filled||e.focused)})},classes:(0,l.default)({},n,{root:(0,o.default)(n.root,n.underline),notchedOutline:null})},u))}n.styles=m,s.default.defaultProps={fullWidth:!1,inputComponent:"input",multiline:!1,type:"text"},p.muiName="Input";var c=(0,u.default)(m,{name:"MuiOutlinedInput"})(p);n.default=c},97:function(e,n,t){"use strict";var a=t(0);Object.defineProperty(n,"__esModule",{value:!0}),n.default=n.styles=void 0;var l=a(t(6)),r=a(t(3)),i=a(t(4)),o=a(t(1)),s=(a(t(2)),a(t(5))),d=t(8),u=t(22),m=function(e){var n="rtl"===e.direction?"right":"left";return{root:{position:"absolute",bottom:0,right:0,top:-5,left:0,margin:0,padding:0,pointerEvents:"none",borderRadius:e.shape.borderRadius,borderStyle:"solid",borderWidth:1,transition:e.transitions.create(["padding-".concat(n),"border-color","border-width"],{duration:e.transitions.duration.shorter,easing:e.transitions.easing.easeOut})},legend:{textAlign:"left",padding:0,lineHeight:"11px",transition:e.transitions.create("width",{duration:e.transitions.duration.shorter,easing:e.transitions.easing.easeOut})}}};n.styles=m;var p=(0,d.withStyles)(m,{name:"MuiPrivateNotchedOutline",withTheme:!0})(function(e){e.children;var n=e.classes,t=e.className,a=e.labelWidth,d=e.notched,m=e.style,p=e.theme,c=(0,i.default)(e,["children","classes","className","labelWidth","notched","style","theme"]),f="rtl"===p.direction?"right":"left",h=a>0?.75*a+8:0;return o.default.createElement("fieldset",(0,r.default)({"aria-hidden":!0,style:(0,r.default)((0,l.default)({},"padding".concat((0,u.capitalize)(f)),8+(d?0:h/2)),m),className:(0,s.default)(n.root,t)},c),o.default.createElement("legend",{className:n.legend,style:{width:d?h:.01}},o.default.createElement("span",{dangerouslySetInnerHTML:{__html:"&#8203;"}})))});n.default=p},98:function(e,n,t){"use strict";var a=t(0);Object.defineProperty(n,"__esModule",{value:!0}),n.default=void 0;var l=a(t(3)),r=a(t(4)),i=a(t(10)),o=a(t(11)),s=a(t(12)),d=a(t(13)),u=a(t(14)),m=a(t(1)),p=a(t(52)),c=(a(t(20)),a(t(2)),a(t(35))),f=a(t(83)),h=a(t(84)),g=a(t(47)),x=a(t(36)),v=a(t(62)),b=a(t(59)),y={standard:c.default,filled:f.default,outlined:h.default},F=function(e){function n(e){var t;return(0,i.default)(this,n),(t=(0,s.default)(this,(0,d.default)(n).call(this,e))).labelRef=m.default.createRef(),t}return(0,u.default)(n,e),(0,o.default)(n,[{key:"componentDidMount",value:function(){"outlined"===this.props.variant&&(this.labelNode=p.default.findDOMNode(this.labelRef.current),this.forceUpdate())}},{key:"render",value:function(){var e=this.props,n=e.autoComplete,t=e.autoFocus,a=e.children,i=e.className,o=e.defaultValue,s=e.error,d=e.FormHelperTextProps,u=e.fullWidth,p=e.helperText,c=e.id,f=e.InputLabelProps,h=e.inputProps,F=e.InputProps,I=e.inputRef,C=e.label,T=e.multiline,w=e.name,P=e.onBlur,N=e.onChange,S=e.onFocus,E=e.placeholder,k=e.required,M=e.rows,A=e.rowsMax,R=e.select,O=e.SelectProps,j=e.type,V=e.value,W=e.variant,L=(0,r.default)(e,["autoComplete","autoFocus","children","className","defaultValue","error","FormHelperTextProps","fullWidth","helperText","id","InputLabelProps","inputProps","InputProps","inputRef","label","multiline","name","onBlur","onChange","onFocus","placeholder","required","rows","rowsMax","select","SelectProps","type","value","variant"]),D={};"outlined"===W&&(f&&void 0!==f.shrink&&(D.notched=f.shrink),D.labelWidth=this.labelNode&&this.labelNode.offsetWidth||0);var B=p&&c?"".concat(c,"-helper-text"):void 0,H=y[W],_=m.default.createElement(H,(0,l.default)({"aria-describedby":B,autoComplete:n,autoFocus:t,defaultValue:o,fullWidth:u,multiline:T,name:w,rows:M,rowsMax:A,type:j,value:V,id:c,inputRef:I,onBlur:P,onChange:N,onFocus:S,placeholder:E,inputProps:h},D,F));return m.default.createElement(x.default,(0,l.default)({className:i,error:s,fullWidth:u,required:k,variant:W},L),C&&m.default.createElement(g.default,(0,l.default)({htmlFor:c,ref:this.labelRef},f),C),R?m.default.createElement(b.default,(0,l.default)({"aria-describedby":B,value:V,input:_},O),a):_,p&&m.default.createElement(v.default,(0,l.default)({id:B},d),p))}}]),n}(m.default.Component);F.defaultProps={required:!1,select:!1,variant:"standard"};var I=F;n.default=I}},[[2637,1,0]]]);